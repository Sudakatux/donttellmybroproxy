["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@material-ui/core/InputBase/utils.js"],"~:js","shadow$provide.module$node_modules$$material_ui$core$InputBase$utils=function(global,require,module,exports){function hasValue(value){return null!=value&&!(Array.isArray(value)&&0===value.length)}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.hasValue=hasValue;exports.isFilled=function(obj){var SSR=1<arguments.length&&void 0!==arguments[1]?arguments[1]:!1;return obj&&(hasValue(obj.value)&&\"\"!==obj.value||SSR&&hasValue(obj.defaultValue)&&\"\"!==obj.defaultValue)};exports.isAdornedStart=\nfunction(obj){return obj.startAdornment}}","~:source","shadow$provide[\"module$node_modules$$material_ui$core$InputBase$utils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hasValue = hasValue;\nexports.isFilled = isFilled;\nexports.isAdornedStart = isAdornedStart;\n\n// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nfunction hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\n\nfunction isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\n\nfunction isAdornedStart(obj) {\n  return obj.startAdornment;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["hasValue","__esModule","isAdornedStart","isFilled","value"]],"~:compiled-at",1570449014680,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$material_ui$core$InputBase$utils.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAgBlHC,QAASA,SAAQ,CAACC,KAAD,CAAQ,CACvB,MAAgB,KAAhB,EAAOA,KAAP,EAAwB,EAAEC,KAAAC,QAAA,CAAcF,KAAd,CAAF,EAA2C,CAA3C,GAA0BA,KAAAG,OAA1B,CADD,CAbzBC,MAAAC,eAAA,CAAsBP,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CE,MAAO,CAAA,CADoC,CAA7C,CAGAF,QAAAC,SAAA,CAAmBA,QACnBD,QAAAQ,SAAA,CAoBAA,QAAiB,CAACC,GAAD,CAAM,CACrB,IAAIC,IAAyB,CAAnB,CAAAC,SAAAN,OAAA,EAAyCO,IAAAA,EAAzC,GAAwBD,SAAA,CAAU,CAAV,CAAxB,CAAqDA,SAAA,CAAU,CAAV,CAArD,CAAoE,CAAA,CAC9E,OAAOF,IAAP,GAAeR,QAAA,CAASQ,GAAAP,MAAT,CAAf,EAAoD,EAApD,GAAsCO,GAAAP,MAAtC,EAA0DQ,GAA1D,EAAiET,QAAA,CAASQ,GAAAI,aAAT,CAAjE,EAAoH,EAApH,GAA+FJ,GAAAI,aAA/F,CAFqB,CAnBvBb,QAAAc,eAAA;AA8BAA,QAAuB,CAACL,GAAD,CAAM,CAC3B,MAAOA,IAAAM,eADoB,CAtCqF;\",\n\"sources\":[\"node_modules/@material-ui/core/InputBase/utils.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$material_ui$core$InputBase$utils\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.hasValue = hasValue;\\nexports.isFilled = isFilled;\\nexports.isAdornedStart = isAdornedStart;\\n\\n// Supports determination of isControlled().\\n// Controlled input accepts its current value as a prop.\\n//\\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\\n// @param value\\n// @returns {boolean} true if string (including '') or number (including zero)\\nfunction hasValue(value) {\\n  return value != null && !(Array.isArray(value) && value.length === 0);\\n} // Determine if field is empty or filled.\\n// Response determines if label is presented above field or as placeholder.\\n//\\n// @param obj\\n// @param SSR\\n// @returns {boolean} False when not present or empty string.\\n//                    True when any number or string with length.\\n\\n\\nfunction isFilled(obj) {\\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\\n} // Determine if an Input is adorned on start.\\n// It's corresponding to the left with LTR.\\n//\\n// @param obj\\n// @returns {boolean} False when no adornments.\\n//                    True when adorned at the start.\\n\\n\\nfunction isAdornedStart(obj) {\\n  return obj.startAdornment;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"hasValue\",\"value\",\"Array\",\"isArray\",\"length\",\"Object\",\"defineProperty\",\"isFilled\",\"obj\",\"SSR\",\"arguments\",\"undefined\",\"defaultValue\",\"isAdornedStart\",\"startAdornment\"]\n}\n"]