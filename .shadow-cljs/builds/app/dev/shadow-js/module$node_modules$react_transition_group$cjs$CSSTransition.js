["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/react-transition-group/cjs/CSSTransition.js"],"~:js","shadow$provide.module$node_modules$react_transition_group$cjs$CSSTransition=function(global,require,module,exports){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,arguments)}function _inheritsLoose(subClass,\nsuperClass){subClass.prototype=Object.create(superClass.prototype);subClass.prototype.constructor=subClass;subClass.__proto__=superClass}exports.__esModule=!0;exports.default=void 0;global=_interopRequireDefault(require(\"module$node_modules$prop_types$index\"));var _addClass2=_interopRequireDefault(require(\"module$node_modules$dom_helpers$cjs$addClass\")),_removeClass=_interopRequireDefault(require(\"module$node_modules$dom_helpers$cjs$removeClass\")),_react=_interopRequireDefault(require(\"module$node_modules$react$index\")),\n_Transition=_interopRequireDefault(require(\"module$node_modules$react_transition_group$cjs$Transition\"));require=require(\"module$node_modules$react_transition_group$cjs$utils$PropTypes\");var _addClass=function(node,classes){return node&&classes&&classes.split(\" \").forEach(function(c){return(0,_addClass2.default)(node,c)})},removeClass=function(node,classes){return node&&classes&&classes.split(\" \").forEach(function(c){return(0,_removeClass.default)(node,c)})},CSSTransition=function(_React$Component){function CSSTransition(){for(var _this,\n_len=arguments.length,args=Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];_this=_React$Component.call.apply(_React$Component,[this].concat(args))||this;_this.appliedClasses={appear:{},enter:{},exit:{}};_this.onEnter=function(node,appearing){_this.removeClasses(node,\"exit\");_this.addClass(node,appearing?\"appear\":\"enter\",\"base\");if(_this.props.onEnter)_this.props.onEnter(node,appearing)};_this.onEntering=function(node,appearing){_this.addClass(node,appearing?\"appear\":\"enter\",\"active\");\nif(_this.props.onEntering)_this.props.onEntering(node,appearing)};_this.onEntered=function(node,appearing){var type=appearing?\"appear\":\"enter\";_this.removeClasses(node,type);_this.addClass(node,type,\"done\");if(_this.props.onEntered)_this.props.onEntered(node,appearing)};_this.onExit=function(node){_this.removeClasses(node,\"appear\");_this.removeClasses(node,\"enter\");_this.addClass(node,\"exit\",\"base\");if(_this.props.onExit)_this.props.onExit(node)};_this.onExiting=function(node){_this.addClass(node,\n\"exit\",\"active\");if(_this.props.onExiting)_this.props.onExiting(node)};_this.onExited=function(node){_this.removeClasses(node,\"exit\");_this.addClass(node,\"exit\",\"done\");if(_this.props.onExited)_this.props.onExited(node)};_this.getClassNames=function(type){var classNames=_this.props.classNames,isStringClassNames=\"string\"===typeof classNames,baseClassName=isStringClassNames?(isStringClassNames&&classNames?classNames+\"-\":\"\")+type:classNames[type];return{baseClassName:baseClassName,activeClassName:isStringClassNames?\nbaseClassName+\"-active\":classNames[type+\"Active\"],doneClassName:isStringClassNames?baseClassName+\"-done\":classNames[type+\"Done\"]}};return _this}_inheritsLoose(CSSTransition,_React$Component);var _proto=CSSTransition.prototype;_proto.addClass=function(node,type,phase){var className=this.getClassNames(type)[phase+\"ClassName\"];\"appear\"===type&&\"done\"===phase&&(className+=\" \"+this.getClassNames(\"enter\").doneClassName);\"active\"===phase&&(node&&node.scrollTop);this.appliedClasses[type][phase]=className;\n_addClass(node,className)};_proto.removeClasses=function(node,type){var _this$appliedClasses$=this.appliedClasses[type],baseClassName=_this$appliedClasses$.base,activeClassName=_this$appliedClasses$.active;_this$appliedClasses$=_this$appliedClasses$.done;this.appliedClasses[type]={};baseClassName&&removeClass(node,baseClassName);activeClassName&&removeClass(node,activeClassName);_this$appliedClasses$&&removeClass(node,_this$appliedClasses$)};_proto.render=function(){var _this$props=this.props;var excluded=\n[\"classNames\"];if(null==_this$props)_this$props={};else{var target={},sourceKeys=Object.keys(_this$props),i;for(i=0;i<sourceKeys.length;i++){var key=sourceKeys[i];0<=excluded.indexOf(key)||(target[key]=_this$props[key])}_this$props=target}return _react.default.createElement(_Transition.default,_extends({},_this$props,{onEnter:this.onEnter,onEntered:this.onEntered,onEntering:this.onEntering,onExit:this.onExit,onExiting:this.onExiting,onExited:this.onExited}))};return CSSTransition}(_react.default.Component);\nCSSTransition.defaultProps={classNames:\"\"};CSSTransition.propTypes=_extends({},_Transition.default.propTypes,{classNames:require.classNamesShape,onEnter:global.default.func,onEntering:global.default.func,onEntered:global.default.func,onExit:global.default.func,onExiting:global.default.func,onExited:global.default.func});exports.default=CSSTransition;module.exports=exports[\"default\"]}","~:source","shadow$provide[\"module$node_modules$react_transition_group$cjs$CSSTransition\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _addClass2 = _interopRequireDefault(require(\"dom-helpers/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass2.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n * using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (node, appearing) {\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    if (type === 'appear' && phase === 'done') {\n      className += \" \" + this.getClassNames('enter').doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    this.appliedClasses[type][phase] = className;\n\n    _addClass(node, className);\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided and it\n   * will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-appear`, `fade-appear-active`,\n   * `fade-appear-done`, `fade-enter`, `fade-enter-active`, `fade-enter-done`,\n   * `fade-exit`, `fade-exit-active`, and `fade-exit-done`.\n   *\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\n   * This allows you to define different behavior for when appearing is done and\n   * when regular entering is done, using selectors like\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\n   * epic entrance animation when element first appears in the DOM using\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   * simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: _propTypes.default.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: _propTypes.default.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$dom_helpers$cjs$removeClass","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$shadow.js","~$module$node_modules$dom_helpers$cjs$addClass","~$module$node_modules$react_transition_group$cjs$utils$PropTypes","~$module$node_modules$react_transition_group$cjs$Transition"]],"~:properties",["^5",["appear","classNames","getClassNames","onExited","prototype","appliedClasses","activeClassName","__esModule","propTypes","removeClasses","onEntering","onExit","onEntered","doneClassName","defaultProps","render","onExiting","__proto__","baseClassName","exit","onEnter","addClass","enter","default","constructor"]],"~:compiled-at",1570449014718,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$react_transition_group$cjs$CSSTransition.js\",\n\"lineCount\":10,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/react-transition-group/cjs/CSSTransition.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$react_transition_group$cjs$CSSTransition\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nexports.__esModule = true;\\nexports.default = void 0;\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _addClass2 = _interopRequireDefault(require(\\\"dom-helpers/addClass\\\"));\\n\\nvar _removeClass = _interopRequireDefault(require(\\\"dom-helpers/removeClass\\\"));\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\n\\nvar _Transition = _interopRequireDefault(require(\\\"./Transition\\\"));\\n\\nvar _PropTypes = require(\\\"./utils/PropTypes\\\");\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\\n\\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\\n\\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\\n\\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\\n\\nvar _addClass = function addClass(node, classes) {\\n  return node && classes && classes.split(' ').forEach(function (c) {\\n    return (0, _addClass2.default)(node, c);\\n  });\\n};\\n\\nvar removeClass = function removeClass(node, classes) {\\n  return node && classes && classes.split(' ').forEach(function (c) {\\n    return (0, _removeClass.default)(node, c);\\n  });\\n};\\n/**\\n * A transition component inspired by the excellent\\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\\n * using CSS transitions or animations. It's built upon the\\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\\n * component, so it inherits all of its props.\\n *\\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\\n * and `exit` states of the transition. The first class is applied and then a\\n * second `*-active` class in order to activate the CSS transition. After the\\n * transition, matching `*-done` class names are applied to persist the\\n * transition state.\\n *\\n * ```jsx\\n * function App() {\\n *   const [inProp, setInProp] = useState(false);\\n *   return (\\n *     <div>\\n *       <CSSTransition in={inProp} timeout={200} classNames=\\\"my-node\\\">\\n *         <div>\\n *           {\\\"I'll receive my-node-* classes\\\"}\\n *         </div>\\n *       </CSSTransition>\\n *       <button type=\\\"button\\\" onClick={() => setInProp(true)}>\\n *         Click to Enter\\n *       </button>\\n *     </div>\\n *   );\\n * }\\n * ```\\n *\\n * When the `in` prop is set to `true`, the child component will first receive\\n * the class `example-enter`, then the `example-enter-active` will be added in\\n * the next tick. `CSSTransition` [forces a\\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\\n * between before adding the `example-enter-active`. This is an important trick\\n * because it allows us to transition between `example-enter` and\\n * `example-enter-active` even though they were added immediately one after\\n * another. Most notably, this is what makes it possible for us to animate\\n * _appearance_.\\n *\\n * ```css\\n * .my-node-enter {\\n *   opacity: 0;\\n * }\\n * .my-node-enter-active {\\n *   opacity: 1;\\n *   transition: opacity 200ms;\\n * }\\n * .my-node-exit {\\n *   opacity: 1;\\n * }\\n * .my-node-exit-active {\\n *   opacity: 0;\\n *   transition: opacity 200ms;\\n * }\\n * ```\\n *\\n * `*-active` classes represent which styles you want to animate **to**.\\n *\\n * **Note**: If you're using the\\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\\n * prop, make sure to define styles for `.appear-*` classes as well.\\n */\\n\\n\\nvar CSSTransition =\\n/*#__PURE__*/\\nfunction (_React$Component) {\\n  _inheritsLoose(CSSTransition, _React$Component);\\n\\n  function CSSTransition() {\\n    var _this;\\n\\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n      args[_key] = arguments[_key];\\n    }\\n\\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\\n    _this.appliedClasses = {\\n      appear: {},\\n      enter: {},\\n      exit: {}\\n    };\\n\\n    _this.onEnter = function (node, appearing) {\\n      _this.removeClasses(node, 'exit');\\n\\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\\n\\n      if (_this.props.onEnter) {\\n        _this.props.onEnter(node, appearing);\\n      }\\n    };\\n\\n    _this.onEntering = function (node, appearing) {\\n      var type = appearing ? 'appear' : 'enter';\\n\\n      _this.addClass(node, type, 'active');\\n\\n      if (_this.props.onEntering) {\\n        _this.props.onEntering(node, appearing);\\n      }\\n    };\\n\\n    _this.onEntered = function (node, appearing) {\\n      var type = appearing ? 'appear' : 'enter';\\n\\n      _this.removeClasses(node, type);\\n\\n      _this.addClass(node, type, 'done');\\n\\n      if (_this.props.onEntered) {\\n        _this.props.onEntered(node, appearing);\\n      }\\n    };\\n\\n    _this.onExit = function (node) {\\n      _this.removeClasses(node, 'appear');\\n\\n      _this.removeClasses(node, 'enter');\\n\\n      _this.addClass(node, 'exit', 'base');\\n\\n      if (_this.props.onExit) {\\n        _this.props.onExit(node);\\n      }\\n    };\\n\\n    _this.onExiting = function (node) {\\n      _this.addClass(node, 'exit', 'active');\\n\\n      if (_this.props.onExiting) {\\n        _this.props.onExiting(node);\\n      }\\n    };\\n\\n    _this.onExited = function (node) {\\n      _this.removeClasses(node, 'exit');\\n\\n      _this.addClass(node, 'exit', 'done');\\n\\n      if (_this.props.onExited) {\\n        _this.props.onExited(node);\\n      }\\n    };\\n\\n    _this.getClassNames = function (type) {\\n      var classNames = _this.props.classNames;\\n      var isStringClassNames = typeof classNames === 'string';\\n      var prefix = isStringClassNames && classNames ? classNames + \\\"-\\\" : '';\\n      var baseClassName = isStringClassNames ? \\\"\\\" + prefix + type : classNames[type];\\n      var activeClassName = isStringClassNames ? baseClassName + \\\"-active\\\" : classNames[type + \\\"Active\\\"];\\n      var doneClassName = isStringClassNames ? baseClassName + \\\"-done\\\" : classNames[type + \\\"Done\\\"];\\n      return {\\n        baseClassName: baseClassName,\\n        activeClassName: activeClassName,\\n        doneClassName: doneClassName\\n      };\\n    };\\n\\n    return _this;\\n  }\\n\\n  var _proto = CSSTransition.prototype;\\n\\n  _proto.addClass = function addClass(node, type, phase) {\\n    var className = this.getClassNames(type)[phase + \\\"ClassName\\\"];\\n\\n    if (type === 'appear' && phase === 'done') {\\n      className += \\\" \\\" + this.getClassNames('enter').doneClassName;\\n    } // This is for to force a repaint,\\n    // which is necessary in order to transition styles when adding a class name.\\n\\n\\n    if (phase === 'active') {\\n      /* eslint-disable no-unused-expressions */\\n      node && node.scrollTop;\\n    }\\n\\n    this.appliedClasses[type][phase] = className;\\n\\n    _addClass(node, className);\\n  };\\n\\n  _proto.removeClasses = function removeClasses(node, type) {\\n    var _this$appliedClasses$ = this.appliedClasses[type],\\n        baseClassName = _this$appliedClasses$.base,\\n        activeClassName = _this$appliedClasses$.active,\\n        doneClassName = _this$appliedClasses$.done;\\n    this.appliedClasses[type] = {};\\n\\n    if (baseClassName) {\\n      removeClass(node, baseClassName);\\n    }\\n\\n    if (activeClassName) {\\n      removeClass(node, activeClassName);\\n    }\\n\\n    if (doneClassName) {\\n      removeClass(node, doneClassName);\\n    }\\n  };\\n\\n  _proto.render = function render() {\\n    var _this$props = this.props,\\n        _ = _this$props.classNames,\\n        props = _objectWithoutPropertiesLoose(_this$props, [\\\"classNames\\\"]);\\n\\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\\n      onEnter: this.onEnter,\\n      onEntered: this.onEntered,\\n      onEntering: this.onEntering,\\n      onExit: this.onExit,\\n      onExiting: this.onExiting,\\n      onExited: this.onExited\\n    }));\\n  };\\n\\n  return CSSTransition;\\n}(_react.default.Component);\\n\\nCSSTransition.defaultProps = {\\n  classNames: ''\\n};\\nCSSTransition.propTypes = process.env.NODE_ENV !== \\\"production\\\" ? _extends({}, _Transition.default.propTypes, {\\n  /**\\n   * The animation classNames applied to the component as it appears, enters,\\n   * exits or has finished the transition. A single name can be provided and it\\n   * will be suffixed for each stage: e.g.\\n   *\\n   * `classNames=\\\"fade\\\"` applies `fade-appear`, `fade-appear-active`,\\n   * `fade-appear-done`, `fade-enter`, `fade-enter-active`, `fade-enter-done`,\\n   * `fade-exit`, `fade-exit-active`, and `fade-exit-done`.\\n   *\\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\\n   * This allows you to define different behavior for when appearing is done and\\n   * when regular entering is done, using selectors like\\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\\n   * epic entrance animation when element first appears in the DOM using\\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\\n   * simply use `fade-enter-done` for defining both cases.\\n   *\\n   * Each individual classNames can also be specified independently like:\\n   *\\n   * ```js\\n   * classNames={{\\n   *  appear: 'my-appear',\\n   *  appearActive: 'my-active-appear',\\n   *  appearDone: 'my-done-appear',\\n   *  enter: 'my-enter',\\n   *  enterActive: 'my-active-enter',\\n   *  enterDone: 'my-done-enter',\\n   *  exit: 'my-exit',\\n   *  exitActive: 'my-active-exit',\\n   *  exitDone: 'my-done-exit',\\n   * }}\\n   * ```\\n   *\\n   * If you want to set these classes using CSS Modules:\\n   *\\n   * ```js\\n   * import styles from './styles.css';\\n   * ```\\n   *\\n   * you might want to use camelCase in your CSS file, that way could simply\\n   * spread them instead of listing them one by one:\\n   *\\n   * ```js\\n   * classNames={{ ...styles }}\\n   * ```\\n   *\\n   * @type {string | {\\n   *  appear?: string,\\n   *  appearActive?: string,\\n   *  appearDone?: string,\\n   *  enter?: string,\\n   *  enterActive?: string,\\n   *  enterDone?: string,\\n   *  exit?: string,\\n   *  exitActive?: string,\\n   *  exitDone?: string,\\n   * }}\\n   */\\n  classNames: _PropTypes.classNamesShape,\\n\\n  /**\\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\\n   * applied.\\n   *\\n   * @type Function(node: HtmlElement, isAppearing: bool)\\n   */\\n  onEnter: _propTypes.default.func,\\n\\n  /**\\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\\n   * 'appear-active' class is applied.\\n   *\\n   * @type Function(node: HtmlElement, isAppearing: bool)\\n   */\\n  onEntering: _propTypes.default.func,\\n\\n  /**\\n   * A `<Transition>` callback fired immediately after the 'enter' or\\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\\n   *\\n   * @type Function(node: HtmlElement, isAppearing: bool)\\n   */\\n  onEntered: _propTypes.default.func,\\n\\n  /**\\n   * A `<Transition>` callback fired immediately after the 'exit' class is\\n   * applied.\\n   *\\n   * @type Function(node: HtmlElement)\\n   */\\n  onExit: _propTypes.default.func,\\n\\n  /**\\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\\n   *\\n   * @type Function(node: HtmlElement)\\n   */\\n  onExiting: _propTypes.default.func,\\n\\n  /**\\n   * A `<Transition>` callback fired immediately after the 'exit' classes\\n   * are **removed** and the `exit-done` class is added to the DOM node.\\n   *\\n   * @type Function(node: HtmlElement)\\n   */\\n  onExited: _propTypes.default.func\\n}) : {};\\nvar _default = CSSTransition;\\nexports.default = _default;\\nmodule.exports = exports[\\\"default\\\"];\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"default\",\"_extends\",\"Object\",\"assign\",\"target\",\"i\",\"arguments\",\"length\",\"source\",\"key\",\"prototype\",\"hasOwnProperty\",\"call\",\"apply\",\"_inheritsLoose\",\"subClass\",\"superClass\",\"create\",\"constructor\",\"__proto__\",\"_propTypes\",\"_addClass2\",\"_removeClass\",\"_react\",\"_Transition\",\"_PropTypes\",\"_addClass\",\"node\",\"classes\",\"split\",\"forEach\",\"c\",\"removeClass\",\"CSSTransition\",\"_React$Component\",\"_this\",\"_len\",\"args\",\"Array\",\"_key\",\"concat\",\"appliedClasses\",\"appear\",\"enter\",\"exit\",\"onEnter\",\"_this.onEnter\",\"appearing\",\"removeClasses\",\"addClass\",\"props\",\"onEntering\",\"_this.onEntering\",\"type\",\"onEntered\",\"_this.onEntered\",\"onExit\",\"_this.onExit\",\"onExiting\",\"_this.onExiting\",\"onExited\",\"_this.onExited\",\"getClassNames\",\"_this.getClassNames\",\"classNames\",\"isStringClassNames\",\"baseClassName\",\"prefix\",\"activeClassName\",\"doneClassName\",\"_proto\",\"_proto.addClass\",\"phase\",\"className\",\"scrollTop\",\"_proto.removeClasses\",\"_this$appliedClasses$\",\"base\",\"active\",\"done\",\"render\",\"_proto.render\",\"_this$props\",\"sourceKeys\",\"keys\",\"excluded\",\"indexOf\",\"createElement\",\"Component\",\"defaultProps\",\"propTypes\",\"classNamesShape\",\"func\"]\n}\n"]