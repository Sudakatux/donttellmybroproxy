["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@material-ui/core/Select/Select.js"],"~:js","shadow$provide.module$node_modules$$material_ui$core$Select$Select=function(global,require,module,exports){var _interopRequireDefault=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=exports.styles=void 0;var _extends2=_interopRequireDefault(require(\"module$node_modules$$babel$runtime$helpers$extends\")),_objectWithoutProperties2=_interopRequireDefault(require(\"module$node_modules$$babel$runtime$helpers$objectWithoutProperties\")),\n_react=_interopRequireDefault(require(\"module$node_modules$react$index\"));global=_interopRequireDefault(require(\"module$node_modules$prop_types$index\"));var _styles=require(\"module$node_modules$$material_ui$styles$index\"),_SelectInput=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$Select$SelectInput\")),_formControlState=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$FormControl$formControlState\"));module=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$FormControl$withFormControlContext\"));\nvar _withStyles=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$styles$withStyles\")),_ArrowDropDown=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$internal$svg_icons$ArrowDropDown\")),_Input=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$Input$index\")),_NativeSelect=require(\"module$node_modules$$material_ui$core$NativeSelect$NativeSelect\"),_NativeSelectInput=_interopRequireDefault(require(\"module$node_modules$$material_ui$core$NativeSelect$NativeSelectInput\"));\nrequire=_NativeSelect.styles;exports.styles=require;var defaultInput=_react.default.createElement(_Input.default,null);_Input=_react.default.forwardRef(function Select(props,ref){var _props$autoWidth=props.autoWidth;_props$autoWidth=void 0===_props$autoWidth?!1:_props$autoWidth;var children=props.children,classes=props.classes,_props$displayEmpty=props.displayEmpty;_props$displayEmpty=void 0===_props$displayEmpty?!1:_props$displayEmpty;var _props$IconComponent=props.IconComponent;_props$IconComponent=\nvoid 0===_props$IconComponent?_ArrowDropDown.default:_props$IconComponent;var _props$input=props.input;_props$input=void 0===_props$input?defaultInput:_props$input;var inputProps=props.inputProps,MenuProps=props.MenuProps,muiFormControl=props.muiFormControl,_props$multiple=props.multiple;_props$multiple=void 0===_props$multiple?!1:_props$multiple;var _props$native=props.native;_props$native=void 0===_props$native?!1:_props$native;var onClose=props.onClose,onOpen=props.onOpen,open=props.open,renderValue=\nprops.renderValue,SelectDisplayProps=props.SelectDisplayProps,other=(0,_objectWithoutProperties2.default)(props,\"autoWidth children classes displayEmpty IconComponent input inputProps MenuProps muiFormControl multiple native onClose onOpen open renderValue SelectDisplayProps variant\".split(\" \")),inputComponent=_props$native?_NativeSelectInput.default:_SelectInput.default;props=(0,_formControlState.default)({props:props,muiFormControl:muiFormControl,states:[\"variant\"]});return _react.default.cloneElement(_props$input,\n(0,_extends2.default)({inputComponent:inputComponent,select:!0,inputProps:(0,_extends2.default)({children:children,IconComponent:_props$IconComponent,variant:props.variant,type:void 0,multiple:_props$multiple},_props$native?{}:{autoWidth:_props$autoWidth,displayEmpty:_props$displayEmpty,MenuProps:MenuProps,onClose:onClose,onOpen:onOpen,open:open,renderValue:renderValue,SelectDisplayProps:SelectDisplayProps},inputProps,{classes:inputProps?(0,_styles.mergeClasses)({baseClasses:classes,newClasses:inputProps.classes,\nComponent:Select}):classes},_props$input?_props$input.props.inputProps:{}),ref:ref},other))});_Input.propTypes={autoWidth:global.default.bool,children:global.default.node,classes:global.default.object.isRequired,displayEmpty:global.default.bool,IconComponent:global.default.elementType,input:global.default.element,inputProps:global.default.object,MenuProps:global.default.object,muiFormControl:global.default.object,multiple:global.default.bool,native:global.default.bool,onChange:global.default.func,\nonClose:global.default.func,onOpen:global.default.func,open:global.default.bool,renderValue:global.default.func,SelectDisplayProps:global.default.object,value:global.default.any,variant:global.default.oneOf([\"standard\",\"outlined\",\"filled\"])};_Input.muiName=\"Select\";require=(0,_withStyles.default)(require,{name:\"MuiSelect\"})((0,module.default)(_Input));exports.default=require}","~:source","shadow$provide[\"module$node_modules$$material_ui$core$Select$Select\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.styles = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styles = require(\"@material-ui/styles\");\n\nvar _SelectInput = _interopRequireDefault(require(\"./SelectInput\"));\n\nvar _formControlState = _interopRequireDefault(require(\"../FormControl/formControlState\"));\n\nvar _withFormControlContext = _interopRequireDefault(require(\"../FormControl/withFormControlContext\"));\n\nvar _withStyles = _interopRequireDefault(require(\"../styles/withStyles\"));\n\nvar _ArrowDropDown = _interopRequireDefault(require(\"../internal/svg-icons/ArrowDropDown\"));\n\nvar _Input = _interopRequireDefault(require(\"../Input\"));\n\nvar _NativeSelect = require(\"../NativeSelect/NativeSelect\");\n\nvar _NativeSelectInput = _interopRequireDefault(require(\"../NativeSelect/NativeSelectInput\"));\n\nvar styles = _NativeSelect.styles;\nexports.styles = styles;\n\nvar defaultInput = _react.default.createElement(_Input.default, null);\n\nvar Select = _react.default.forwardRef(function Select(props, ref) {\n  var _props$autoWidth = props.autoWidth,\n      autoWidth = _props$autoWidth === void 0 ? false : _props$autoWidth,\n      children = props.children,\n      classes = props.classes,\n      _props$displayEmpty = props.displayEmpty,\n      displayEmpty = _props$displayEmpty === void 0 ? false : _props$displayEmpty,\n      _props$IconComponent = props.IconComponent,\n      IconComponent = _props$IconComponent === void 0 ? _ArrowDropDown.default : _props$IconComponent,\n      _props$input = props.input,\n      input = _props$input === void 0 ? defaultInput : _props$input,\n      inputProps = props.inputProps,\n      MenuProps = props.MenuProps,\n      muiFormControl = props.muiFormControl,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$native = props.native,\n      native = _props$native === void 0 ? false : _props$native,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      open = props.open,\n      renderValue = props.renderValue,\n      SelectDisplayProps = props.SelectDisplayProps,\n      variant = props.variant,\n      other = (0, _objectWithoutProperties2.default)(props, [\"autoWidth\", \"children\", \"classes\", \"displayEmpty\", \"IconComponent\", \"input\", \"inputProps\", \"MenuProps\", \"muiFormControl\", \"multiple\", \"native\", \"onClose\", \"onOpen\", \"open\", \"renderValue\", \"SelectDisplayProps\", \"variant\"]);\n  var inputComponent = native ? _NativeSelectInput.default : _SelectInput.default;\n  var fcs = (0, _formControlState.default)({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant']\n  });\n  return _react.default.cloneElement(input, (0, _extends2.default)({\n    // Most of the logic is implemented in `SelectInput`.\n    // The `Select` component is a simple API wrapper to expose something better to play with.\n    inputComponent: inputComponent,\n    select: true,\n    inputProps: (0, _extends2.default)({\n      children: children,\n      IconComponent: IconComponent,\n      variant: fcs.variant,\n      type: undefined,\n      // We render a select. We can ignore the type provided by the `Input`.\n      multiple: multiple\n    }, native ? {} : {\n      autoWidth: autoWidth,\n      displayEmpty: displayEmpty,\n      MenuProps: MenuProps,\n      onClose: onClose,\n      onOpen: onOpen,\n      open: open,\n      renderValue: renderValue,\n      SelectDisplayProps: SelectDisplayProps\n    }, inputProps, {\n      classes: inputProps ? (0, _styles.mergeClasses)({\n        baseClasses: classes,\n        newClasses: inputProps.classes,\n        Component: Select\n      }) : classes\n    }, input ? input.props.inputProps : {}),\n    ref: ref\n  }, other));\n});\n\nprocess.env.NODE_ENV !== \"production\" ? Select.propTypes = {\n  /**\n   * If true, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: _propTypes.default.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.\n   *\n   * ⚠️The `MenuItem` elements **must** be direct descendants when `native` is false.\n   */\n  children: _propTypes.default.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: _propTypes.default.object.isRequired,\n\n  /**\n   * If `true`, a value is displayed even if no items are selected.\n   *\n   * In order to display a meaningful value, a function should be passed to the `renderValue` prop which returns the value to be displayed when no items are selected.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  displayEmpty: _propTypes.default.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: _propTypes.default.elementType,\n\n  /**\n   * An `Input` element; does not have to be a material-ui specific `Input`.\n   */\n  input: _propTypes.default.element,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   * When `native` is `true`, the attributes are applied on the `select` element.\n   */\n  inputProps: _propTypes.default.object,\n\n  /**\n   * Properties applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: _propTypes.default.object,\n\n  /**\n   * @ignore\n   * from `withFormControlContext`\n   */\n  muiFormControl: _propTypes.default.object,\n\n  /**\n   * If true, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: _propTypes.default.bool,\n\n  /**\n   * If `true`, the component will be using a native `select` element.\n   */\n  native: _propTypes.default.bool,\n\n  /**\n   * Callback function fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value`.\n   * @param {object} [child] The react element that was selected when `native` is `false` (default).\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onClose: _propTypes.default.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback\n   */\n  onOpen: _propTypes.default.func,\n\n  /**\n   * Control `select` open state.\n   * You can only use it when the `native` property is `false` (default).\n   */\n  open: _propTypes.default.bool,\n\n  /**\n   * Render the selected value.\n   * You can only use it when the `native` property is `false` (default).\n   *\n   * @param {*} value The `value` provided to the component.\n   * @returns {ReactElement}\n   */\n  renderValue: _propTypes.default.func,\n\n  /**\n   * Properties applied to the clickable div element.\n   */\n  SelectDisplayProps: _propTypes.default.object,\n\n  /**\n   * The input value.\n   * This property is required when the `native` property is `false` (default).\n   */\n  value: _propTypes.default.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nSelect.muiName = 'Select';\n\nvar _default = (0, _withStyles.default)(styles, {\n  name: 'MuiSelect'\n})((0, _withFormControlContext.default)(Select));\n\nexports.default = _default;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$material_ui$core$NativeSelect$NativeSelectInput","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$$material_ui$core$FormControl$formControlState","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$module$node_modules$$material_ui$core$Input$index","~$module$node_modules$$material_ui$core$internal$svg_icons$ArrowDropDown","~$module$node_modules$$material_ui$core$NativeSelect$NativeSelect","~$shadow.js","~$module$node_modules$$material_ui$core$FormControl$withFormControlContext","~$module$node_modules$$material_ui$core$Select$SelectInput","~$module$node_modules$$babel$runtime$helpers$extends","~$module$node_modules$$material_ui$styles$index","~$module$node_modules$$material_ui$core$styles$withStyles","~$module$node_modules$$babel$runtime$helpers$objectWithoutProperties"]],"~:properties",["^5",["newClasses","muiFormControl","onClose","onChange","muiName","autoWidth","children","native","__esModule","inputProps","inputComponent","states","propTypes","name","renderValue","value","displayEmpty","SelectDisplayProps","select","classes","styles","input","props","baseClasses","type","ref","Component","IconComponent","open","default","variant","MenuProps","multiple","onOpen"]],"~:compiled-at",1570449014741,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$material_ui$core$Select$Select.js\",\n\"lineCount\":9,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@material-ui/core/Select/Select.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$material_ui$core$Select$Select\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = exports.styles = void 0;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n\\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/objectWithoutProperties\\\"));\\n\\nvar _react = _interopRequireDefault(require(\\\"react\\\"));\\n\\nvar _propTypes = _interopRequireDefault(require(\\\"prop-types\\\"));\\n\\nvar _styles = require(\\\"@material-ui/styles\\\");\\n\\nvar _SelectInput = _interopRequireDefault(require(\\\"./SelectInput\\\"));\\n\\nvar _formControlState = _interopRequireDefault(require(\\\"../FormControl/formControlState\\\"));\\n\\nvar _withFormControlContext = _interopRequireDefault(require(\\\"../FormControl/withFormControlContext\\\"));\\n\\nvar _withStyles = _interopRequireDefault(require(\\\"../styles/withStyles\\\"));\\n\\nvar _ArrowDropDown = _interopRequireDefault(require(\\\"../internal/svg-icons/ArrowDropDown\\\"));\\n\\nvar _Input = _interopRequireDefault(require(\\\"../Input\\\"));\\n\\nvar _NativeSelect = require(\\\"../NativeSelect/NativeSelect\\\");\\n\\nvar _NativeSelectInput = _interopRequireDefault(require(\\\"../NativeSelect/NativeSelectInput\\\"));\\n\\nvar styles = _NativeSelect.styles;\\nexports.styles = styles;\\n\\nvar defaultInput = _react.default.createElement(_Input.default, null);\\n\\nvar Select = _react.default.forwardRef(function Select(props, ref) {\\n  var _props$autoWidth = props.autoWidth,\\n      autoWidth = _props$autoWidth === void 0 ? false : _props$autoWidth,\\n      children = props.children,\\n      classes = props.classes,\\n      _props$displayEmpty = props.displayEmpty,\\n      displayEmpty = _props$displayEmpty === void 0 ? false : _props$displayEmpty,\\n      _props$IconComponent = props.IconComponent,\\n      IconComponent = _props$IconComponent === void 0 ? _ArrowDropDown.default : _props$IconComponent,\\n      _props$input = props.input,\\n      input = _props$input === void 0 ? defaultInput : _props$input,\\n      inputProps = props.inputProps,\\n      MenuProps = props.MenuProps,\\n      muiFormControl = props.muiFormControl,\\n      _props$multiple = props.multiple,\\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\\n      _props$native = props.native,\\n      native = _props$native === void 0 ? false : _props$native,\\n      onClose = props.onClose,\\n      onOpen = props.onOpen,\\n      open = props.open,\\n      renderValue = props.renderValue,\\n      SelectDisplayProps = props.SelectDisplayProps,\\n      variant = props.variant,\\n      other = (0, _objectWithoutProperties2.default)(props, [\\\"autoWidth\\\", \\\"children\\\", \\\"classes\\\", \\\"displayEmpty\\\", \\\"IconComponent\\\", \\\"input\\\", \\\"inputProps\\\", \\\"MenuProps\\\", \\\"muiFormControl\\\", \\\"multiple\\\", \\\"native\\\", \\\"onClose\\\", \\\"onOpen\\\", \\\"open\\\", \\\"renderValue\\\", \\\"SelectDisplayProps\\\", \\\"variant\\\"]);\\n  var inputComponent = native ? _NativeSelectInput.default : _SelectInput.default;\\n  var fcs = (0, _formControlState.default)({\\n    props: props,\\n    muiFormControl: muiFormControl,\\n    states: ['variant']\\n  });\\n  return _react.default.cloneElement(input, (0, _extends2.default)({\\n    // Most of the logic is implemented in `SelectInput`.\\n    // The `Select` component is a simple API wrapper to expose something better to play with.\\n    inputComponent: inputComponent,\\n    select: true,\\n    inputProps: (0, _extends2.default)({\\n      children: children,\\n      IconComponent: IconComponent,\\n      variant: fcs.variant,\\n      type: undefined,\\n      // We render a select. We can ignore the type provided by the `Input`.\\n      multiple: multiple\\n    }, native ? {} : {\\n      autoWidth: autoWidth,\\n      displayEmpty: displayEmpty,\\n      MenuProps: MenuProps,\\n      onClose: onClose,\\n      onOpen: onOpen,\\n      open: open,\\n      renderValue: renderValue,\\n      SelectDisplayProps: SelectDisplayProps\\n    }, inputProps, {\\n      classes: inputProps ? (0, _styles.mergeClasses)({\\n        baseClasses: classes,\\n        newClasses: inputProps.classes,\\n        Component: Select\\n      }) : classes\\n    }, input ? input.props.inputProps : {}),\\n    ref: ref\\n  }, other));\\n});\\n\\nprocess.env.NODE_ENV !== \\\"production\\\" ? Select.propTypes = {\\n  /**\\n   * If true, the width of the popover will automatically be set according to the items inside the\\n   * menu, otherwise it will be at least the width of the select input.\\n   */\\n  autoWidth: _propTypes.default.bool,\\n\\n  /**\\n   * The option elements to populate the select with.\\n   * Can be some `MenuItem` when `native` is false and `option` when `native` is true.\\n   *\\n   * \\u26a0\\ufe0fThe `MenuItem` elements **must** be direct descendants when `native` is false.\\n   */\\n  children: _propTypes.default.node,\\n\\n  /**\\n   * Override or extend the styles applied to the component.\\n   * See [CSS API](#css) below for more details.\\n   */\\n  classes: _propTypes.default.object.isRequired,\\n\\n  /**\\n   * If `true`, a value is displayed even if no items are selected.\\n   *\\n   * In order to display a meaningful value, a function should be passed to the `renderValue` prop which returns the value to be displayed when no items are selected.\\n   * You can only use it when the `native` property is `false` (default).\\n   */\\n  displayEmpty: _propTypes.default.bool,\\n\\n  /**\\n   * The icon that displays the arrow.\\n   */\\n  IconComponent: _propTypes.default.elementType,\\n\\n  /**\\n   * An `Input` element; does not have to be a material-ui specific `Input`.\\n   */\\n  input: _propTypes.default.element,\\n\\n  /**\\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\\n   * When `native` is `true`, the attributes are applied on the `select` element.\\n   */\\n  inputProps: _propTypes.default.object,\\n\\n  /**\\n   * Properties applied to the [`Menu`](/api/menu/) element.\\n   */\\n  MenuProps: _propTypes.default.object,\\n\\n  /**\\n   * @ignore\\n   * from `withFormControlContext`\\n   */\\n  muiFormControl: _propTypes.default.object,\\n\\n  /**\\n   * If true, `value` must be an array and the menu will support multiple selections.\\n   */\\n  multiple: _propTypes.default.bool,\\n\\n  /**\\n   * If `true`, the component will be using a native `select` element.\\n   */\\n  native: _propTypes.default.bool,\\n\\n  /**\\n   * Callback function fired when a menu item is selected.\\n   *\\n   * @param {object} event The event source of the callback.\\n   * You can pull out the new value by accessing `event.target.value`.\\n   * @param {object} [child] The react element that was selected when `native` is `false` (default).\\n   */\\n  onChange: _propTypes.default.func,\\n\\n  /**\\n   * Callback fired when the component requests to be closed.\\n   * Use in controlled mode (see open).\\n   *\\n   * @param {object} event The event source of the callback\\n   */\\n  onClose: _propTypes.default.func,\\n\\n  /**\\n   * Callback fired when the component requests to be opened.\\n   * Use in controlled mode (see open).\\n   *\\n   * @param {object} event The event source of the callback\\n   */\\n  onOpen: _propTypes.default.func,\\n\\n  /**\\n   * Control `select` open state.\\n   * You can only use it when the `native` property is `false` (default).\\n   */\\n  open: _propTypes.default.bool,\\n\\n  /**\\n   * Render the selected value.\\n   * You can only use it when the `native` property is `false` (default).\\n   *\\n   * @param {*} value The `value` provided to the component.\\n   * @returns {ReactElement}\\n   */\\n  renderValue: _propTypes.default.func,\\n\\n  /**\\n   * Properties applied to the clickable div element.\\n   */\\n  SelectDisplayProps: _propTypes.default.object,\\n\\n  /**\\n   * The input value.\\n   * This property is required when the `native` property is `false` (default).\\n   */\\n  value: _propTypes.default.any,\\n\\n  /**\\n   * The variant to use.\\n   */\\n  variant: _propTypes.default.oneOf(['standard', 'outlined', 'filled'])\\n} : void 0;\\nSelect.muiName = 'Select';\\n\\nvar _default = (0, _withStyles.default)(styles, {\\n  name: 'MuiSelect'\\n})((0, _withFormControlContext.default)(Select));\\n\\nexports.default = _default;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"styles\",\"_extends2\",\"_objectWithoutProperties2\",\"_react\",\"_propTypes\",\"_styles\",\"_SelectInput\",\"_formControlState\",\"_withFormControlContext\",\"_withStyles\",\"_ArrowDropDown\",\"_Input\",\"_NativeSelect\",\"_NativeSelectInput\",\"defaultInput\",\"createElement\",\"Select\",\"forwardRef\",\"props\",\"ref\",\"_props$autoWidth\",\"autoWidth\",\"children\",\"classes\",\"_props$displayEmpty\",\"displayEmpty\",\"_props$IconComponent\",\"IconComponent\",\"_props$input\",\"input\",\"inputProps\",\"MenuProps\",\"muiFormControl\",\"_props$multiple\",\"multiple\",\"_props$native\",\"native\",\"onClose\",\"onOpen\",\"open\",\"renderValue\",\"SelectDisplayProps\",\"other\",\"inputComponent\",\"fcs\",\"states\",\"cloneElement\",\"select\",\"variant\",\"type\",\"undefined\",\"mergeClasses\",\"baseClasses\",\"newClasses\",\"Component\",\"propTypes\",\"bool\",\"node\",\"object\",\"isRequired\",\"elementType\",\"element\",\"onChange\",\"func\",\"any\",\"oneOf\",\"muiName\",\"_default\",\"name\"]\n}\n"]