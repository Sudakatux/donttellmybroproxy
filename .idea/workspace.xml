<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c5b2bf98-e160-4987-8f50-31746baa0626" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__clj_time_0_15_1.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__colorize_0_1_1.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__com_rpl_specter_1_0_5.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__environ_1_1_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__flare_0_2_9.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__io_aviso_pretty_0_1_37.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__marick_suchwow_6_0_2.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__midje_1_9_9.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__mvxcvi_arrangement_1_2_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__mvxcvi_puget_1_1_2.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojars_brenton_google_diff_match_patch_0_1.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_core_unify_0_5_7.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_math_combinatorics_0_1_5.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_tools_macro_0_1_5.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_tcrawley_dynapath_1_0_0.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/donttellmybroproxy/proxy_test.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__clj_time_0_14_3.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__joda_time_2_9_9.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__joda_time_2_10.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__mvxcvi_arrangement_1_1_1.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__mvxcvi_puget_1_0_3.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_tools_namespace_0_2_11.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_tools_namespace_0_3_0.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/donttellmybroproxy.iml" beforeDir="false" afterPath="$PROJECT_DIR$/donttellmybroproxy.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/project.clj" beforeDir="false" afterPath="$PROJECT_DIR$/project.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clj/donttellmybroproxy/proxy.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clj/donttellmybroproxy/proxy.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/clj/donttellmybroproxy/core_test.clj" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FxmlFile" />
        <option value="CLJC Namespace" />
        <option value="ClojureScript Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1ReHiMVCx8yV54N3oiBHg7WxuG9" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="GoToKeyword.includeLibraries" value="false" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="cursive.last.file.extension./home/jimmy/DevelopEnvironments/donttellmybroproxy/src/cljc" value="cljc" />
    <property name="cursive.last.file.extension./home/jimmy/DevelopEnvironments/donttellmybroproxy/src/cljs" value="cljs" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../options" />
    <property name="project.structure.last.edited" value="SDKs" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/resources/public" />
      <recent name="$PROJECT_DIR$/resources" />
    </key>
  </component>
  <component name="ReplState" timestamp="1575898466619">{:repl-history {:ide [], :local [{:command &quot;(existing-interceptors :yahoo \&quot;.*\&quot; :response)&quot;, :offset 45, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(existing-interceptors :yahoo :response \&quot;.*\&quot;)&quot;, :offset 45, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(merge {:body \&quot;sososos\&quot;} {:headers {\&quot;Some-Key\&quot; \&quot;123123123\&quot;}})&quot;, :offset 61, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-response-interceptors! :yahoo {:headers {\&quot;Some-Key\&quot; \&quot;123123123\&quot;}} \&quot;.*\&quot;)&quot;, :offset 79, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(extract-existing-interceptors {:yahoo {:route \&quot;/yahoo\&quot;,\n                                        :url \&quot;http://www.yahoo.com\&quot;,\n                                        :args {:request {}, :response {}, :interceptors {\&quot;.*\&quot; {:response {:headers {\&quot;Some-Key\&quot; \&quot;123123123\&quot;}}}}}}} :yahoo :response \&quot;.*\&quot;)&quot;, :offset 294, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(merge-with into {:headers {\&quot;Some-key\&quot; \&quot;123456\&quot;}} {:headers {\&quot;Bareesr\&quot; \&quot;213342352352345\&quot;}})&quot;, :offset 91, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(merge-with into {:headers {\&quot;Some-key\&quot; \&quot;123456\&quot;, \&quot;Bareesr\&quot; \&quot;213342352352345\&quot;}} {:body \&quot;some body\&quot;})&quot;, :offset 99, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(create-new-parameters {:yahoo {:route \&quot;/yahoo\&quot;,\n                                :url \&quot;http://www.yahoo.com\&quot;,\n                                :args {:request {}, :response {}, :interceptors {\&quot;.*\&quot; {:response {:headers {\&quot;Some-Key\&quot; \&quot;123123123\&quot;}}}}}}} {:body \&quot;asdasdasd\&quot;})&quot;, :offset 268, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(fact \&quot;Should extract an interceptor configuration for a given matcher type\&quot;\n  (extract-existing-interceptors test-state-map :yahoo :response \&quot;.*\&quot;)\n  =&gt; sample-matcher)&quot;, :offset 168, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should extract an interceptor configuration for a given matcher type\&quot;\n  (extract-existing-interceptors test-state-map :yahoo :response \&quot;.*\&quot;)\n  =&gt; sample-matcher-values)&quot;, :offset 175, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(doc get)&quot;, :offset 9, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(doc map)&quot;, :offset 9, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should return a request with interceptor applied\&quot;\n(apply-interceptor sample-request sample-header-interceptor)\n      =&gt; (merge sample-request sample-header-interceptor))&quot;, :offset 176, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should return a request with interceptor applied\&quot;\n      (apply-interceptor sample-simple-request sample-header-interceptor)\n      =&gt; (merge sample-simple-request sample-header-interceptor)\n      (apply-interceptor sample-header-with-request sample-header-interceptor)\n      =&gt; {:headers {\&quot;Content-Type\&quot; \&quot;This one\&quot;\n                    \&quot;Bareer\&quot; \&quot;123213\&quot;}\n          :body \&quot;This is a body that will get replaced\&quot;})&quot;, :offset 417, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should apply all interceptors in order\&quot;\n      (apply-interceptors sample-simple-request [sample-header-interceptor sample-header-with-request]))&quot;, :offset 151, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should apply all interceptors in order\&quot;\n      (apply-interceptors sample-simple-request [sample-header-interceptor sample-header-with-request])\n      =&gt;\n      {\n       :headers {\&quot;Content-type\&quot; \&quot;12345678\&quot;}\n       :body \&quot;This is a body that will get replaced\&quot;})&quot;, :offset 266, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should apply all interceptors in order\&quot;\n      (apply-interceptors sample-simple-request [sample-header-interceptor sample-header-with-request])\n      =&gt;\n      {\n       :headers {\&quot;Content-type\&quot; \&quot;12345678\&quot; \&quot;Bareer\&quot; \&quot;123213\&quot;}\n       :body \&quot;This is a body that will get replaced\&quot;})&quot;, :offset 284, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should apply all interceptors in order\&quot;\n      (apply-interceptors sample-simple-request [sample-header-interceptor sample-header-with-request])\n      =&gt;\n      {\n       :headers {\&quot;Content-Type\&quot; \&quot;12345678\&quot; \&quot;Bareer\&quot; \&quot;123213\&quot;}\n       :body \&quot;This is a body that will get replaced\&quot;})&quot;, :offset 284, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should apply all interceptors in order\&quot;\n      (apply-interceptors sample-simple-request [sample-header-interceptor sample-header-with-request])\n      =&gt;\n      {\n       :headers {\&quot;Content-Type\&quot; \&quot;12345678\&quot; \&quot;Bareer\&quot; \&quot;123213\&quot;}\n       :body (ByteArrayInputStream. (.getBytes \&quot;This is a body that will get replaced\&quot;)) })&quot;, :offset 321, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should apply all interceptors in order\&quot;\n      (select-keys (apply-interceptors sample-simple-request [sample-header-interceptor  {:headers {\&quot;Content-Type\&quot; \&quot;12345678\&quot;}}]) [:headers])\n\n      =&gt;\n       {\n                        :headers {\&quot;Content-Type\&quot; \&quot;12345678\&quot; \&quot;Bareer\&quot; \&quot;123213\&quot;}}\n      )&quot;, :offset 295, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(defn server-running? []\n  (if-let [server-instance (:instance @proxy-server)]\n    (.isStarted server-instance)\n    false\n    )\n  )&quot;, :offset 131, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(fact \&quot;Should return all matchers that match the given url\&quot;\n      (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; {sample-matcher less-generic-matcher})\n      =&gt; (list {:response sample-header-interceptor} {:response some-body-interceptor}))&quot;, :offset 243, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(def test-interceptors {sample-matcher less-generic-matcher})&quot;, :offset 61, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(def less-generic-matcher\n  {\&quot;.*a=2\&quot; {:response some-body-interceptor}})&quot;, :offset 72, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(def sample-header-interceptor\n  {:headers {\&quot;Content-Type\&quot; \&quot;This one\&quot;, \&quot;Bareer\&quot; \&quot;123213\&quot;}})&quot;, :offset 91, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(def sample-matcher\n  {\&quot;.*\&quot; {:response sample-header-interceptor}})&quot;, :offset 67, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(sample-matcher)&quot;, :offset 16, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;\n(def sample-header-interceptor\n  {:headers {\&quot;Content-Type\&quot; \&quot;This one\&quot;, \&quot;Bareer\&quot; \&quot;123213\&quot;}})\n\n(def some-body-interceptor\n  {:body \&quot;This is a replaced body\&quot;})\n\n(def sample-matcher\n  {\&quot;.*\&quot; {:response sample-header-interceptor}})\n\n(def less-generic-matcher\n  {\&quot;.*a=2\&quot; {:response some-body-interceptor}})&quot;, :offset 300, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(def test-interceptors\n  {sample-matcher less-generic-matcher}\n  )&quot;, :offset 66, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(list-proxies)&quot;, :offset 14, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(test-interceptors)&quot;, :offset 19, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;test-interceptors&quot;, :offset 17, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(map-in keys test-interceptors)&quot;, :offset 31, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(mapv keys test-interceptors)&quot;, :offset 29, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(keys {\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}},\n       \&quot;.*a=2\&quot; {:response {:headers {\&quot;Some-Header\&quot; \&quot;Some Value\&quot;}}}})&quot;, :offset 128, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(def test-interceptors {sample-matcher, less-generic-matcher})&quot;, :offset 62, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(keys test-interceptors)&quot;, :offset 24, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(= {\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}},\n \&quot;.*a=2\&quot; {:response {:headers {\&quot;Some-Header\&quot; \&quot;Some Value\&quot;}}}} {\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}},\n                                                                  \&quot;.*a=2\&quot; {:response {:headers {\&quot;Some-Header\&quot; \&quot;Some Value\&quot;}}}})&quot;, :offset 300, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;sample-header-interceptor&quot;, :offset 25, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;{sample-matcher, less-generic-matcher}&quot;, :offset 38, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;{\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}},\n \&quot;.*a=2\&quot; {:response {:headers {\&quot;Some-Header\&quot; \&quot;Some Value\&quot;}}}}&quot;, :offset 115, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;sample-matcher&quot;, :offset 14, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(list sample-matcher less-generic-matcher)&quot;, :offset 42, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(def sample-multi-matcher\n  {\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}},\n   \&quot;.*a=2\&quot; {:response {:headers {\&quot;Some-Header\&quot; \&quot;Some Value\&quot;}}}})&quot;, :offset 146, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(keys sample-multi-matcher)&quot;, :offset 27, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(filter #(re-matches (re-pattern %) \&quot;http://www.yahoo.com\&quot;) (keys sample-multi-matcher))&quot;, :offset 88, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(filter #(re-matches (re-pattern %) \&quot;http://www.yahoo.com?a=2\&quot;) (keys sample-multi-matcher))&quot;, :offset 92, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(mapv key sample-multi-matcher)&quot;, :offset 31, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(filter #(re-matches (re-pattern (key %)) \&quot;http://www.yahoo.com\&quot;) sample-multi-matcher)&quot;, :offset 87, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(fact \&quot;Should return all matchers that match the given url\&quot;\n      (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)\n      =&gt; (vector (get \&quot;.*\&quot; sample-multi-matcher) (get \&quot;.*\&quot; sample-multi-matcher)))&quot;, :offset 220, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(in-ns 'donttellmybroproxy.proxy-test)&quot;, :offset 38, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(sample-multi-matcher)&quot;, :offset 22, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;sample-multi-matcher&quot;, :offset 20, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get \&quot;.*\&quot; sample-multi-matcher)&quot;, :offset 31, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get sample-multi-matcher \&quot;.*\&quot;)&quot;, :offset 31, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should return all matchers that match the given url\&quot;\n      (get-matchers-matching-url \&quot;www.yahoo.com\&quot; sample-multi-matcher)\n      =&gt; (vector (get sample-multi-matcher \&quot;.*\&quot;) (get sample-multi-matcher \&quot;.*a=2\&quot; )))&quot;, :offset 217, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should return all matchers that match the given url\&quot;\n      (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)\n      =&gt; (vector (get sample-multi-matcher \&quot;.*\&quot;) (get sample-multi-matcher \&quot;.*a=2\&quot; )))&quot;, :offset 224, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(filter #(re-matches (re-pattern (key %)) \&quot;http://www.yahoo.com?a=2\&quot;) sample-multi-matcher)&quot;, :offset 91, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should return all matchers that match the given url\&quot;\n      (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)\n      =&gt; (vector (get sample-multi-matcher \&quot;.*\&quot;)))&quot;, :offset 188, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should return all matchers that match the given url\&quot;\n      (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)\n      =&gt; (vector (select-keys sample-multi-matcher \&quot;.*\&quot;)))&quot;, :offset 196, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should return all matchers that match the given url\&quot;\n      (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)\n      =&gt; (vector (select-keys sample-multi-matcher [\&quot;.*\&quot;])))&quot;, :offset 198, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;\n[{\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}}]&quot;, :offset 56, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(flatten (seq {\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}}))\n&quot;, :offset 69, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should return all matchers that match the given url\&quot;\n      (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)\n      =&gt; (vector (flatten (seq (select-keys sample-multi-matcher [\&quot;.*\&quot;])))))&quot;, :offset 214, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv #(get-in % [(key %) :response]) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 114, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)&quot;, :offset 71, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot; (first (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)) &quot;, :offset 80, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot; (key (first (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)))  &quot;, :offset 86, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv key (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 86, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (key el)) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 101, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (get-in el [(key el) :response]) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 127, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (get-in (seq el)  [(key el) :response]) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 133, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}&quot;, :offset 51, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get-in {\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}} [\&quot;.*\&quot; :response])&quot;, :offset 79, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (get el  :response) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 114, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (get el :response) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 85} {:command &quot;(get-in \&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}\n        [\&quot;.*\&quot; :response])&quot;, :offset 85, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get-in \&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}  [\&quot;.*\&quot; :response])&quot;, :offset 78, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}} &quot;, :offset 52, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(type *1)&quot;, :offset 9, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (vals el) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 103, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (key el) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 102, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (val el) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 102, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] {(key el) (get (val el) :response)  }) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 130, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(map (fn [el] {(key el) (get (val el) :response)  }) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 129, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)&quot;, :offset 75, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should flatten the :request or :response from the interceptor\&quot;\n      (extract-interceptor-for-type sample-multi-matcher :response)\n      =&gt; '({\&quot;.*\&quot; {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}} {\&quot;.*a=2\&quot; {:headers {\&quot;Some-Header\&quot; \&quot;Some Value\&quot;}}}))&quot;, :offset 242, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;()&quot;, :offset 1} {:command &quot;(proxy/extract-interceptor-for-type\n  (proxy/get-matchers-matching-url url (get (proxy/list-proxies) :interceptors)) :response)&quot;, :offset 127, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/extract-interceptor-for-type\n  (proxy/get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; (get (proxy/list-proxies) :interceptors)) :response)&quot;, :offset 146, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; (get (proxy/list-proxies) :interceptors))&quot;, :offset 97, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get (proxy/list-proxies) :interceptors)&quot;, :offset 40, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/list-proxies)&quot;, :offset 20, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; (get-in (proxy/list-proxies) [:args :interceptors]))&quot;, :offset 108, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in (proxy/list-proxies) [:args :interceptors])&quot;, :offset 51, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; (get-in (proxy/list-proxies) [:yahoo :args :interceptors]))&quot;, :offset 115, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/extract-interceptor-for-type *1 :response)&quot;, :offset 49, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in (proxy/list-proxies) [:yahoo :args :interceptors])&quot;, :offset 58, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(-main)&quot;, :offset 7, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(doc midje)&quot;, :offset 11, :ns &quot;donttellmybroproxy.core&quot;}], :remote []}}</component>
  <component name="RunManager" selected="Clojure Application.proxy_test">
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="REPL for donttellmybroproxy" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="donttellmybroproxy" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="NREPL" />
      <setting name="configType" value="SPECIFY" />
      <setting name="fixLineNumbers" value="false" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="proxy_test" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="donttellmybroproxy" />
      <setting name="path" value="$PROJECT_DIR$/test/donttellmybroproxy/proxy_test.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/test/donttellmybroproxy" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="TEST_OBJECT" value="class" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="TestNG">
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for donttellmybroproxy" />
        <item itemvalue="Clojure Application.proxy_test" />
      </list>
    </recent_temporary>
  </component>
  <component name="ServiceViewManager">
    <option name="viewStates">
      <list>
        <serviceView>
          <treeState>
            <expand />
            <select />
          </treeState>
        </serviceView>
      </list>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c5b2bf98-e160-4987-8f50-31746baa0626" name="Default Changelist" comment="" />
      <created>1570020768287</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1570020768287</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="WindowStateProjectService">
    <state width="1874" height="277" key="GridCell.Tab.0.bottom" timestamp="1575898573474">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1874" height="277" key="GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1575898573474" />
    <state width="1874" height="277" key="GridCell.Tab.0.center" timestamp="1575898573473">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1874" height="277" key="GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050" timestamp="1575898573473" />
    <state width="1874" height="277" key="GridCell.Tab.0.left" timestamp="1575898573473">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1874" height="277" key="GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050" timestamp="1575898573473" />
    <state width="1874" height="277" key="GridCell.Tab.0.right" timestamp="1575898573473">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1874" height="277" key="GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050" timestamp="1575898573473" />
    <state x="639" y="352" key="com.intellij.ide.util.TipDialog" timestamp="1575837936967">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="639" y="352" key="com.intellij.ide.util.TipDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1575837936967" />
    <state x="637" y="261" width="789" height="596" key="find.popup" timestamp="1575894218681">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="637" y="261" width="789" height="596" key="find.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1575894218681" />
    <state x="624" y="240" key="run.anything.popup" timestamp="1575452894290">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="624" y="240" key="run.anything.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1575452894290" />
    <state x="585" y="231" width="747" height="678" key="search.everywhere.popup" timestamp="1575897412512">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="585" y="231" width="747" height="678" key="search.everywhere.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1575897412512" />
  </component>
</project>