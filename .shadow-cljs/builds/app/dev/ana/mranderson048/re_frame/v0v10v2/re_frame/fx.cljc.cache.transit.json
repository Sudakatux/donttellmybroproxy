["^ ","~:output",["^ ","~:js","goog.provide('mranderson048.re_frame.v0v10v2.re_frame.fx');\ngoog.require('cljs.core');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.router');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.db');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.interceptor');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.interop');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.events');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.registrar');\ngoog.require('mranderson048.re_frame.v0v10v2.re_frame.loggers');\nmranderson048.re_frame.v0v10v2.re_frame.fx.kind = new cljs.core.Keyword(null,\"fx\",\"fx\",-1237829572);\nif(cljs.core.truth_((mranderson048.re_frame.v0v10v2.re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? mranderson048.re_frame.v0v10v2.re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(mranderson048.re_frame.v0v10v2.re_frame.fx.kind) : mranderson048.re_frame.v0v10v2.re_frame.registrar.kinds.call(null,mranderson048.re_frame.v0v10v2.re_frame.fx.kind)))){\n} else {\nthrow (new Error(\"Assert failed: (mranderson048.re-frame.v0v10v2.re-frame.registrar/kinds kind)\"));\n}\n/**\n * Register the given effect `handler` for the given `id`.\n * \n *   `id` is keyword, often namespaced.\n *   `handler` is a side-effecting function which takes a single argument and whose return\n *   value is ignored.\n * \n *   Example Use\n *   -----------\n * \n *   First, registration ... associate `:effect2` with a handler.\n * \n *   (reg-fx\n *   :effect2\n *   (fn [value]\n *      ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map ...\n * \n *   {...\n * :effect2  [1 2]}\n * \n * ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n * called with an argument of `[1 2]`.\n */\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx = (function mranderson048$re_frame$v0v10v2$re_frame$fx$reg_fx(id,handler){\nreturn mranderson048.re_frame.v0v10v2.re_frame.registrar.register_handler(mranderson048.re_frame.v0v10v2.re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \"set flag\"}\n * \n *   it will call the registered effect handlers for each of the map's keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed.\n */\nmranderson048.re_frame.v0v10v2.re_frame.fx.do_fx = mranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),new cljs.core.Keyword(null,\"do-fx\",\"do-fx\",1194163050),new cljs.core.Keyword(null,\"after\",\"after\",594996914),(function mranderson048$re_frame$v0v10v2$re_frame$fx$do_fx_after(context){\nvar seq__46753 = cljs.core.seq(new cljs.core.Keyword(null,\"effects\",\"effects\",-282369292).cljs$core$IFn$_invoke$arity$1(context));\nvar chunk__46754 = null;\nvar count__46755 = (0);\nvar i__46756 = (0);\nwhile(true){\nif((i__46756 < count__46755)){\nvar vec__46765 = chunk__46754.cljs$core$IIndexed$_nth$arity$2(null,i__46756);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46765,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46765,(1),null);\nvar temp__5718__auto___46882 = mranderson048.re_frame.v0v10v2.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(mranderson048.re_frame.v0v10v2.re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___46882)){\nvar effect_fn_46883 = temp__5718__auto___46882;\n(effect_fn_46883.cljs$core$IFn$_invoke$arity$1 ? effect_fn_46883.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_46883.call(null,effect_value));\n} else {\nmranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect: \\\"\",effect_key,\"\\\". Ignoring.\"], 0));\n}\n\n\nvar G__46885 = seq__46753;\nvar G__46886 = chunk__46754;\nvar G__46887 = count__46755;\nvar G__46888 = (i__46756 + (1));\nseq__46753 = G__46885;\nchunk__46754 = G__46886;\ncount__46755 = G__46887;\ni__46756 = G__46888;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__46753);\nif(temp__5720__auto__){\nvar seq__46753__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46753__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__46753__$1);\nvar G__46890 = cljs.core.chunk_rest(seq__46753__$1);\nvar G__46891 = c__4550__auto__;\nvar G__46892 = cljs.core.count(c__4550__auto__);\nvar G__46893 = (0);\nseq__46753 = G__46890;\nchunk__46754 = G__46891;\ncount__46755 = G__46892;\ni__46756 = G__46893;\ncontinue;\n} else {\nvar vec__46769 = cljs.core.first(seq__46753__$1);\nvar effect_key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46769,(0),null);\nvar effect_value = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__46769,(1),null);\nvar temp__5718__auto___46894 = mranderson048.re_frame.v0v10v2.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(mranderson048.re_frame.v0v10v2.re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5718__auto___46894)){\nvar effect_fn_46895 = temp__5718__auto___46894;\n(effect_fn_46895.cljs$core$IFn$_invoke$arity$1 ? effect_fn_46895.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_46895.call(null,effect_value));\n} else {\nmranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: no handler registered for effect: \\\"\",effect_key,\"\\\". Ignoring.\"], 0));\n}\n\n\nvar G__46896 = cljs.core.next(seq__46753__$1);\nvar G__46897 = null;\nvar G__46898 = (0);\nvar G__46899 = (0);\nseq__46753 = G__46896;\nchunk__46754 = G__46897;\ncount__46755 = G__46898;\ni__46756 = G__46899;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n})], 0));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-later\",\"dispatch-later\",291951390),(function (value){\nvar seq__46774 = cljs.core.seq(value);\nvar chunk__46775 = null;\nvar count__46776 = (0);\nvar i__46777 = (0);\nwhile(true){\nif((i__46777 < count__46776)){\nvar map__46794 = chunk__46775.cljs$core$IIndexed$_nth$arity$2(null,i__46777);\nvar map__46794__$1 = (((((!((map__46794 == null))))?(((((map__46794.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46794.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46794):map__46794);\nvar effect = map__46794__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46794__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46794__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nmranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nmranderson048.re_frame.v0v10v2.re_frame.interop.set_timeout_BANG_(((function (seq__46774,chunk__46775,count__46776,i__46777,map__46794,map__46794__$1,effect,ms,dispatch){\nreturn (function (){\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.dispatch(dispatch);\n});})(seq__46774,chunk__46775,count__46776,i__46777,map__46794,map__46794__$1,effect,ms,dispatch))\n,ms);\n}\n\n\nvar G__46901 = seq__46774;\nvar G__46902 = chunk__46775;\nvar G__46903 = count__46776;\nvar G__46904 = (i__46777 + (1));\nseq__46774 = G__46901;\nchunk__46775 = G__46902;\ncount__46776 = G__46903;\ni__46777 = G__46904;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__46774);\nif(temp__5720__auto__){\nvar seq__46774__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46774__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__46774__$1);\nvar G__46906 = cljs.core.chunk_rest(seq__46774__$1);\nvar G__46907 = c__4550__auto__;\nvar G__46908 = cljs.core.count(c__4550__auto__);\nvar G__46909 = (0);\nseq__46774 = G__46906;\nchunk__46775 = G__46907;\ncount__46776 = G__46908;\ni__46777 = G__46909;\ncontinue;\n} else {\nvar map__46810 = cljs.core.first(seq__46774__$1);\nvar map__46810__$1 = (((((!((map__46810 == null))))?(((((map__46810.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__46810.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__46810):map__46810);\nvar effect = map__46810__$1;\nvar ms = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46810__$1,new cljs.core.Keyword(null,\"ms\",\"ms\",-1152709733));\nvar dispatch = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__46810__$1,new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms === 'number'))))){\nmranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-later value:\",effect], 0));\n} else {\nmranderson048.re_frame.v0v10v2.re_frame.interop.set_timeout_BANG_(((function (seq__46774,chunk__46775,count__46776,i__46777,map__46810,map__46810__$1,effect,ms,dispatch,seq__46774__$1,temp__5720__auto__){\nreturn (function (){\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.dispatch(dispatch);\n});})(seq__46774,chunk__46775,count__46776,i__46777,map__46810,map__46810__$1,effect,ms,dispatch,seq__46774__$1,temp__5720__auto__))\n,ms);\n}\n\n\nvar G__46911 = cljs.core.next(seq__46774__$1);\nvar G__46912 = null;\nvar G__46913 = (0);\nvar G__46914 = (0);\nseq__46774 = G__46911;\nchunk__46775 = G__46912;\ncount__46776 = G__46913;\ni__46777 = G__46914;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch\",\"dispatch\",1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn mranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\",value], 0));\n} else {\nreturn mranderson048.re_frame.v0v10v2.re_frame.router.dispatch(value);\n}\n}));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"dispatch-n\",\"dispatch-n\",-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn mranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"error\",\"error\",-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"re-frame: ignoring bad :dispatch-n value. Expected a collection, got got:\",value], 0));\n} else {\nvar seq__46838 = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__46839 = null;\nvar count__46840 = (0);\nvar i__46841 = (0);\nwhile(true){\nif((i__46841 < count__46840)){\nvar event = chunk__46839.cljs$core$IIndexed$_nth$arity$2(null,i__46841);\nmranderson048.re_frame.v0v10v2.re_frame.router.dispatch(event);\n\n\nvar G__46923 = seq__46838;\nvar G__46924 = chunk__46839;\nvar G__46925 = count__46840;\nvar G__46926 = (i__46841 + (1));\nseq__46838 = G__46923;\nchunk__46839 = G__46924;\ncount__46840 = G__46925;\ni__46841 = G__46926;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__46838);\nif(temp__5720__auto__){\nvar seq__46838__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46838__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__46838__$1);\nvar G__46930 = cljs.core.chunk_rest(seq__46838__$1);\nvar G__46931 = c__4550__auto__;\nvar G__46932 = cljs.core.count(c__4550__auto__);\nvar G__46933 = (0);\nseq__46838 = G__46930;\nchunk__46839 = G__46931;\ncount__46840 = G__46932;\ni__46841 = G__46933;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__46838__$1);\nmranderson048.re_frame.v0v10v2.re_frame.router.dispatch(event);\n\n\nvar G__46937 = cljs.core.next(seq__46838__$1);\nvar G__46938 = null;\nvar G__46939 = (0);\nvar G__46940 = (0);\nseq__46838 = G__46937;\nchunk__46839 = G__46938;\ncount__46840 = G__46939;\ni__46841 = G__46940;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"deregister-event-handler\",\"deregister-event-handler\",-1096518994),(function (value){\nvar clear_event = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(mranderson048.re_frame.v0v10v2.re_frame.registrar.clear_handlers,mranderson048.re_frame.v0v10v2.re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__46861 = cljs.core.seq(value);\nvar chunk__46862 = null;\nvar count__46863 = (0);\nvar i__46864 = (0);\nwhile(true){\nif((i__46864 < count__46863)){\nvar event = chunk__46862.cljs$core$IIndexed$_nth$arity$2(null,i__46864);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__46953 = seq__46861;\nvar G__46954 = chunk__46862;\nvar G__46955 = count__46863;\nvar G__46956 = (i__46864 + (1));\nseq__46861 = G__46953;\nchunk__46862 = G__46954;\ncount__46863 = G__46955;\ni__46864 = G__46956;\ncontinue;\n} else {\nvar temp__5720__auto__ = cljs.core.seq(seq__46861);\nif(temp__5720__auto__){\nvar seq__46861__$1 = temp__5720__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__46861__$1)){\nvar c__4550__auto__ = cljs.core.chunk_first(seq__46861__$1);\nvar G__46961 = cljs.core.chunk_rest(seq__46861__$1);\nvar G__46962 = c__4550__auto__;\nvar G__46963 = cljs.core.count(c__4550__auto__);\nvar G__46964 = (0);\nseq__46861 = G__46961;\nchunk__46862 = G__46962;\ncount__46863 = G__46963;\ni__46864 = G__46964;\ncontinue;\n} else {\nvar event = cljs.core.first(seq__46861__$1);\n(clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(event) : clear_event.call(null,event));\n\n\nvar G__46966 = cljs.core.next(seq__46861__$1);\nvar G__46967 = null;\nvar G__46968 = (0);\nvar G__46969 = (0);\nseq__46861 = G__46966;\nchunk__46862 = G__46967;\ncount__46863 = G__46968;\ni__46864 = G__46969;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn (clear_event.cljs$core$IFn$_invoke$arity$1 ? clear_event.cljs$core$IFn$_invoke$arity$1(value) : clear_event.call(null,value));\n}\n}));\nmranderson048.re_frame.v0v10v2.re_frame.fx.reg_fx(new cljs.core.Keyword(null,\"db\",\"db\",993250759),(function (value){\nif((!((cljs.core.deref(mranderson048.re_frame.v0v10v2.re_frame.db.app_db) === value)))){\nreturn cljs.core.reset_BANG_(mranderson048.re_frame.v0v10v2.re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",47],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",null,"~:excludes",["~#set",[]],"~:name","~$mranderson048.re-frame.v0v10v2.re-frame.fx","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$mranderson048.re-frame.v0v10v2.re-frame.loggers","^M","~$cljs.core","^N","~$goog","^O","~$mranderson048.re-frame.v0v10v2.re-frame.db","^P","~$router","~$mranderson048.re-frame.v0v10v2.re-frame.router","~$mranderson048.re-frame.v0v10v2.re-frame.interceptor","^S","~$mranderson048.re-frame.v0v10v2.re-frame.registrar","^T","~$events","~$mranderson048.re-frame.v0v10v2.re-frame.events","^R","^R","^V","^V","~$mranderson048.re-frame.v0v10v2.re-frame.interop","^W"],"~:seen",["^F",["~:require"]],"~:uses",["^ ","~$app-db","^P","~$->interceptor","^S","~$set-timeout!","^W","~$get-handler","^T","~$clear-handlers","^T","~$register-handler","^T","~$console","^M"],"~:require-macros",["^ ","^N","^N"],"~:form",["~#list",["~$ns","^H",["^18",["^Y",["^R","~:as","^Q"],["^P","~:refer",["^["]],["^S","^1;",["^10"]],["^W","^1;",["^11"]],["^V","^1:","^U"],["^T","^1;",["^12","^13","^14"]],["^M","^1;",["^15"]]]]]],"~:flags",["^ ","^Y",["^F",[]]],"~:js-deps",["^ "],"~:deps",["^O","^N","^R","^P","^S","^W","^V","^T","^M"]],"^J","^H","~:resource-id",["~:shadow.build.classpath/resource","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc"],"~:compiled-at",1570444245026,"~:resource-name","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","~:warnings",[],"~:source","(ns mranderson048.re-frame.v0v10v2.re-frame.fx\n  (:require\n    [mranderson048.re-frame.v0v10v2.re-frame.router      :as router]\n    [mranderson048.re-frame.v0v10v2.re-frame.db          :refer [app-db]]\n    [mranderson048.re-frame.v0v10v2.re-frame.interceptor :refer [->interceptor]]\n    [mranderson048.re-frame.v0v10v2.re-frame.interop     :refer [set-timeout!]]\n    [mranderson048.re-frame.v0v10v2.re-frame.events      :as events]\n    [mranderson048.re-frame.v0v10v2.re-frame.registrar   :refer [get-handler clear-handlers register-handler]]\n    [mranderson048.re-frame.v0v10v2.re-frame.loggers     :refer [console]]))\n\n\n;; -- Registration ------------------------------------------------------------\n\n(def kind :fx)\n(assert (mranderson048.re-frame.v0v10v2.re-frame.registrar/kinds kind))\n\n(defn reg-fx\n  \"Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`.\"\n  [id handler]\n  (register-handler kind id handler))\n\n;; -- Interceptor -------------------------------------------------------------\n\n(def do-fx\n  \"An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \\\"set flag\\\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed.\"\n  (->interceptor\n    :id :do-fx\n    :after (fn do-fx-after\n             [context]\n             (doseq [[effect-key effect-value] (:effects context)]\n               (if-let [effect-fn (get-handler kind effect-key false)]\n                 (effect-fn effect-value)\n                 (console :error \"re-frame: no handler registered for effect: \\\"\" effect-key \"\\\". Ignoring.\"))))))\n\n;; -- Builtin Effect Handlers  ------------------------------------------------\n\n;; :dispatch-later\n;;\n;; `dispatch` one or more events after given delays. Expects a collection\n;; of maps with two keys:  :`ms` and `:dispatch`\n;;\n;; usage:\n;;\n;;    {:dispatch-later [{:ms 200 :dispatch [:event-id \"param\"]}    ;;  in 200ms do this: (dispatch [:event-id \"param\"])\n;;                      {:ms 100 :dispatch [:also :this :in :100ms]}]}\n;;\n(reg-fx\n  :dispatch-later\n  (fn [value]\n    (doseq [{:keys [ms dispatch] :as effect} value]\n        (if (or (empty? dispatch) (not (number? ms)))\n          (console :error \"re-frame: ignoring bad :dispatch-later value:\" effect)\n          (set-timeout! #(router/dispatch dispatch) ms)))))\n\n\n;; :dispatch\n;;\n;; `dispatch` one event. Excepts a single vector.\n;;\n;; usage:\n;;   {:dispatch [:event-id \"param\"] }\n\n(reg-fx\n  :dispatch\n  (fn [value]\n    (if-not (vector? value)\n      (console :error \"re-frame: ignoring bad :dispatch value. Expected a vector, but got:\" value)\n      (router/dispatch value))))\n\n\n;; :dispatch-n\n;;\n;; `dispatch` more than one event. Expects a list or vector of events. Something for which\n;; sequential? returns true.\n;;\n;; usage:\n;;   {:dispatch-n (list [:do :all] [:three :of] [:these])}\n;;\n;; Note: nil events are ignored which means events can be added\n;; conditionally:\n;;    {:dispatch-n (list (when (> 3 5) [:conditioned-out])\n;;                       [:another-one])}\n;;\n(reg-fx\n  :dispatch-n\n  (fn [value]\n    (if-not (sequential? value)\n      (console :error \"re-frame: ignoring bad :dispatch-n value. Expected a collection, got got:\" value)\n      (doseq [event (remove nil? value)] (router/dispatch event)))))\n\n\n;; :deregister-event-handler\n;;\n;; removes a previously registered event handler. Expects either a single id (\n;; typically a namespaced keyword), or a seq of ids.\n;;\n;; usage:\n;;   {:deregister-event-handler :my-id)}\n;; or:\n;;   {:deregister-event-handler [:one-id :another-id]}\n;;\n(reg-fx\n  :deregister-event-handler\n  (fn [value]\n    (let [clear-event (partial clear-handlers events/kind)]\n      (if (sequential? value)\n        (doseq [event value] (clear-event event))\n        (clear-event value)))))\n\n\n;; :db\n;;\n;; reset! app-db with a new value. `value` is expected to be a map.\n;;\n;; usage:\n;;   {:db  {:key1 value1 key2 value2}}\n;;\n(reg-fx\n  :db\n  (fn [value]\n    (if-not (identical? @app-db value)\n      (reset! app-db value))))\n\n","~:reader-features",["^F",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings",";;;;;;;;;AAaA,AAAA,AAAKA;AACL,AAAQ,AAACE,AAAAA,AAAAA,AAAwDF,AAAAA;AAAjE;AAAA,AAAA,AAAA,AAAAC,AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,AAAME,AAwBHC,AAAGC;AAxBN,AAyBE,AAACC,AAAiBN,AAAKI,AAAGC;;AAI5B;;;;;;;;;;;;;;;;;;;;;;AAAKE,AAqBH,AAAA,AAAA,AAAA,AAACC,AAEQ,AACGC;AADH,AAEE,AAAAC,AAAA,AAAAC,AAAkC,AAAA,AAAUF;AAA5CG,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAASW;AAAT,AAAAV,AAAAD,AAAA,AAAA,AAAoBY;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAY9B,AAAK0B;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAAgEL;;;AAHrE;AAAA,AAAAhB;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAG,AAAA,AAAAN,AAAAD;AAAA,AAAA,AAAAO;AAAA,AAAA,AAAAP,AAAAO;AAAA,AAAA,AAAA,AAAAC,AAAAR;AAAA,AAAAS,AAAA,AAAAC,AAAAV;AAAA,AAAA,AAAA,AAAAW,AAAAX;AAAAS;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAI,AAAA,AAAAC,AAAAd;AAAA,AAAAM,AAAAO,AAAA,AAAA,AAASG;AAAT,AAAAV,AAAAO,AAAA,AAAA,AAAoBI;AAApB,AAAA,AACE,AAAAC,AAAmB,AAAA,AAACE,AAAY9B,AAAK0B;AAArC,AAAA,AAAAE;AAAA,AAAAA,AAASC;AAAT,AACE,AAACA,AAAAA,AAAAA,AAAUF,AAAAA;;AACX,AAAA,AAAA,AAAA,AAACI,AAAgEL;;;AAHrE;AAAA,AAAA,AAAAD,AAAAf;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AAiBb,AAAA,AAACP,AAEC,AAAK6B;AAAL,AACE,AAAAC,AAAA,AAAAtB,AAAyCqB;AAAzCE,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAAE,AAAA,AAAAH,AAAAE;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAE,AAAAC,AAAAH,AAAAA;AAAAA,AAAiCQ;AAAjC,AAAAJ,AAAAJ,AAAA,AAAgBM;AAAhB,AAAAF,AAAAJ,AAAA,AAAmBO;AAAnB,AAAA,AACI,AAAI,AAAI,AAACE,AAAOF,AAAU,AAAK,AAASD;AACtC,AAAA,AAAA,AAACZ,AAA+Dc;;AAChE,AAAA,AAACE;;AAAD,AAAe,AAACC,AAAgBJ;;AAAUD;;;AAHhD;AAAA,AAAAV;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAnB,AAAA,AAAAN,AAAAsB;AAAA,AAAA,AAAAhB;AAAA,AAAA,AAAAgB,AAAAhB;AAAA,AAAA,AAAA,AAAAC,AAAAe;AAAA,AAAAd,AAAA,AAAAC,AAAAa;AAAA,AAAA,AAAA,AAAAZ,AAAAY;AAAAd;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAAuB,AAAA,AAAAlB,AAAAS;AAAAS,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAJ,AAAA,AAAAI,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAAC,AAAAE,AAAAA;AAAAA,AAAiCG;AAAjC,AAAAJ,AAAAC,AAAA,AAAgBC;AAAhB,AAAAF,AAAAC,AAAA,AAAmBE;AAAnB,AAAA,AACI,AAAI,AAAI,AAACE,AAAOF,AAAU,AAAK,AAASD;AACtC,AAAA,AAAA,AAACZ,AAA+Dc;;AAChE,AAAA,AAACE;;AAAD,AAAe,AAACC,AAAgBJ;;AAAUD;;;AAHhD;AAAA,AAAA,AAAAlB,AAAAQ;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AAaJ,AAAA,AAAC9B,AAEC,AAAK6B;AAAL,AACE,AAAA,AAAQ,AAACiB,AAAQjB;AACf,AAAA,AAAA,AAACD,AAAqFC;;AACtF,AAACgB,AAAgBhB;;;AAgBvB,AAAA,AAAC7B,AAEC,AAAK6B;AAAL,AACE,AAAA,AAAQ,AAACkB,AAAYlB;AACnB,AAAA,AAAA,AAACD,AAA2FC;;AAC5F,AAAAmB,AAAA,AAAAxC,AAAc,AAAC6C,AAAOC,AAAKzB;AAA3BoB,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQC;AAAR,AAAA,AAAmC,AAACP,AAAgBO;;AAApD;AAAA,AAAAJ;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAArC,AAAA,AAAAN,AAAAwC;AAAA,AAAA,AAAAlC;AAAA,AAAA,AAAAkC,AAAAlC;AAAA,AAAA,AAAA,AAAAC,AAAAiC;AAAA,AAAAhC,AAAA,AAAAC,AAAA+B;AAAA,AAAA,AAAA,AAAA9B,AAAA8B;AAAAhC;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAK,AAAA2B,AAAQI;AAAR,AAAA,AAAmC,AAACP,AAAgBO;;AAApD;AAAA,AAAA,AAAA9B,AAAA0B;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;;AAaN,AAAA,AAAChD,AAEC,AAAK6B;AAAL,AACE,AAAM0B,AAAY,AAACC,AAAQC,AAAeC;AAA1C,AACE,AAAI,AAACX,AAAYlB;AACf,AAAA8B,AAAA,AAAAnD,AAAcqB;AAAd+B,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQV;AAAR,AAAA,AAAqB,AAACG,AAAAA,AAAAA,AAAYH,AAAAA;;AAAlC;AAAA,AAAAO;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAhD,AAAA,AAAAN,AAAAmD;AAAA,AAAA,AAAA7C;AAAA,AAAA,AAAA6C,AAAA7C;AAAA,AAAA,AAAA,AAAAC,AAAA4C;AAAA,AAAA3C,AAAA,AAAAC,AAAA0C;AAAA,AAAA,AAAA,AAAAzC,AAAAyC;AAAA3C;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAK,AAAAsC,AAAQP;AAAR,AAAA,AAAqB,AAACG,AAAAA,AAAAA,AAAYH,AAAAA;;AAAlC;AAAA,AAAA,AAAA9B,AAAAqC;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;;AACA,AAACJ,AAAAA,AAAAA,AAAY1B,AAAAA;;;AAUrB,AAAA,AAAC7B,AAEC,AAAK6B;AAAL,AACE,AAAA,AAAQ,AAAA,AAAAkC,AAAaC,AAAOnC;AAC1B,AAACoC,AAAOD,AAAOnC;;AADjB","names",["mranderson048.re-frame.v0v10v2.re-frame.fx/kind","js/Error","mranderson048.re-frame.v0v10v2.re-frame.registrar/kinds","mranderson048.re-frame.v0v10v2.re-frame.fx/reg-fx","id","handler","mranderson048.re-frame.v0v10v2.re-frame.registrar/register-handler","mranderson048.re-frame.v0v10v2.re-frame.fx/do-fx","mranderson048.re_frame.v0v10v2.re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic","context","seq__46753","cljs.core/seq","chunk__46754","count__46755","i__46756","vec__46765","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","temp__5720__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__46769","cljs.core/first","cljs.core/next","effect-key","effect-value","temp__5718__auto__","effect-fn","mranderson048.re_frame.v0v10v2.re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3","mranderson048.re_frame.v0v10v2.re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic","value","seq__46774","chunk__46775","count__46776","i__46777","map__46794","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","map__46810","ms","dispatch","effect","cljs.core/empty?","mranderson048.re-frame.v0v10v2.re-frame.interop/set-timeout!","mranderson048.re-frame.v0v10v2.re-frame.router/dispatch","cljs.core/vector?","cljs.core/sequential?","seq__46838","chunk__46839","count__46840","i__46841","event","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","cljs.core/nil?","clear-event","cljs.core.partial.cljs$core$IFn$_invoke$arity$2","mranderson048.re-frame.v0v10v2.re-frame.registrar/clear-handlers","mranderson048.re-frame.v0v10v2.re-frame.events/kind","seq__46861","chunk__46862","count__46863","i__46864","cljs.core/deref","mranderson048.re-frame.v0v10v2.re-frame.db/app-db","cljs.core/reset!"]]],"~:cache-keys",["~#cmap",[["~:shadow.build.npm/resource","node_modules/react-dom/index.js"],[1568638379000,1568638379000,499162500000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^F",[]],"~:deps-syms",["~$shadow.js","~$module$node_modules$react_dom$cjs$react_dom_production_min","~$module$node_modules$react_dom$cjs$react_dom_development"]]],["^1@","goog/dom/tagname.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.dom.HtmlElement"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/loggers.cljc"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","~$clojure.set"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^R","^P","^S","^W","^V","^T","^M"]]],["^1@","goog/math/math.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.array","~$goog.asserts"]]],["^1@","goog/labs/useragent/browser.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1W","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/core.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^?","~$mranderson048.reagent.v0v8v0.reagent.impl.template","~$mranderson048.reagent.v0v8v0.reagent.impl.component","~$mranderson048.reagent.v0v8v0.reagent.impl.util","~$mranderson048.reagent.v0v8v0.reagent.impl.batching","~$mranderson048.reagent.v0v8v0.reagent.ratom","~$mranderson048.reagent.v0v8v0.reagent.debug","~$mranderson048.reagent.v0v8v0.reagent.interop","~$mranderson048.reagent.v0v8v0.reagent.dom"]]],["^1@","goog/array/array.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1X"]]],["^1M","node_modules/prop-types/checkPropTypes.js"],[1568638379000,1568638379000,1549836454000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$prop_types$lib$ReactPropTypesSecret"]]],["^1M","node_modules/fbjs/lib/emptyFunction.js"],[1568638379000,1568638379000,1528785402000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1@","goog/debug/error.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/dom.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^C","^22","^20","^23","^24","^25","^26"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/impl/component.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^A","^?","^22","^23","^24","^26","^25"]]],["^1M","node_modules/fbjs/lib/emptyObject.js"],[1568638379000,1568638379000,1528785402000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1@","goog/dom/nodetype.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1M","node_modules/scheduler/cjs/scheduler.development.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1M","node_modules/scheduler/cjs/scheduler.production.min.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1M","node_modules/scheduler/cjs/scheduler-tracing.production.min.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1M","node_modules/create-react-class/factory.js"],[1568638379000,1568638379000,1517346959000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$object_assign$index","~$module$node_modules$fbjs$lib$emptyObject","~$module$node_modules$fbjs$lib$invariant","~$module$node_modules$fbjs$lib$warning"]]],["^1M","node_modules/react/index.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^1@","shadow/js.js"],[1568638379000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","goog/object/object.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1M","node_modules/react-dom/cjs/react-dom.production.min.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^?","^29","~$module$node_modules$scheduler$index"]]],"~:SHADOW-TIMESTAMP",[1568638379000,1568638518000],["^1M","node_modules/react/cjs/react.development.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^29","~$module$node_modules$prop_types$checkPropTypes"]]],["^1@","goog/math/long.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1X","~$goog.reflect"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/impl/batching.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^25","^26","^22","~$clojure.string"]]],["^1@","goog/string/internal.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1M","node_modules/scheduler/cjs/scheduler-tracing.development.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1M","node_modules/fbjs/lib/warning.js"],[1568638379000,1568638379000,1528785401000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$fbjs$lib$emptyFunction"]]],["^1@","goog/functions/functions.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","clojure/walk.cljs"],[1568638518000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N"]]],["^1@","goog/structs/map.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/router.cljc"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^V","^W","^M","~$mranderson048.re-frame.v0v10v2.re-frame.trace"]]],["^1M","node_modules/scheduler/index.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$scheduler$cjs$scheduler_production_min","~$module$node_modules$scheduler$cjs$scheduler_development"]]],["^1@","goog/labs/useragent/engine.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1W","^1Y","~$goog.string"]]],["^1@","goog/asserts/asserts.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1@","goog/uri/uri.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1W","^1X","^2J","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/ratom.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^22","^25","^23","^1V"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/interop.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/registrar.cljc"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^W","^M"]]],["^1M","node_modules/object-assign/index.js"],[1568638379000,1568638379000,1484580833000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/events.cljc"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^P","~$mranderson048.re-frame.v0v10v2.re-frame.utils","^W","^T","^M","^S","^2G"]]],["^1@","goog/base.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",[]]],["^1@","goog/structs/structs.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1W","^1Z"]]],["^1@","clojure/string.cljs"],[1568638518000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^2J","~$goog.string.StringBuffer"]]],["^1M","node_modules/create-react-class/index.js"],[1568638379000,1568638379000,1517346956000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^?","~$module$node_modules$create_react_class$factory"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/interceptor.cljc"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^M","^W","^1V"]]],["^1M","node_modules/react/cjs/react.production.min.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^29"]]],["^1@","goog/debug/entrypointregistry.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1X"]]],["^1@","goog/string/string.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1["]]],["^1@","mranderson048/reagent/v0v8v0/reagent/impl/template.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^?","^2C","~$clojure.walk","^22","^21","^23","^24","^26","^25"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/impl/util.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^25","^26","^2C"]]],["^1@","goog/reflect/reflect.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","goog/labs/useragent/util.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1["]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/trace.cljc"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^W","^M"]]],["^1@","goog/string/stringbuffer.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","goog/iter/iter.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1W","^1X","~$goog.functions","~$goog.math"]]],["^1@","goog/async/nexttick.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","~$goog.debug.entryPointRegistry","~$goog.dom.TagName","^2V","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine"]]],["^1M","node_modules/prop-types/lib/ReactPropTypesSecret.js"],[1568638379000,1568638379000,1549571078000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]],["^1@","goog/dom/htmlelement.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1@","cljs/core.cljs"],[1568638518000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["~$goog.math.Long","~$goog.math.Integer","^2J","^1Z","^1W","~$goog.Uri","^2S"]]],["^1@","goog/math/integer.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O"]]],["^1M","node_modules/scheduler/tracing.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","~$module$node_modules$scheduler$cjs$scheduler_tracing_production_min","~$module$node_modules$scheduler$cjs$scheduler_tracing_development"]]],["^1@","mranderson048/reagent/v0v8v0/reagent/debug.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N"]]],["^1M","node_modules/react-dom/cjs/react-dom.development.js"],[1568638379000,1568638379000,499162500000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R","^?","^29","^2?","^2A","~$module$node_modules$scheduler$tracing"]]],["^1@","clojure/set.cljs"],[1568638518000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N"]]],["^1@","goog/uri/utils.js"],[1568638513000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^1W","^1X","^2J"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/interop.cljs"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","~$goog.async.nextTick","~$mranderson048.reagent.v0v8v0.reagent.core","^24"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/utils.cljc"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^M"]]],["^1@","mranderson048/re_frame/v0v10v2/re_frame/db.cljc"],[1568718528000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^O","^N","^W"]]],["^1M","node_modules/fbjs/lib/invariant.js"],[1568638379000,1568638379000,1528785400000,"^1N",["^ ","^1O",null,"^1P",["^F",[]],"^1Q",["^1R"]]]]],"~:clj-info",["^ ","jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1568638518000,"jar:file:/home/jimmy/.m2/repository/day8/re-frame/re-frame-10x/0.3.3-react16/re-frame-10x-0.3.3-react16.jar!/mranderson048/reagent/v0v8v0/reagent/core.clj",1568718528000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/net/cgrand/macrovich/0.2.0/macrovich-0.2.0.jar!/net/cgrand/macrovich.cljc",1543198519000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/day8/re-frame/re-frame-10x/0.3.3-react16/re-frame-10x-0.3.3-react16.jar!/mranderson048/reagent/v0v8v0/reagent/debug.clj",1568718528000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/day8/re-frame/re-frame-10x/0.3.3-react16/re-frame-10x-0.3.3-react16.jar!/mranderson048/re_frame/v0v10v2/re_frame/trace.cljc",1568718528000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1537794058000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/day8/re-frame/re-frame-10x/0.3.3-react16/re-frame-10x-0.3.3-react16.jar!/mranderson048/re_frame/v0v10v2/re_frame/interop.clj",1568718528000,"jar:file:/home/jimmy/.m2/repository/day8/re-frame/re-frame-10x/0.3.3-react16/re-frame-10x-0.3.3-react16.jar!/mranderson048/reagent/v0v8v0/reagent/interop.clj",1568718528000,"jar:file:/home/jimmy/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/day8/re-frame/re-frame-10x/0.3.3-react16/re-frame-10x-0.3.3-react16.jar!/mranderson048/reagent/v0v8v0/reagent/ratom.clj",1568718528000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",1,"^8",5,"^9",1,"^:",47],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",null,"^E",["^F",[]],"^G","^H","^K",null,"^L",["^ ","^M","^M","^N","^N","^O","^O","^P","^P","^Q","^R","^S","^S","^T","^T","^U","^V","^R","^R","^V","^V","^W","^W"],"^X",["^F",["^Y"]],"~:shadow/js-access-global",["^F",["Error"]],"^Z",["^ ","^[","^P","^10","^S","^11","^W","^12","^T","^13","^T","^14","^T","^15","^M"],"~:defs",["^ ","~$kind",["^ ","^G","~$mranderson048.re-frame.v0v10v2.re-frame.fx/kind","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",14,"^8",1,"^9",14,"^:",10,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",14,"^8",6,"^9",14,"^:",10],"~:tag","~$cljs.core/Keyword"],"~$reg-fx",["^ ","~:protocol-inline",null,"^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",17,"^8",7,"^9",17,"^:",13,"~:arglists",["^18",["~$quote",["^18",[["~$id","~$handler"]]]]],"~:doc","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.fx/reg-fx","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^:",13,"~:method-params",["^18",[["^48","^49"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^8",1,"~:variadic?",false,"^7",17,"~:ret-tag","~$any","^9",17,"~:max-fixed-arity",2,"~:fn-var",true,"^46",["^18",["^47",["^18",[["^48","^49"]]]]],"^4:","Register the given effect `handler` for the given `id`.\n\n  `id` is keyword, often namespaced.\n  `handler` is a side-effecting function which takes a single argument and whose return\n  value is ignored.\n\n  Example Use\n  -----------\n\n  First, registration ... associate `:effect2` with a handler.\n\n  (reg-fx\n     :effect2\n     (fn [value]\n        ... do something side-effect-y))\n\n  Then, later, if an event handler were to return this effects map ...\n\n  {...\n   :effect2  [1 2]}\n\n   ... then the `handler` `fn` we registered previously, using `reg-fx`, will be\n   called with an argument of `[1 2]`."],"~$do-fx",["^ ","^5",["^ ","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^7",46,"^8",6,"^9",46,"^:",11],"^G","~$mranderson048.re-frame.v0v10v2.re-frame.fx/do-fx","^6","mranderson048/re_frame/v0v10v2/re_frame/fx.cljc","^:",11,"^8",1,"^7",46,"^9",46,"^42","~$cljs.core/IMap","^4:","An interceptor whose `:after` actions the contents of `:effects`. As a result,\n  this interceptor is Domino 3.\n\n  This interceptor is silently added (by reg-event-db etc) to the front of\n  interceptor chains for all events.\n\n  For each key in `:effects` (a map), it calls the registered `effects handler`\n  (see `reg-fx` for registration of effect handlers).\n\n  So, if `:effects` was:\n      {:dispatch  [:hello 42]\n       :db        {...}\n       :undo      \"set flag\"}\n\n  it will call the registered effect handlers for each of the map's keys:\n  `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n  value for that key - so in the example above the effect handler for :dispatch\n  will be given one arg `[:hello 42]`.\n\n  You cannot rely on the ordering in which effects are executed."]],"^16",["^ ","^N","^N"],"~:cljs.analyzer/constants",["^ ","^X",["^F",["~:db","~:do-fx","~:dispatch-n","~:deregister-event-handler","~:dispatch","~:after","~:id","~:effects","~:error","~:ms","~:fx","~:dispatch-later"]],"~:order",["^4R","^4N","^4I","^4M","^4O","^4P","^4S","^4Q","^4L","^4J","^4K","^4H"]],"^1<",["^ ","^Y",["^F",[]]],"^1=",["^ "],"^1>",["^O","^N","^R","^P","^S","^W","^V","^T","^M"]],"^J","^H","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1L",[["^4W","~:static-fns"],true,["^4W","~:elide-asserts"],false,["^4W","~:optimize-constants"],null,["^4W","^1C"],null,["^4W","~:external-config"],null,["^4W","~:tooling-config"],null,["^4W","~:emit-constants"],null,["^4W","~:load-tests"],null,["^4W","~:form-size-threshold"],null,["^4W","~:infer-externs"],true,["^4W","^1E"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^4W","~:fn-invoke-direct"],null,["^4W","~:source-map"],"/dev/null"]]]