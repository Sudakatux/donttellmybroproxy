["^ ","~:output",["^ ","~:js","goog.provide('devtools.formatters.templating');\ngoog.require('cljs.core');\ngoog.require('clojure.walk');\ngoog.require('devtools.util');\ngoog.require('devtools.protocols');\ngoog.require('devtools.formatters.helpers');\ngoog.require('devtools.formatters.state');\ngoog.require('clojure.string');\ndevtools.formatters.templating.mark_as_group_BANG_ = (function devtools$formatters$templating$mark_as_group_BANG_(value){\nvar x41414_41530 = value;\nx41414_41530.devtools$protocols$IGroup$ = cljs.core.PROTOCOL_SENTINEL;\n\n\nreturn value;\n});\ndevtools.formatters.templating.group_QMARK_ = (function devtools$formatters$templating$group_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$IGroup$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n}\n});\ndevtools.formatters.templating.mark_as_template_BANG_ = (function devtools$formatters$templating$mark_as_template_BANG_(value){\nvar x41418_41531 = value;\nx41418_41531.devtools$protocols$ITemplate$ = cljs.core.PROTOCOL_SENTINEL;\n\n\nreturn value;\n});\ndevtools.formatters.templating.template_QMARK_ = (function devtools$formatters$templating$template_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$ITemplate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n}\n});\ndevtools.formatters.templating.mark_as_surrogate_BANG_ = (function devtools$formatters$templating$mark_as_surrogate_BANG_(value){\nvar x41425_41535 = value;\nx41425_41535.devtools$protocols$ISurrogate$ = cljs.core.PROTOCOL_SENTINEL;\n\n\nreturn value;\n});\ndevtools.formatters.templating.surrogate_QMARK_ = (function devtools$formatters$templating$surrogate_QMARK_(value){\nif((!((value == null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL === value.devtools$protocols$ISurrogate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n}\n});\ndevtools.formatters.templating.reference_QMARK_ = (function devtools$formatters$templating$reference_QMARK_(value){\nreturn ((devtools.formatters.templating.group_QMARK_(value)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((value[(0)]),\"object\")));\n});\ndevtools.formatters.templating.make_group = (function devtools$formatters$templating$make_group(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___41537 = arguments.length;\nvar i__4731__auto___41538 = (0);\nwhile(true){\nif((i__4731__auto___41538 < len__4730__auto___41537)){\nargs__4736__auto__.push((arguments[i__4731__auto___41538]));\n\nvar G__41539 = (i__4731__auto___41538 + (1));\ni__4731__auto___41538 = G__41539;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((0) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic = (function (items){\nvar group = devtools.formatters.templating.mark_as_group_BANG_([]);\nvar seq__41436_41540 = cljs.core.seq(items);\nvar chunk__41437_41541 = null;\nvar count__41438_41542 = (0);\nvar i__41439_41543 = (0);\nwhile(true){\nif((i__41439_41543 < count__41438_41542)){\nvar item_41544 = chunk__41437_41541.cljs$core$IIndexed$_nth$arity$2(null,i__41439_41543);\nif((!((item_41544 == null)))){\nif(cljs.core.coll_QMARK_(item_41544)){\n(group[\"push\"]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_41544)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_41544));\n}\n} else {\n}\n\n\nvar G__41545 = seq__41436_41540;\nvar G__41546 = chunk__41437_41541;\nvar G__41547 = count__41438_41542;\nvar G__41548 = (i__41439_41543 + (1));\nseq__41436_41540 = G__41545;\nchunk__41437_41541 = G__41546;\ncount__41438_41542 = G__41547;\ni__41439_41543 = G__41548;\ncontinue;\n} else {\nvar temp__5720__auto___41549 = cljs.core.seq(seq__41436_41540);\nif(temp__5720__auto___41549){\nvar seq__41436_41550__$1 = temp__5720__auto___41549;\nif(cljs.core.chunked_seq_QMARK_(seq__41436_41550__$1)){\nvar c__4550__auto___41551 = cljs.core.chunk_first(seq__41436_41550__$1);\nvar G__41552 = cljs.core.chunk_rest(seq__41436_41550__$1);\nvar G__41553 = c__4550__auto___41551;\nvar G__41554 = cljs.core.count(c__4550__auto___41551);\nvar G__41555 = (0);\nseq__41436_41540 = G__41552;\nchunk__41437_41541 = G__41553;\ncount__41438_41542 = G__41554;\ni__41439_41543 = G__41555;\ncontinue;\n} else {\nvar item_41556 = cljs.core.first(seq__41436_41550__$1);\nif((!((item_41556 == null)))){\nif(cljs.core.coll_QMARK_(item_41556)){\n(group[\"push\"]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_41556)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_41556));\n}\n} else {\n}\n\n\nvar G__41557 = cljs.core.next(seq__41436_41550__$1);\nvar G__41558 = null;\nvar G__41559 = (0);\nvar G__41560 = (0);\nseq__41436_41540 = G__41557;\nchunk__41437_41541 = G__41558;\ncount__41438_41542 = G__41559;\ni__41439_41543 = G__41560;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn group;\n});\n\ndevtools.formatters.templating.make_group.cljs$lang$maxFixedArity = (0);\n\n/** @this {Function} */\ndevtools.formatters.templating.make_group.cljs$lang$applyTo = (function (seq41432){\nvar self__4718__auto__ = this;\nreturn self__4718__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq41432));\n});\n\ndevtools.formatters.templating.make_template = (function devtools$formatters$templating$make_template(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___41564 = arguments.length;\nvar i__4731__auto___41565 = (0);\nwhile(true){\nif((i__4731__auto___41565 < len__4730__auto___41564)){\nargs__4736__auto__.push((arguments[i__4731__auto___41565]));\n\nvar G__41567 = (i__4731__auto___41565 + (1));\ni__4731__auto___41565 = G__41567;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((2) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic = (function (tag,style,children){\nvar tag__$1 = devtools.formatters.helpers.pref(tag);\nvar style__$1 = devtools.formatters.helpers.pref(style);\nvar template = devtools.formatters.templating.mark_as_template_BANG_([tag__$1,((cljs.core.empty_QMARK_(style__$1))?({}):({\"style\": style__$1}))]);\nvar seq__41465_41572 = cljs.core.seq(children);\nvar chunk__41466_41573 = null;\nvar count__41467_41574 = (0);\nvar i__41468_41575 = (0);\nwhile(true){\nif((i__41468_41575 < count__41467_41574)){\nvar child_41576 = chunk__41466_41573.cljs$core$IIndexed$_nth$arity$2(null,i__41468_41575);\nif((!((child_41576 == null)))){\nif(cljs.core.coll_QMARK_(child_41576)){\n(template[\"push\"]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_41576))));\n} else {\nvar temp__5718__auto___41578 = devtools.formatters.helpers.pref(child_41576);\nif(cljs.core.truth_(temp__5718__auto___41578)){\nvar child_value_41579 = temp__5718__auto___41578;\ntemplate.push(child_value_41579);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__41580 = seq__41465_41572;\nvar G__41581 = chunk__41466_41573;\nvar G__41582 = count__41467_41574;\nvar G__41583 = (i__41468_41575 + (1));\nseq__41465_41572 = G__41580;\nchunk__41466_41573 = G__41581;\ncount__41467_41574 = G__41582;\ni__41468_41575 = G__41583;\ncontinue;\n} else {\nvar temp__5720__auto___41584 = cljs.core.seq(seq__41465_41572);\nif(temp__5720__auto___41584){\nvar seq__41465_41585__$1 = temp__5720__auto___41584;\nif(cljs.core.chunked_seq_QMARK_(seq__41465_41585__$1)){\nvar c__4550__auto___41586 = cljs.core.chunk_first(seq__41465_41585__$1);\nvar G__41588 = cljs.core.chunk_rest(seq__41465_41585__$1);\nvar G__41589 = c__4550__auto___41586;\nvar G__41590 = cljs.core.count(c__4550__auto___41586);\nvar G__41591 = (0);\nseq__41465_41572 = G__41588;\nchunk__41466_41573 = G__41589;\ncount__41467_41574 = G__41590;\ni__41468_41575 = G__41591;\ncontinue;\n} else {\nvar child_41594 = cljs.core.first(seq__41465_41585__$1);\nif((!((child_41594 == null)))){\nif(cljs.core.coll_QMARK_(child_41594)){\n(template[\"push\"]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_41594))));\n} else {\nvar temp__5718__auto___41599 = devtools.formatters.helpers.pref(child_41594);\nif(cljs.core.truth_(temp__5718__auto___41599)){\nvar child_value_41600 = temp__5718__auto___41599;\ntemplate.push(child_value_41600);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__41601 = cljs.core.next(seq__41465_41585__$1);\nvar G__41602 = null;\nvar G__41603 = (0);\nvar G__41604 = (0);\nseq__41465_41572 = G__41601;\nchunk__41466_41573 = G__41602;\ncount__41467_41574 = G__41603;\ni__41468_41575 = G__41604;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn template;\n});\n\ndevtools.formatters.templating.make_template.cljs$lang$maxFixedArity = (2);\n\n/** @this {Function} */\ndevtools.formatters.templating.make_template.cljs$lang$applyTo = (function (seq41453){\nvar G__41454 = cljs.core.first(seq41453);\nvar seq41453__$1 = cljs.core.next(seq41453);\nvar G__41455 = cljs.core.first(seq41453__$1);\nvar seq41453__$2 = cljs.core.next(seq41453__$1);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41454,G__41455,seq41453__$2);\n});\n\ndevtools.formatters.templating.concat_templates_BANG_ = (function devtools$formatters$templating$concat_templates_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___41606 = arguments.length;\nvar i__4731__auto___41607 = (0);\nwhile(true){\nif((i__4731__auto___41607 < len__4730__auto___41606)){\nargs__4736__auto__.push((arguments[i__4731__auto___41607]));\n\nvar G__41608 = (i__4731__auto___41607 + (1));\ni__4731__auto___41607 = G__41608;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (template,templates){\nreturn devtools.formatters.templating.mark_as_template_BANG_((template[\"concat\"]).apply(template,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.into_array,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,templates)))));\n});\n\ndevtools.formatters.templating.concat_templates_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.templating.concat_templates_BANG_.cljs$lang$applyTo = (function (seq41478){\nvar G__41479 = cljs.core.first(seq41478);\nvar seq41478__$1 = cljs.core.next(seq41478);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41479,seq41478__$1);\n});\n\ndevtools.formatters.templating.extend_template_BANG_ = (function devtools$formatters$templating$extend_template_BANG_(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___41615 = arguments.length;\nvar i__4731__auto___41616 = (0);\nwhile(true){\nif((i__4731__auto___41616 < len__4730__auto___41615)){\nargs__4736__auto__.push((arguments[i__4731__auto___41616]));\n\nvar G__41618 = (i__4731__auto___41616 + (1));\ni__4731__auto___41616 = G__41618;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (template,args){\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic(template,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));\n});\n\ndevtools.formatters.templating.extend_template_BANG_.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.templating.extend_template_BANG_.cljs$lang$applyTo = (function (seq41481){\nvar G__41482 = cljs.core.first(seq41481);\nvar seq41481__$1 = cljs.core.next(seq41481);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41482,seq41481__$1);\n});\n\ndevtools.formatters.templating.make_surrogate = (function devtools$formatters$templating$make_surrogate(var_args){\nvar G__41484 = arguments.length;\nswitch (G__41484) {\ncase 1:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1 = (function (object){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2(object,null);\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2 = (function (object,header){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3(object,header,null);\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3 = (function (object,header,body){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4(object,header,body,(0));\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4 = (function (object,header,body,start_index){\nreturn devtools.formatters.templating.mark_as_surrogate_BANG_((function (){var obj41486 = ({\"target\":object,\"header\":header,\"body\":body,\"startIndex\":(function (){var or__4131__auto__ = start_index;\nif(cljs.core.truth_(or__4131__auto__)){\nreturn or__4131__auto__;\n} else {\nreturn (0);\n}\n})()});\nreturn obj41486;\n})());\n});\n\ndevtools.formatters.templating.make_surrogate.cljs$lang$maxFixedArity = 4;\n\ndevtools.formatters.templating.get_surrogate_target = (function devtools$formatters$templating$get_surrogate_target(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"target\"]);\n});\ndevtools.formatters.templating.get_surrogate_header = (function devtools$formatters$templating$get_surrogate_header(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"header\"]);\n});\ndevtools.formatters.templating.get_surrogate_body = (function devtools$formatters$templating$get_surrogate_body(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"body\"]);\n});\ndevtools.formatters.templating.get_surrogate_start_index = (function devtools$formatters$templating$get_surrogate_start_index(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\"Assert failed: (surrogate? surrogate)\"));\n}\n\nreturn (surrogate[\"startIndex\"]);\n});\ndevtools.formatters.templating.make_reference = (function devtools$formatters$templating$make_reference(var_args){\nvar args__4736__auto__ = [];\nvar len__4730__auto___41631 = arguments.length;\nvar i__4731__auto___41635 = (0);\nwhile(true){\nif((i__4731__auto___41635 < len__4730__auto___41631)){\nargs__4736__auto__.push((arguments[i__4731__auto___41635]));\n\nvar G__41636 = (i__4731__auto___41635 + (1));\ni__4731__auto___41635 = G__41636;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4737__auto__ = ((((1) < args__4736__auto__.length))?(new cljs.core.IndexedSeq(args__4736__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4737__auto__);\n});\n\ndevtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic = (function (object,p__41493){\nvar vec__41494 = p__41493;\nvar state_override_fn = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41494,(0),null);\nif((((state_override_fn == null)) || (cljs.core.fn_QMARK_(state_override_fn)))){\n} else {\nthrow (new Error(\"Assert failed: (or (nil? state-override-fn) (fn? state-override-fn))\"));\n}\n\nif((object == null)){\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\"span\",\"span\",1394872991),new cljs.core.Keyword(null,\"nil-style\",\"nil-style\",-1505044832),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"nil-label\",\"nil-label\",-587789203)], 0));\n} else {\nvar sub_state = (((!((state_override_fn == null))))?(function (){var G__41497 = devtools.formatters.state.get_current_state();\nreturn (state_override_fn.cljs$core$IFn$_invoke$arity$1 ? state_override_fn.cljs$core$IFn$_invoke$arity$1(G__41497) : state_override_fn.call(null,G__41497));\n})():devtools.formatters.state.get_current_state());\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\"object\",({\"object\": object, \"config\": sub_state})], 0));\n}\n});\n\ndevtools.formatters.templating.make_reference.cljs$lang$maxFixedArity = (1);\n\n/** @this {Function} */\ndevtools.formatters.templating.make_reference.cljs$lang$applyTo = (function (seq41487){\nvar G__41488 = cljs.core.first(seq41487);\nvar seq41487__$1 = cljs.core.next(seq41487);\nvar self__4717__auto__ = this;\nreturn self__4717__auto__.cljs$core$IFn$_invoke$arity$variadic(G__41488,seq41487__$1);\n});\n\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating.print_preview = (function devtools$formatters$templating$print_preview(markup){\nvar _STAR_print_level_STAR__orig_val__41503 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__41504 = (1);\ncljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__41504;\n\ntry{return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([markup], 0));\n}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__41503;\n}});\ndevtools.formatters.templating.add_stack_separators = (function devtools$formatters$templating$add_stack_separators(stack){\nreturn cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\"-------------\",stack);\n});\ndevtools.formatters.templating.replace_fns_with_markers = (function devtools$formatters$templating$replace_fns_with_markers(stack){\nvar f = (function (v){\nif(cljs.core.fn_QMARK_(v)){\nreturn \"##fn##\";\n} else {\nreturn v;\n}\n});\nreturn clojure.walk.prewalk(f,stack);\n});\ndevtools.formatters.templating.pprint_render_calls = (function devtools$formatters$templating$pprint_render_calls(stack){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.util.pprint_str,stack);\n});\ndevtools.formatters.templating.pprint_render_stack = (function devtools$formatters$templating$pprint_render_stack(stack){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",devtools.formatters.templating.add_stack_separators(devtools.formatters.templating.pprint_render_calls(devtools.formatters.templating.replace_fns_with_markers(cljs.core.reverse(stack)))));\n});\ndevtools.formatters.templating.pprint_render_path = (function devtools$formatters$templating$pprint_render_path(path){\nreturn devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0));\n});\ndevtools.formatters.templating.assert_markup_error = (function devtools$formatters$templating$assert_markup_error(msg){\nthrow (new Error([\"Assert failed: \",[cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"\\n\",\"Render path: \",devtools.formatters.templating.pprint_render_path(devtools.formatters.templating._STAR_current_render_path_STAR_),\"\\n\",\"Render stack:\\n\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.templating.pprint_render_stack(devtools.formatters.templating._STAR_current_render_stack_STAR_))].join(''),\"\\n\",\"false\"].join('')));\n\n});\ndevtools.formatters.templating.surrogate_markup_QMARK_ = (function devtools$formatters$templating$surrogate_markup_QMARK_(markup){\nreturn ((cljs.core.sequential_QMARK_(markup)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(markup),\"surrogate\")));\n});\ndevtools.formatters.templating.render_special = (function devtools$formatters$templating$render_special(name,args){\nvar G__41513 = name;\nswitch (G__41513) {\ncase \"surrogate\":\nvar obj = cljs.core.first(args);\nvar converted_args = cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.rest(args));\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_surrogate,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj], null),converted_args));\n\nbreak;\ncase \"reference\":\nvar obj = cljs.core.first(args);\nvar converted_obj = ((devtools.formatters.templating.surrogate_markup_QMARK_(obj))?(devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1 ? devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1(obj) : devtools.formatters.templating.render_json_ml_STAR_.call(null,obj)):obj);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_reference,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [converted_obj], null),cljs.core.rest(args)));\n\nbreak;\ndefault:\nreturn devtools.formatters.templating.assert_markup_error([\"no matching special tag name: '\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\"'\"].join(''));\n\n}\n});\ndevtools.formatters.templating.emptyish_QMARK_ = (function devtools$formatters$templating$emptyish_QMARK_(v){\nif(((cljs.core.seqable_QMARK_(v)) || (cljs.core.array_QMARK_(v)) || (typeof v === 'string'))){\nreturn cljs.core.empty_QMARK_(v);\n} else {\nreturn false;\n}\n});\ndevtools.formatters.templating.render_subtree = (function devtools$formatters$templating$render_subtree(tag,children){\nvar vec__41516 = tag;\nvar html_tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41516,(0),null);\nvar style = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__41516,(1),null);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.templating.make_template,html_tag,style,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.emptyish_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,children))));\n});\ndevtools.formatters.templating.render_json_ml_STAR_ = (function devtools$formatters$templating$render_json_ml_STAR_(markup){\nif((!(cljs.core.sequential_QMARK_(markup)))){\nreturn markup;\n} else {\nvar _STAR_current_render_path_STAR__orig_val__41519 = devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_path_STAR__temp_val__41520 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,cljs.core.first(markup));\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__temp_val__41520;\n\ntry{var tag = devtools.formatters.helpers.pref(cljs.core.first(markup));\nif(typeof tag === 'string'){\nreturn devtools.formatters.templating.render_special(tag,cljs.core.rest(markup));\n} else {\nif(cljs.core.sequential_QMARK_(tag)){\nreturn devtools.formatters.templating.render_subtree(tag,cljs.core.rest(markup));\n} else {\nreturn devtools.formatters.templating.assert_markup_error([\"invalid json-ml markup at \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.templating.print_preview(markup)),\":\"].join(''));\n\n}\n}\n}finally {devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__orig_val__41519;\n}}\n});\ndevtools.formatters.templating.render_json_ml = (function devtools$formatters$templating$render_json_ml(markup){\nvar _STAR_current_render_stack_STAR__orig_val__41522 = devtools.formatters.templating._STAR_current_render_stack_STAR_;\nvar _STAR_current_render_path_STAR__orig_val__41523 = devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_stack_STAR__temp_val__41524 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_stack_STAR_,markup);\nvar _STAR_current_render_path_STAR__temp_val__41525 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,\"<render-json-ml>\");\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = _STAR_current_render_stack_STAR__temp_val__41524;\n\ndevtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__temp_val__41525;\n\ntry{return devtools.formatters.templating.render_json_ml_STAR_(markup);\n}finally {devtools.formatters.templating._STAR_current_render_path_STAR_ = _STAR_current_render_path_STAR__orig_val__41523;\n\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ = _STAR_current_render_stack_STAR__orig_val__41522;\n}});\ndevtools.formatters.templating.assert_failed_markup_rendering = (function devtools$formatters$templating$assert_failed_markup_rendering(initial_value,value){\nthrow (new Error([\"Assert failed: \",[\"result of markup rendering must be a template,\\n\",\"resolved to \",devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),\"initial value: \",devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([initial_value], 0))].join(''),\"\\n\",\"false\"].join('')));\n\n});\ndevtools.formatters.templating.render_markup_STAR_ = (function devtools$formatters$templating$render_markup_STAR_(initial_value,value){\nwhile(true){\nif(cljs.core.fn_QMARK_(value)){\nvar G__41691 = initial_value;\nvar G__41692 = (value.cljs$core$IFn$_invoke$arity$0 ? value.cljs$core$IFn$_invoke$arity$0() : value.call(null));\ninitial_value = G__41691;\nvalue = G__41692;\ncontinue;\n} else {\nif((value instanceof cljs.core.Keyword)){\nvar G__41693 = initial_value;\nvar G__41694 = devtools.formatters.helpers.pref(value);\ninitial_value = G__41693;\nvalue = G__41694;\ncontinue;\n} else {\nif(cljs.core.sequential_QMARK_(value)){\nvar G__41697 = initial_value;\nvar G__41698 = devtools.formatters.templating.render_json_ml(value);\ninitial_value = G__41697;\nvalue = G__41698;\ncontinue;\n} else {\nif(devtools.formatters.templating.template_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.surrogate_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.reference_QMARK_(value)){\nreturn value;\n} else {\nreturn (devtools.formatters.templating.assert_failed_markup_rendering.cljs$core$IFn$_invoke$arity$2 ? devtools.formatters.templating.assert_failed_markup_rendering.cljs$core$IFn$_invoke$arity$2(initial_value,value) : devtools.formatters.templating.assert_failed_markup_rendering.call(null,initial_value,value));\n\n}\n}\n}\n}\n}\n}\nbreak;\n}\n});\ndevtools.formatters.templating.render_markup = (function devtools$formatters$templating$render_markup(value){\nreturn devtools.formatters.templating.render_markup_STAR_(value,value);\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","devtools/formatters/templating.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",35],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index"],"~:use-macros",["^ ","~$oget","~$devtools.oops","~$oset","^F","~$ocall","^F","~$oapply","^F","~$safe-call","^F","~$unchecked-aget","^F"],"~:excludes",["~#set",[]],"~:name","~$devtools.formatters.templating","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$devtools.formatters.helpers","^T","~$devtools.formatters.state","^U","~$devtools.util","^V","~$cljs.core","^W","~$goog","^X","~$devtools.protocols","^Y","~$string","~$clojure.string","^[","^[","~$clojure.walk","^10"],"~:seen",["^M",["~:require","~:require-macros"]],"~:uses",["^ ","~$prevent-recursion?","^U","~$IGroup","^Y","~$ITemplate","^Y","~$get-current-state","^U","~$ISurrogate","^Y","~$pref","^T","~$prewalk","^10","~$IFormat","^Y","~$pprint-str","^V","~$cljs-value?","^T"],"^13",["^ ","^F","^F","^W","^W"],"~:form",["~#list",["~$ns","^O",["^1@",["^13",["^F","~:refer",["^E","^G","^H","^I","^J","^K"]]]],["^1@",["^12",["^10","^1B",["^1;"]],["^V","^1B",["^1="]],["^Y","^1B",["^17","^16","^19","^1<"]],["^T","^1B",["^1:","^1>"]],["^U","^1B",["^18","^15"]],["^[","~:as","^Z"]]]]],"~:flags",["^ ","^13",["^M",[]],"^12",["^M",[]]],"~:js-deps",["^ "],"~:deps",["^X","^W","^10","^V","^Y","^T","^U","^["]],"^Q","^O","~:resource-id",["~:shadow.build.classpath/resource","devtools/formatters/templating.cljs"],"~:compiled-at",1570444242010,"~:resource-name","devtools/formatters/templating.cljs","~:warnings",[],"~:source","(ns devtools.formatters.templating\n  (:require-macros [devtools.oops :refer [oget oset ocall oapply safe-call unchecked-aget]])\n  (:require [clojure.walk :refer [prewalk]]\n            [devtools.util :refer [pprint-str]]\n            [devtools.protocols :refer [ITemplate IGroup ISurrogate IFormat]]\n            [devtools.formatters.helpers :refer [pref cljs-value?]]\n            [devtools.formatters.state :refer [get-current-state prevent-recursion?]]\n            [clojure.string :as string]))\n\n; -- object marking support -------------------------------------------------------------------------------------------------\n\n(defn mark-as-group! [value]\n  (specify! value IGroup)\n  value)\n\n(defn group? [value]\n  (satisfies? IGroup value))\n\n(defn mark-as-template! [value]\n  (specify! value ITemplate)\n  value)\n\n(defn template? [value]\n  (satisfies? ITemplate value))\n\n(defn mark-as-surrogate! [value]\n  (specify! value ISurrogate)\n  value)\n\n(defn surrogate? [value]\n  (satisfies? ISurrogate value))\n\n(defn reference? [value]\n  (and (group? value)\n       (= (unchecked-aget value 0) \"object\")))\n\n; ---------------------------------------------------------------------------------------------------------------------------\n\n(defn make-group [& items]\n  (let [group (mark-as-group! #js [])]\n    (doseq [item items]\n      (if (some? item)\n        (if (coll? item)\n          (.apply (unchecked-aget group \"push\") group (mark-as-group! (into-array item)))                                               ; convenience helper to splat cljs collections\n          (.push group (pref item)))))\n    group))\n\n(defn make-template\n  [tag style & children]\n  (let [tag (pref tag)\n        style (pref style)\n        template (mark-as-template! #js [tag (if (empty? style)\n                                               #js {}\n                                               #js {\"style\" style})])]\n    (doseq [child children]\n      (if (some? child)\n        (if (coll? child)\n          (.apply (unchecked-aget template \"push\") template (mark-as-template! (into-array (keep pref child))))                         ; convenience helper to splat cljs collections\n          (if-let [child-value (pref child)]\n            (.push template child-value)))))\n    template))\n\n(defn concat-templates! [template & templates]\n  (mark-as-template! (.apply (oget template \"concat\") template (into-array (map into-array (keep pref templates))))))\n\n(defn extend-template! [template & args]\n  (concat-templates! template args))\n\n(defn make-surrogate\n  ; passing :target as body means that targt object body should be rendered using standard templates\n  ; see <surrogate-body> in markup.cljs\n  ([object] (make-surrogate object nil))\n  ([object header] (make-surrogate object header nil))\n  ([object header body] (make-surrogate object header body 0))\n  ([object header body start-index]\n   (mark-as-surrogate! (js-obj\n                         \"target\" object\n                         \"header\" header\n                         \"body\" body\n                         \"startIndex\" (or start-index 0)))))\n\n(defn get-surrogate-target [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"target\"))\n\n(defn get-surrogate-header [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"header\"))\n\n(defn get-surrogate-body [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"body\"))\n\n(defn get-surrogate-start-index [surrogate]\n  {:pre [(surrogate? surrogate)]}\n  (oget surrogate \"startIndex\"))\n\n(defn make-reference [object & [state-override-fn]]\n  {:pre [(or (nil? state-override-fn) (fn? state-override-fn))]}\n  (if (nil? object)\n    ; this code is duplicated in markup.cljs <nil>\n    (make-template :span :nil-style :nil-label)\n    (let [sub-state (if (some? state-override-fn)\n                      (state-override-fn (get-current-state))\n                      (get-current-state))]\n      (make-group \"object\" #js {\"object\" object\n                                \"config\" sub-state}))))\n\n; -- JSON ML support --------------------------------------------------------------------------------------------------------\n\n; a renderer from hiccup-like data markup to json-ml\n;\n; [[tag style] child1 child2 ...] -> #js [tag #js {\"style\" ...} child1 child2 ...]\n;\n\n(declare render-json-ml*)\n\n(def ^:dynamic *current-render-stack* [])\n(def ^:dynamic *current-render-path* [])\n\n(defn print-preview [markup]\n  (binding [*print-level* 1]\n    (pr-str markup)))\n\n(defn add-stack-separators [stack]\n  (interpose \"-------------\" stack))\n\n(defn replace-fns-with-markers [stack]\n  (let [f (fn [v]\n            (if (fn? v)\n              \"##fn##\"\n              v))]\n    (prewalk f stack)))\n\n(defn pprint-render-calls [stack]\n  (map pprint-str stack))\n\n(defn pprint-render-stack [stack]\n  (string/join \"\\n\" (-> stack\n                        reverse\n                        replace-fns-with-markers\n                        pprint-render-calls\n                        add-stack-separators)))\n\n(defn pprint-render-path [path]\n  (pprint-str path))\n\n(defn assert-markup-error [msg]\n  (assert false (str msg \"\\n\"\n                     \"Render path: \" (pprint-render-path *current-render-path*) \"\\n\"\n                     \"Render stack:\\n\"\n                     (pprint-render-stack *current-render-stack*))))\n\n(defn surrogate-markup? [markup]\n  (and (sequential? markup) (= (first markup) \"surrogate\")))\n\n(defn render-special [name args]\n  (case name\n    \"surrogate\" (let [obj (first args)\n                      converted-args (map render-json-ml* (rest args))]\n                  (apply make-surrogate (concat [obj] converted-args)))\n    \"reference\" (let [obj (first args)\n                      converted-obj (if (surrogate-markup? obj) (render-json-ml* obj) obj)]\n                  (apply make-reference (concat [converted-obj] (rest args))))\n    (assert-markup-error (str \"no matching special tag name: '\" name \"'\"))))\n\n(defn emptyish? [v]\n  (if (or (seqable? v) (array? v) (string? v))\n    (empty? v)\n    false))\n\n(defn render-subtree [tag children]\n  (let [[html-tag style] tag]\n    (apply make-template html-tag style (map render-json-ml* (remove emptyish? (map pref children))))))\n\n(defn render-json-ml* [markup]\n  (if-not (sequential? markup)\n    markup\n    (binding [*current-render-path* (conj *current-render-path* (first markup))]\n      (let [tag (pref (first markup))]\n        (cond\n          (string? tag) (render-special tag (rest markup))\n          (sequential? tag) (render-subtree tag (rest markup))\n          :else (assert-markup-error (str \"invalid json-ml markup at \" (print-preview markup) \":\")))))))\n\n(defn render-json-ml [markup]\n  (binding [*current-render-stack* (conj *current-render-stack* markup)\n            *current-render-path* (conj *current-render-path* \"<render-json-ml>\")]\n    (render-json-ml* markup)))\n\n; -- template rendering -----------------------------------------------------------------------------------------------------\n\n(defn ^:dynamic assert-failed-markup-rendering [initial-value value]\n  (assert false (str \"result of markup rendering must be a template,\\n\"\n                     \"resolved to \" (pprint-str value)\n                     \"initial value: \" (pprint-str initial-value))))\n\n(defn render-markup* [initial-value value]\n  (cond\n    (fn? value) (recur initial-value (value))\n    (keyword? value) (recur initial-value (pref value))\n    (sequential? value) (recur initial-value (render-json-ml value))\n    (template? value) value\n    (surrogate? value) value\n    (reference? value) value\n    :else (assert-failed-markup-rendering initial-value value)))\n\n(defn render-markup [value]\n  (render-markup* value value))\n","~:reader-features",["^M",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["devtools.formatters.templating/mark-as-group!","value","x41414","cljs.core/PROTOCOL_SENTINEL","devtools.formatters.templating/group?","cljs.core/native-satisfies?","devtools.protocols/IGroup","devtools.formatters.templating/mark-as-template!","x41418","devtools.formatters.templating/template?","devtools.protocols/ITemplate","devtools.formatters.templating/mark-as-surrogate!","x41425","devtools.formatters.templating/surrogate?","devtools.protocols/ISurrogate","devtools.formatters.templating/reference?","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","var_args","args__4736__auto__","len__4730__auto__","i__4731__auto__","argseq__4737__auto__","cljs.core/IndexedSeq","devtools.formatters.templating/make-group","seq41432","self__4718__auto__","cljs.core/seq","items","group","seq__41436","chunk__41437","count__41438","i__41439","temp__5720__auto__","cljs.core/chunked-seq?","c__4550__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","item","cljs.core/coll?","cljs.core.into_array.cljs$core$IFn$_invoke$arity$1","devtools.formatters.helpers/pref","devtools.formatters.templating/make-template","seq41453","G__41454","G__41455","self__4717__auto__","tag","style","children","template","cljs.core/empty?","seq__41465","chunk__41466","count__41467","i__41468","child","cljs.core.keep.cljs$core$IFn$_invoke$arity$2","temp__5718__auto__","child-value","devtools.formatters.templating/concat-templates!","seq41478","G__41479","templates","cljs.core.map.cljs$core$IFn$_invoke$arity$2","cljs.core/into-array","devtools.formatters.templating/extend-template!","seq41481","G__41482","args","devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic","G__41484","devtools.formatters.templating/make-surrogate","js/Error","object","devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2","header","devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3","body","devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4","start-index","obj41486","or__4131__auto__","devtools.formatters.templating/get-surrogate-target","surrogate","devtools.formatters.templating/get-surrogate-header","devtools.formatters.templating/get-surrogate-body","devtools.formatters.templating/get-surrogate-start-index","devtools.formatters.templating/make-reference","p__41493","vec__41494","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","seq41487","G__41488","state-override-fn","cljs.core/fn?","devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic","sub-state","G__41497","devtools.formatters.state/get-current-state","devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.templating/*current-render-stack*","devtools.formatters.templating/*current-render-path*","devtools.formatters.templating/print-preview","markup","*print-level*-orig-val__41503","*print-level*-temp-val__41504","cljs.core/*print-level*","cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.templating/add-stack-separators","stack","cljs.core.interpose.cljs$core$IFn$_invoke$arity$2","devtools.formatters.templating/replace-fns-with-markers","f","v","clojure.walk/prewalk","devtools.formatters.templating/pprint-render-calls","devtools.util/pprint-str","devtools.formatters.templating/pprint-render-stack","clojure.string.join.cljs$core$IFn$_invoke$arity$2","cljs.core/reverse","devtools.formatters.templating/pprint-render-path","path","devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic","devtools.formatters.templating/assert-markup-error","msg","devtools.formatters.templating/surrogate-markup?","cljs.core/sequential?","devtools.formatters.templating/render-special","name","G__41513","obj","converted-args","devtools.formatters.templating/render-json-ml*","cljs.core/rest","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","converted-obj","devtools.formatters.templating/emptyish?","cljs.core/seqable?","cljs.core/array?","devtools.formatters.templating/render-subtree","vec__41516","html-tag","cljs.core.apply.cljs$core$IFn$_invoke$arity$4","cljs.core.remove.cljs$core$IFn$_invoke$arity$2","*current-render-path*-orig-val__41519","*current-render-path*-temp-val__41520","cljs.core.conj.cljs$core$IFn$_invoke$arity$2","devtools.formatters.templating/render-json-ml","*current-render-stack*-orig-val__41522","*current-render-path*-orig-val__41523","*current-render-stack*-temp-val__41524","*current-render-path*-temp-val__41525","devtools.formatters.templating/assert-failed-markup-rendering","initial-value","devtools.formatters.templating/render-markup*","cljs.core/Keyword","devtools.formatters.templating/render-markup"]]],"~:cache-keys",["~#cmap",[["^1H","goog/labs/useragent/platform.js"],[1568638513000,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^M",[]],"~:deps-syms",["^X","~$goog.labs.userAgent.util","~$goog.string"]]],["^1H","devtools/formatters/helpers.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W","~$devtools.prefs","~$devtools.munging","~$devtools.format","^Y"]]],["^1H","goog/math/math.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","~$goog.array","~$goog.asserts"]]],["^1H","goog/labs/useragent/browser.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^22","^1Y","~$goog.object","~$goog.string.internal"]]],["^1H","goog/array/array.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^23"]]],["^1H","goog/useragent/useragent.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","~$goog.labs.userAgent.browser","~$goog.labs.userAgent.engine","~$goog.labs.userAgent.platform","^1Y","~$goog.reflect","^1Z"]]],["^1H","devtools/formatters/templating.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W","^10","^V","^Y","^T","^U","^["]]],["^1H","goog/debug/error.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X"]]],["^1H","goog/dom/nodetype.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X"]]],["^1H","cljs/pprint.cljs"],[1568638518000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W","^[","^1Z","~$goog.string.StringBuffer"]]],["^1H","goog/object/object.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X"]]],"~:SHADOW-TIMESTAMP",[1568638379000,1568638518000],["^1H","goog/math/long.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^23","^29"]]],["^1H","devtools/version.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W"]]],["^1H","goog/string/internal.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X"]]],["^1H","goog/functions/functions.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X"]]],["^1H","devtools/prefs.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W","~$devtools.defaults"]]],["^1H","clojure/walk.cljs"],[1568638518000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W"]]],["^1H","goog/structs/map.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1H","devtools/munging.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W","^[","~$devtools.context","^24","^2:"]]],["^1H","goog/labs/useragent/engine.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^22","^1Y","^1Z"]]],["^1H","goog/asserts/asserts.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1H","goog/uri/uri.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^22","^23","^1Z","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1H","goog/base.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",[]]],["^1H","goog/structs/structs.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^22","^24"]]],["^1H","clojure/string.cljs"],[1568638518000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W","^1Z","^2:"]]],["^1H","devtools/formatters/state.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W"]]],["^1H","goog/string/string.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^25"]]],["^1H","clojure/data.cljs"],[1568638518000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W","~$clojure.set"]]],["^1H","goog/reflect/reflect.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X"]]],["^1H","goog/labs/useragent/util.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^25"]]],["^1H","goog/string/stringbuffer.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X"]]],["^1H","goog/iter/iter.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^22","^23","~$goog.functions","~$goog.math"]]],["^1H","devtools/defaults.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W"]]],["^1H","cljs/core.cljs"],[1568638518000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["~$goog.math.Long","~$goog.math.Integer","^1Z","^24","^22","~$goog.Uri","^2:"]]],["^1H","devtools/context.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W"]]],["^1H","goog/math/integer.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X"]]],["^1H","devtools/format.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W","^2?"]]],["^1H","clojure/set.cljs"],[1568638518000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W"]]],["^1H","goog/uri/utils.js"],[1568638513000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^22","^23","^1Z"]]],["^1H","devtools/protocols.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W"]]],["^1H","devtools/util.cljs"],[1537794256000,"^1U",["^ ","^1V",null,"^1W",["^M",[]],"^1X",["^X","^W","~$goog.userAgent","~$clojure.data","~$devtools.version","^2?","~$cljs.pprint","^1["]]]]],"~:clj-info",["^ ","jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/util.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/prefs.clj",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64_vlq.clj",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/version.clj",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/reader_types.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/munging.clj",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/errors.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coerce.cljc",1537794256000,"jar:file:/home/jimmy/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/read.cljc",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/analyzer.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/core.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/tagged_literals.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/compiler.clj",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/default_data_readers.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/org/clojure/tools.reader/1.3.0/tools.reader-1.3.0.jar!/clojure/tools/reader/impl/inspect.clj",1543150543000,"jar:file:/home/jimmy/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/types.cljc",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1537794058000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map.clj",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/externs.clj",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/pprint.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/compiler.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/oops.clj",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/coercers.cljc",1537794256000,"jar:file:/home/jimmy/.m2/repository/binaryage/devtools/0.9.10/devtools-0.9.10.jar!/devtools/defaults.clj",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/js_deps.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/env.cljc",1568638518000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojurescript/1.10.520/clojurescript-1.10.520.jar!/cljs/source_map/base64.clj",1568638518000,"jar:file:/home/jimmy/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/logging.clj",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1562843760000,"jar:file:/home/jimmy/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/impl/report.cljc",1537794256000,"jar:file:/home/jimmy/.m2/repository/binaryage/env-config/0.2.2/env-config-0.2.2.jar!/env_config/core.cljc",1537794256000,"jar:file:/home/jimmy/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/walk.clj",1562843760000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",1,"^8",5,"^9",1,"^:",35],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C"],"^D",["^ ","^E","^F","^G","^F","^H","^F","^I","^F","^J","^F","^K","^F"],"^L",["^M",[]],"^N","^O","^R",null,"^S",["^ ","^T","^T","^U","^U","^V","^V","^W","^W","^X","^X","^Y","^Y","^Z","^[","^[","^[","^10","^10"],"^11",["^M",["^12","^13"]],"~:shadow/js-access-global",["^M",["Error"]],"^14",["^ ","^15","^U","^16","^Y","^17","^Y","^18","^U","^19","^Y","^1:","^T","^1;","^10","^1<","^Y","^1=","^V","^1>","^T"],"~:defs",["^ ","~$make-template",["^ ","~:protocol-inline",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",48,"^8",7,"^9",48,"^:",20,"~:arglists",["^1@",["~$quote",["^1@",[["~$tag","~$style","~$&","~$children"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^1@",["^3T","^3U","^3V"]]],"^3R",["^1@",[["^3T","^3U","~$&","^3V"]]],"~:arglists-meta",["^1@",[null]]]],"^N","~$devtools.formatters.templating/make-template","^6","devtools/formatters/templating.cljs","^:",20,"^3W",["^ ","^3X",true,"^3Y",2,"^3Z",2,"^3[",[["^1@",["^3T","^3U","^3V"]]],"^3R",["^1@",[["^3T","^3U","~$&","^3V"]]],"^40",["^1@",[null]]],"^3[",[["^1@",["^3T","^3U","^3V"]]],"~:protocol-impl",null,"^3Y",2,"^40",["^1@",[null]],"^8",1,"^3X",true,"~:methods",[["^ ","^3Y",2,"^3X",true,"~:tag","~$any"]],"^7",48,"~:ret-tag","^45","^9",48,"^3Z",2,"~:fn-var",true,"^3R",["^1@",[["^3T","^3U","~$&","^3V"]]]],"~$mark-as-surrogate!",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",26,"^8",7,"^9",26,"^:",25,"^3R",["^1@",["^3S",["^1@",[["~$value"]]]]]],"^N","~$devtools.formatters.templating/mark-as-surrogate!","^6","devtools/formatters/templating.cljs","^:",25,"^3[",["^1@",[["^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",26,"^9",26,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"~$concat-templates!",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",63,"^8",7,"^9",63,"^:",24,"^3R",["^1@",["^3S",["^1@",[["~$template","~$&","~$templates"]]]]],"^3W",["^ ","^3X",true,"^3Y",1,"^3Z",1,"^3[",[["^1@",["^4<","^4="]]],"^3R",["^1@",[["^4<","~$&","^4="]]],"^40",["^1@",[null]]]],"^N","~$devtools.formatters.templating/concat-templates!","^6","devtools/formatters/templating.cljs","^:",24,"^3W",["^ ","^3X",true,"^3Y",1,"^3Z",1,"^3[",[["^1@",["^4<","^4="]]],"^3R",["^1@",[["^4<","~$&","^4="]]],"^40",["^1@",[null]]],"^3[",[["^1@",["^4<","^4="]]],"^42",null,"^3Y",1,"^40",["^1@",[null]],"^8",1,"^3X",true,"^43",[["^ ","^3Y",1,"^3X",true,"^44","^45"]],"^7",63,"^46","^45","^9",63,"^3Z",1,"^47",true,"^3R",["^1@",[["^4<","~$&","^4="]]]],"~$make-reference",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",98,"^8",7,"^9",98,"^:",21,"^3R",["^1@",["^3S",["^1@",[["~$object","~$&",["~$state-override-fn"]]]]]],"^3W",["^ ","^3X",true,"^3Y",1,"^3Z",1,"^3[",[["^1@",["^4@",["^4A"]]]],"^3R",["^1@",[["^4@","~$&",["^4A"]]]],"^40",["^1@",[null]]]],"^N","~$devtools.formatters.templating/make-reference","^6","devtools/formatters/templating.cljs","^:",21,"^3W",["^ ","^3X",true,"^3Y",1,"^3Z",1,"^3[",[["^1@",["^4@",["^4A"]]]],"^3R",["^1@",[["^4@","~$&",["^4A"]]]],"^40",["^1@",[null]]],"^3[",[["^1@",["^4@",["^4A"]]]],"^42",null,"^3Y",1,"^40",["^1@",[null]],"^8",1,"^3X",true,"^43",[["^ ","^3Y",1,"^3X",true,"^44","^45"]],"^7",98,"^46","^45","^9",98,"^3Z",1,"^47",true,"^3R",["^1@",[["^4@","~$&",["^4A"]]]]],"~$make-surrogate",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",69,"^8",7,"^9",69,"^:",21,"^3R",["^1@",["^3S",["^1@",[["^4@"],["^4@","~$header"],["^4@","^4D","~$body"],["^4@","^4D","^4E","~$start-index"]]]]],"^3W",["^ ","^3X",false,"^3Y",4,"^3Z",4,"^3[",["^1@",[["^4@"],["^4@","^4D"],["^4@","^4D","^4E"],["^4@","^4D","^4E","^4F"]]],"^3R",["^1@",[["^4@"],["^4@","^4D"],["^4@","^4D","^4E"],["^4@","^4D","^4E","^4F"]]],"^40",["^1@",[null,null,null,null]]]],"^N","~$devtools.formatters.templating/make-surrogate","^6","devtools/formatters/templating.cljs","^:",21,"^3W",["^ ","^3X",false,"^3Y",4,"^3Z",4,"^3[",["^1@",[["^4@"],["^4@","^4D"],["^4@","^4D","^4E"],["^4@","^4D","^4E","^4F"]]],"^3R",["^1@",[["^4@"],["^4@","^4D"],["^4@","^4D","^4E"],["^4@","^4D","^4E","^4F"]]],"^40",["^1@",[null,null,null,null]]],"^3[",["^1@",[["^4@"],["^4@","^4D"],["^4@","^4D","^4E"],["^4@","^4D","^4E","^4F"]]],"^42",null,"^3Y",4,"^40",["^1@",[null,null,null,null]],"^8",1,"^3X",false,"^43",[["^ ","^3Y",1,"^3X",false,"^44","^45"],["^ ","^3Y",2,"^3X",false,"^44","^45"],["^ ","^3Y",3,"^3X",false,"^44","^45"],["^ ","^3Y",4,"^3X",false,"^44","^45"]],"^7",69,"^9",69,"^3Z",4,"^47",true,"^3R",["^1@",[["^4@"],["^4@","^4D"],["^4@","^4D","^4E"],["^4@","^4D","^4E","^4F"]]]],"~$pprint-render-path",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",145,"^8",7,"^9",145,"^:",25,"^3R",["^1@",["^3S",["^1@",[["~$path"]]]]]],"^N","~$devtools.formatters.templating/pprint-render-path","^6","devtools/formatters/templating.cljs","^:",25,"^3[",["^1@",[["^4I"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",145,"^46","^Z","^9",145,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^4I"]]]]]],"~$get-surrogate-body",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",90,"^8",7,"^9",90,"^:",25,"^3R",["^1@",["^3S",["^1@",[["~$surrogate"]]]]]],"^N","~$devtools.formatters.templating/get-surrogate-body","^6","devtools/formatters/templating.cljs","^:",25,"^3[",["^1@",[["^4L"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",90,"^46","^45","^9",90,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^4L"]]]]]],"~$reference?",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",33,"^8",7,"^9",33,"^:",17,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"^N","~$devtools.formatters.templating/reference?","^6","devtools/formatters/templating.cljs","^:",17,"^3[",["^1@",[["^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",33,"^46","~$boolean","^9",33,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"~$replace-fns-with-markers",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",128,"^8",7,"^9",128,"^:",31,"^3R",["^1@",["^3S",["^1@",[["~$stack"]]]]]],"^N","~$devtools.formatters.templating/replace-fns-with-markers","^6","devtools/formatters/templating.cljs","^:",31,"^3[",["^1@",[["^4R"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",128,"^46","^45","^9",128,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^4R"]]]]]],"~$*current-render-path*",["^ ","^5",["^ ","^6","devtools/formatters/templating.cljs","^7",119,"^8",16,"^9",119,"^:",37,"~:dynamic",true],"^N","~$devtools.formatters.templating/*current-render-path*","^6","devtools/formatters/templating.cljs","^:",37,"^8",1,"^4U",true,"^7",119,"^9",119,"^44","~$cljs.core/IVector"],"~$render-subtree",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",172,"^8",7,"^9",172,"^:",21,"^3R",["^1@",["^3S",["^1@",[["^3T","^3V"]]]]]],"^N","~$devtools.formatters.templating/render-subtree","^6","devtools/formatters/templating.cljs","^:",21,"^3[",["^1@",[["^3T","^3V"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",172,"^46","^45","^9",172,"^3Z",2,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^3T","^3V"]]]]]],"~$emptyish?",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",167,"^8",7,"^9",167,"^:",16,"^3R",["^1@",["^3S",["^1@",[["~$v"]]]]]],"^N","~$devtools.formatters.templating/emptyish?","^6","devtools/formatters/templating.cljs","^:",16,"^3[",["^1@",[["~$v"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",167,"^46","^4P","^9",167,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["~$v"]]]]]],"~$assert-failed-markup-rendering",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",193,"^8",17,"^9",193,"^:",47,"^4U",true,"^3R",["^1@",["^3S",["^1@",[["~$initial-value","^49"]]]]]],"^N","~$devtools.formatters.templating/assert-failed-markup-rendering","^6","devtools/formatters/templating.cljs","^:",47,"^3[",["^1@",[["^51","^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^4U",true,"^7",193,"^46","~$clj-nil","^9",193,"^3Z",2,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^51","^49"]]]]]],"~$pprint-render-calls",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",135,"^8",7,"^9",135,"^:",26,"^3R",["^1@",["^3S",["^1@",[["^4R"]]]]]],"^N","~$devtools.formatters.templating/pprint-render-calls","^6","devtools/formatters/templating.cljs","^:",26,"^3[",["^1@",[["^4R"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",135,"^46","~$cljs.core/LazySeq","^9",135,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^4R"]]]]]],"~$render-markup",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",208,"^8",7,"^9",208,"^:",20,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"^N","~$devtools.formatters.templating/render-markup","^6","devtools/formatters/templating.cljs","^:",20,"^3[",["^1@",[["^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",208,"^46",["^M",[null,"^53"]],"^9",208,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"~$assert-markup-error",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",148,"^8",7,"^9",148,"^:",26,"^3R",["^1@",["^3S",["^1@",[["~$msg"]]]]]],"^N","~$devtools.formatters.templating/assert-markup-error","^6","devtools/formatters/templating.cljs","^:",26,"^3[",["^1@",[["^5:"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",148,"^46","^53","^9",148,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^5:"]]]]]],"~$surrogate-markup?",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",154,"^8",7,"^9",154,"^:",24,"^3R",["^1@",["^3S",["^1@",[["~$markup"]]]]]],"^N","~$devtools.formatters.templating/surrogate-markup?","^6","devtools/formatters/templating.cljs","^:",24,"^3[",["^1@",[["^5="]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",154,"^46","^4P","^9",154,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^5="]]]]]],"~$render-markup*",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",198,"^8",7,"^9",198,"^:",21,"^3R",["^1@",["^3S",["^1@",[["^51","^49"]]]]]],"^N","~$devtools.formatters.templating/render-markup*","^6","devtools/formatters/templating.cljs","^:",21,"^3[",["^1@",[["^51","^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",198,"^46",["^M",[null,"^53"]],"^9",198,"^3Z",2,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^51","^49"]]]]]],"~$add-stack-separators",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",125,"^8",7,"^9",125,"^:",27,"^3R",["^1@",["^3S",["^1@",[["^4R"]]]]]],"^N","~$devtools.formatters.templating/add-stack-separators","^6","devtools/formatters/templating.cljs","^:",27,"^3[",["^1@",[["^4R"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",125,"^46","^56","^9",125,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^4R"]]]]]],"~$make-group",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",39,"^8",7,"^9",39,"^:",17,"^3R",["^1@",["^3S",["^1@",[["~$&","~$items"]]]]],"^3W",["^ ","^3X",true,"^3Y",0,"^3Z",0,"^3[",[["^1@",["^5D"]]],"^3R",["^1@",[["~$&","^5D"]]],"^40",["^1@",[null]]]],"^N","~$devtools.formatters.templating/make-group","^6","devtools/formatters/templating.cljs","^:",17,"^3W",["^ ","^3X",true,"^3Y",0,"^3Z",0,"^3[",[["^1@",["^5D"]]],"^3R",["^1@",[["~$&","^5D"]]],"^40",["^1@",[null]]],"^3[",[["^1@",["^5D"]]],"^42",null,"^3Y",0,"^40",["^1@",[null]],"^8",1,"^3X",true,"^43",[["^ ","^3Y",0,"^3X",true,"^44","^45"]],"^7",39,"^46","^45","^9",39,"^3Z",0,"^47",true,"^3R",["^1@",[["~$&","^5D"]]]],"~$get-surrogate-header",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",86,"^8",7,"^9",86,"^:",27,"^3R",["^1@",["^3S",["^1@",[["^4L"]]]]]],"^N","~$devtools.formatters.templating/get-surrogate-header","^6","devtools/formatters/templating.cljs","^:",27,"^3[",["^1@",[["^4L"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",86,"^46","^45","^9",86,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^4L"]]]]]],"~$render-json-ml*",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",176,"^8",7,"^9",176,"^:",22,"^3R",["^1@",["^3S",["^1@",[["^5="]]]]]],"^N","~$devtools.formatters.templating/render-json-ml*","^6","devtools/formatters/templating.cljs","^:",22,"^3[",["^1@",[["^5="]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",176,"^9",176,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^5="]]]]]],"~$surrogate?",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",30,"^8",7,"^9",30,"^:",17,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"^N","~$devtools.formatters.templating/surrogate?","^6","devtools/formatters/templating.cljs","^:",17,"^3[",["^1@",[["^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",30,"^46","^4P","^9",30,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"~$render-json-ml",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",186,"^8",7,"^9",186,"^:",21,"^3R",["^1@",["^3S",["^1@",[["^5="]]]]]],"^N","~$devtools.formatters.templating/render-json-ml","^6","devtools/formatters/templating.cljs","^:",21,"^3[",["^1@",[["^5="]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",186,"^9",186,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^5="]]]]]],"~$*current-render-stack*",["^ ","^5",["^ ","^6","devtools/formatters/templating.cljs","^7",118,"^8",16,"^9",118,"^:",38,"^4U",true],"^N","~$devtools.formatters.templating/*current-render-stack*","^6","devtools/formatters/templating.cljs","^:",38,"^8",1,"^4U",true,"^7",118,"^9",118,"^44","^4W"],"~$mark-as-group!",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",12,"^8",7,"^9",12,"^:",21,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"^N","~$devtools.formatters.templating/mark-as-group!","^6","devtools/formatters/templating.cljs","^:",21,"^3[",["^1@",[["^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",12,"^9",12,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"~$get-surrogate-target",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",82,"^8",7,"^9",82,"^:",27,"^3R",["^1@",["^3S",["^1@",[["^4L"]]]]]],"^N","~$devtools.formatters.templating/get-surrogate-target","^6","devtools/formatters/templating.cljs","^:",27,"^3[",["^1@",[["^4L"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",82,"^46","^45","^9",82,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^4L"]]]]]],"~$get-surrogate-start-index",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",94,"^8",7,"^9",94,"^:",32,"^3R",["^1@",["^3S",["^1@",[["^4L"]]]]]],"^N","~$devtools.formatters.templating/get-surrogate-start-index","^6","devtools/formatters/templating.cljs","^:",32,"^3[",["^1@",[["^4L"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",94,"^46","^45","^9",94,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^4L"]]]]]],"~$mark-as-template!",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",19,"^8",7,"^9",19,"^:",24,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"^N","~$devtools.formatters.templating/mark-as-template!","^6","devtools/formatters/templating.cljs","^:",24,"^3[",["^1@",[["^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",19,"^9",19,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"~$pprint-render-stack",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",138,"^8",7,"^9",138,"^:",26,"^3R",["^1@",["^3S",["^1@",[["^4R"]]]]]],"^N","~$devtools.formatters.templating/pprint-render-stack","^6","devtools/formatters/templating.cljs","^:",26,"^3[",["^1@",[["^4R"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",138,"^46","~$js","^9",138,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^4R"]]]]]],"~$template?",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",23,"^8",7,"^9",23,"^:",16,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"^N","~$devtools.formatters.templating/template?","^6","devtools/formatters/templating.cljs","^:",16,"^3[",["^1@",[["^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",23,"^46","^4P","^9",23,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"~$render-special",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",157,"^8",7,"^9",157,"^:",21,"^3R",["^1@",["^3S",["^1@",[["~$name","~$args"]]]]]],"^N","~$devtools.formatters.templating/render-special","^6","devtools/formatters/templating.cljs","^:",21,"^3[",["^1@",[["^62","^63"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",157,"^9",157,"^3Z",2,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^62","^63"]]]]]],"~$print-preview",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",121,"^8",7,"^9",121,"^:",20,"^3R",["^1@",["^3S",["^1@",[["^5="]]]]]],"^N","~$devtools.formatters.templating/print-preview","^6","devtools/formatters/templating.cljs","^:",20,"^3[",["^1@",[["^5="]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",121,"^9",121,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^5="]]]]]],"~$group?",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",16,"^8",7,"^9",16,"^:",13,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"^N","~$devtools.formatters.templating/group?","^6","devtools/formatters/templating.cljs","^:",13,"^3[",["^1@",[["^49"]]],"^42",null,"^40",["^1@",[null,null]],"^8",1,"^3X",false,"^7",16,"^46","^4P","^9",16,"^3Z",1,"^47",true,"^3R",["^1@",["^3S",["^1@",[["^49"]]]]]],"~$extend-template!",["^ ","^3Q",null,"^5",["^ ","^6","devtools/formatters/templating.cljs","^7",66,"^8",7,"^9",66,"^:",23,"^3R",["^1@",["^3S",["^1@",[["^4<","~$&","^63"]]]]],"^3W",["^ ","^3X",true,"^3Y",1,"^3Z",1,"^3[",[["^1@",["^4<","^63"]]],"^3R",["^1@",[["^4<","~$&","^63"]]],"^40",["^1@",[null]]]],"^N","~$devtools.formatters.templating/extend-template!","^6","devtools/formatters/templating.cljs","^:",23,"^3W",["^ ","^3X",true,"^3Y",1,"^3Z",1,"^3[",[["^1@",["^4<","^63"]]],"^3R",["^1@",[["^4<","~$&","^63"]]],"^40",["^1@",[null]]],"^3[",[["^1@",["^4<","^63"]]],"^42",null,"^3Y",1,"^40",["^1@",[null]],"^8",1,"^3X",true,"^43",[["^ ","^3Y",1,"^3X",true,"^44","^45"]],"^7",66,"^46","^45","^9",66,"^3Z",1,"^47",true,"^3R",["^1@",[["^4<","~$&","^63"]]]]],"^13",["^ ","^F","^F","^W","^W"],"~:cljs.analyzer/constants",["^ ","^11",["^M",["~:nil-style","~:else","~:nil-label","~:span"]],"~:order",["^6?","^6<","^6>","^6="]],"^1D",["^ ","^13",["^M",[]],"^12",["^M",[]]],"^1E",["^ "],"^1F",["^X","^W","^10","^V","^Y","^T","^U","^["]],"^Q","^O","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1T",[["^6C","~:static-fns"],true,["^6C","~:elide-asserts"],false,["^6C","~:optimize-constants"],null,["^6C","^1K"],null,["^6C","~:external-config"],null,["^6C","~:tooling-config"],null,["^6C","~:emit-constants"],null,["^6C","~:load-tests"],null,["^6C","~:form-size-threshold"],null,["^6C","~:infer-externs"],true,["^6C","^1M"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^6C","~:fn-invoke-direct"],null,["^6C","~:source-map"],"/dev/null"]]]