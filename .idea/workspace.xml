<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c5b2bf98-e160-4987-8f50-31746baa0626" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clj/donttellmybroproxy/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clj/donttellmybroproxy/core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clj/donttellmybroproxy/proxy.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clj/donttellmybroproxy/proxy.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/donttellmybroproxy/proxy_test.clj" beforeDir="false" afterPath="$PROJECT_DIR$/test/donttellmybroproxy/proxy_test.clj" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FxmlFile" />
        <option value="CLJC Namespace" />
        <option value="ClojureScript Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1ReHiMVCx8yV54N3oiBHg7WxuG9" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="GoToKeyword.includeLibraries" value="false" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="cursive.last.file.extension./home/jimmy/DevelopEnvironments/donttellmybroproxy/src/cljc" value="cljc" />
    <property name="cursive.last.file.extension./home/jimmy/DevelopEnvironments/donttellmybroproxy/src/cljs" value="cljs" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../options" />
    <property name="project.structure.last.edited" value="SDKs" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/resources/public" />
      <recent name="$PROJECT_DIR$/resources" />
    </key>
  </component>
  <component name="ReplState" timestamp="1577363903706">{:repl-history {:ide [], :local [{:command &quot;(flatten (seq {\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}}))\n&quot;, :offset 69, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should return all matchers that match the given url\&quot;\n      (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)\n      =&gt; (vector (flatten (seq (select-keys sample-multi-matcher [\&quot;.*\&quot;])))))&quot;, :offset 214, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv #(get-in % [(key %) :response]) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 114, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)&quot;, :offset 71, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot; (first (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)) &quot;, :offset 80, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot; (key (first (get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; sample-multi-matcher)))  &quot;, :offset 86, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv key (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 86, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (key el)) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 101, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (get-in el [(key el) :response]) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 127, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (get-in (seq el)  [(key el) :response]) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 133, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}&quot;, :offset 51, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get-in {\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}} [\&quot;.*\&quot; :response])&quot;, :offset 79, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (get el  :response) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 114, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (get el :response) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 85} {:command &quot;(get-in \&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}\n        [\&quot;.*\&quot; :response])&quot;, :offset 85, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get-in \&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}}  [\&quot;.*\&quot; :response])&quot;, :offset 78, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;\&quot;.*\&quot; {:response {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}} &quot;, :offset 52, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(type *1)&quot;, :offset 9, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (vals el) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 103, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (key el) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 102, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] (val el) ) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 102, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(mapv (fn [el] {(key el) (get (val el) :response)  }) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 130, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(map (fn [el] {(key el) (get (val el) :response)  }) (get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)) &quot;, :offset 129, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get-matchers-matching-url \&quot;http://www.yahoo.com?a=2\&quot; sample-multi-matcher)&quot;, :offset 75, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should flatten the :request or :response from the interceptor\&quot;\n      (extract-interceptor-for-type sample-multi-matcher :response)\n      =&gt; '({\&quot;.*\&quot; {:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}}} {\&quot;.*a=2\&quot; {:headers {\&quot;Some-Header\&quot; \&quot;Some Value\&quot;}}}))&quot;, :offset 242, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;()&quot;, :offset 1} {:command &quot;(proxy/extract-interceptor-for-type\n  (proxy/get-matchers-matching-url url (get (proxy/list-proxies) :interceptors)) :response)&quot;, :offset 127, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/extract-interceptor-for-type\n  (proxy/get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; (get (proxy/list-proxies) :interceptors)) :response)&quot;, :offset 146, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; (get (proxy/list-proxies) :interceptors))&quot;, :offset 97, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get (proxy/list-proxies) :interceptors)&quot;, :offset 40, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; (get-in (proxy/list-proxies) [:args :interceptors]))&quot;, :offset 108, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in (proxy/list-proxies) [:args :interceptors])&quot;, :offset 51, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/get-matchers-matching-url \&quot;http://www.yahoo.com\&quot; (get-in (proxy/list-proxies) [:yahoo :args :interceptors]))&quot;, :offset 115, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/extract-interceptor-for-type *1 :response)&quot;, :offset 49, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in (proxy/list-proxies) [:yahoo :args :interceptors])&quot;, :offset 58, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(doc midje)&quot;, :offset 11, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(fact \&quot;Should flatten the :request or :response from the interceptor\&quot;\n      (extract-interceptor-for-type sample-multi-matcher :response)\n      =&gt; '({:headers {\&quot;Content-Type\&quot; \&quot;Text\&quot;}} {:headers {\&quot;Some-Header\&quot; \&quot;Some Value\&quot;}}))&quot;, :offset 225, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;\\&quot;, :offset 1} {:command &quot;(existing-interceptors :yahoo :response \&quot;.*\&quot;)&quot;, :offset 45, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/existing-interceptors :yahoo :response \&quot;.*\&quot;)&quot;, :offset 51, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(update-in (proxy/list-proxies) [:yahoo :interceptors ])&quot;, :offset 56, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(update-in (proxy/list-proxies) [:yahoo :interceptors \&quot;.*\&quot; :response :headers] dissoc \&quot;Bareer\&quot;)&quot;, :offset 95, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(update-in (proxy/list-proxies) [:yahoo :interceptors \&quot;.*\&quot; :response :headers] dissoc \&quot;Content-Type\&quot;)&quot;, :offset 101, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(update-in (proxy/list-proxies) [:yahoo :args :interceptors \&quot;.*\&quot; :response :headers] dissoc \&quot;Content-Type\&quot;)&quot;, :offset 107, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;midje&quot;, :offset 5, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(midje test)&quot;, :offset 12, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(use 'midje.repl)&quot;, :offset 17, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should remove a header interceptor when provided with a type a key and the proxy id\&quot;\n      (remove-header-from-map sample-state :yahoo :response \&quot;.*\&quot; \&quot;Content-type\&quot;)\n      =&gt; {:yahoo {:route \&quot;/yahoo\&quot;,\n                    :url \&quot;http://www.yahoo.com\&quot;,\n                    :args {:request {},\n                           :response {},\n                           :interceptors {\&quot;.*\&quot; {:response {:headers {\&quot;Bareer\&quot; \&quot;123456\&quot;}}}}}}})&quot;, :offset 432, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;\n(def sample-state\n  {:yahoo {:route \&quot;/yahoo\&quot;,\n           :url \&quot;http://www.yahoo.com\&quot;,\n           :args {:request {},\n                  :response {},\n                  :interceptors {\&quot;.*\&quot; {:response {:headers {\&quot;Bareer\&quot; \&quot;123456\&quot;, \&quot;Content-Type\&quot; \&quot;text\&quot;}}}}}}})&quot;, :offset 258, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(update-in sample-state [:yahoo :args :interceptors \&quot;.*\&quot; :response :headers] dissoc \&quot;Content-Type\&quot;)&quot;, :offset 99, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(add-recording {:request {:a 1}})&quot;, :offset 33, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(defn add-recording [recording]\n  (swap! registered-proxies assoc :recordings (conj (current-recordings) recording)))&quot;, :offset 117, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(add-recording {:request {:b 1}})&quot;, :offset 33, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(add-recording {:request {:b 2}})&quot;, :offset 33, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(proxy/add-recording! {:url \&quot;lalalala\&quot;})&quot;, :offset 40, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;@registered-proxies&quot;, :offset 19, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(vals @registered-proxies)&quot;, :offset 26, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(vals (vals @registered-proxies)) &quot;, :offset 33, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(map vals (vals @registered-proxies)) &quot;, :offset 37, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(diff \&quot;holaquetal\&quot; \&quot;holaque\&quot;)&quot;, :offset 29, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(clojure.data/diff \&quot;holaquetal\&quot; \&quot;holaque\&quot;)&quot;, :offset 42, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(map str \&quot;Something\&quot;)&quot;, :offset 21, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(clojure.data/diff (map str \&quot;Something\&quot;) (map str \&quot;Somethingelse\&quot;))&quot;, :offset 67, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(use 'clojure.data)&quot;, :offset 19, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(diff (map str \&quot;Something\&quot;) (map str \&quot;Somethingelse\&quot;))&quot;, :offset 54, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(difference (map str \&quot;Something\&quot;) (map str \&quot;Somethingelse\&quot;))&quot;, :offset 60, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(clojure.set/difference (map str \&quot;Something\&quot;) (map str \&quot;Somethingelse\&quot;))&quot;, :offset 72, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(diff (map str \&quot;Somethingelse\&quot;) (map str \&quot;Something\&quot;))&quot;, :offset 54, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(use 'clojure.string)&quot;, :offset 21, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(replace \&quot;https://postman-echo.com/post?\&quot; #\&quot;https://postman-echo.com\&quot; \&quot;\&quot;)&quot;, :offset 73, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(replace \&quot;https://postman-echo.com/post?\&quot; \&quot;https://postman-echo.com\&quot; \&quot;\&quot;)&quot;, :offset 72, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(nth (:recorded sample-record-element) 0)&quot;, :offset 41, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(:recorded sample-record-element)&quot;, :offset 33, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get-in  sample-record-element [\&quot;/postman\&quot; :recorded])&quot;, :offset 54, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(key sample-record-element)&quot;, :offset 27, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(keys sample-record-element)&quot;, :offset 28, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(first (keys sample-record-element)) &quot;, :offset 36, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(nth (get-in sample-record-element [\&quot;/postman\&quot; :recorded]) 0)&quot;, :offset 61, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(:base-url sample-record-element)&quot;, :offset 33, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(toInterceptor sample-record-element\n               )&quot;, :offset 53, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(toInterceptor sample-record-element)&quot;, :offset 37, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(toInterceptor sample-record-element 0)&quot;, :offset 39, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(proxy/current-recordings)&quot;, :offset 26, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/list-proxies)&quot;, :offset 20, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;@recordings&quot;, :offset 11, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(current-recordings \&quot;/yahoo\&quot;)&quot;, :offset 29, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/server 3001)&quot;, :offset 19, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/current-recordings \&quot;/yahoo\&quot;)&quot;, :offset 35, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;@(proxy/recordings)&quot;, :offset 19, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/toInterceptor (get-in @proxy/recordings [:recordings \&quot;/yahoo\&quot;]) 0)&quot;, :offset 73, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in @proxy/recordings [:recordings \&quot;/yahoo\&quot;])&quot;, :offset 49, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(select-keys @proxy/recordings \&quot;/yahoo\&quot;)&quot;, :offset 40, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(select-keys (:recordings @proxy/recordings)  \&quot;/yahoo\&quot;)&quot;, :offset 55, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(select-keys (:recordings @proxy/recordings) \&quot;/yahoo\&quot;)&quot;, :offset 54, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(:recordings @proxy/recordings)&quot;, :offset 31, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(-main)&quot;, :offset 7, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;@proxy/recordings\n  &quot;, :offset 17, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;sample-record-element&quot;, :offset 21, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(get sample-record-element \&quot;/postman\&quot;)&quot;, :offset 38, :ns &quot;donttellmybroproxy.proxy-test&quot;} {:command &quot;(fact \&quot;Should take a recorded element and return an interceptor\&quot;\n      (toInterceptor (get sample-record-element \&quot;/postman\&quot;) 0)\n      =&gt; expected-result)&quot;, :offset 153, :ns &quot;donttellmybroproxy.proxy-test&quot;}], :remote []}}</component>
  <component name="RunManager" selected="Clojure Application.proxy_test">
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="REPL for donttellmybroproxy" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="donttellmybroproxy" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="NREPL" />
      <setting name="configType" value="SPECIFY" />
      <setting name="fixLineNumbers" value="false" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration name="proxy_test" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="donttellmybroproxy" />
      <setting name="path" value="$PROJECT_DIR$/test/donttellmybroproxy/proxy_test.clj" />
      <setting name="namespace" value="" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/test/donttellmybroproxy" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="TEST_OBJECT" value="class" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="TestNG">
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for donttellmybroproxy" />
        <item itemvalue="Clojure Application.proxy_test" />
      </list>
    </recent_temporary>
  </component>
  <component name="ServiceViewManager">
    <option name="viewStates">
      <list>
        <serviceView>
          <treeState>
            <expand />
            <select />
          </treeState>
        </serviceView>
      </list>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c5b2bf98-e160-4987-8f50-31746baa0626" name="Default Changelist" comment="" />
      <created>1570020768287</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1570020768287</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="WindowStateProjectService">
    <state width="1874" height="277" key="GridCell.Tab.0.bottom" timestamp="1577363553328">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1874" height="277" key="GridCell.Tab.0.bottom/0.0.1920.1050@0.0.1920.1050" timestamp="1577363553328" />
    <state width="1874" height="277" key="GridCell.Tab.0.center" timestamp="1577363553328">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1874" height="277" key="GridCell.Tab.0.center/0.0.1920.1050@0.0.1920.1050" timestamp="1577363553328" />
    <state width="1874" height="277" key="GridCell.Tab.0.left" timestamp="1577363553327">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1874" height="277" key="GridCell.Tab.0.left/0.0.1920.1050@0.0.1920.1050" timestamp="1577363553327" />
    <state width="1874" height="277" key="GridCell.Tab.0.right" timestamp="1577363553328">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state width="1874" height="277" key="GridCell.Tab.0.right/0.0.1920.1050@0.0.1920.1050" timestamp="1577363553328" />
    <state x="556" y="259" key="Vcs.Push.Dialog.v2" timestamp="1577363415772">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="556" y="259" key="Vcs.Push.Dialog.v2/0.0.1920.1050@0.0.1920.1050" timestamp="1577363415772" />
    <state x="551" y="269" key="com.intellij.ide.util.TipDialog" timestamp="1577359185603">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="551" y="269" key="com.intellij.ide.util.TipDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1577359185603" />
    <state x="753" y="443" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1576669739049">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="753" y="443" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/0.0.1920.1050@0.0.1920.1050" timestamp="1576669739049" />
    <state x="637" y="261" width="789" height="596" key="find.popup" timestamp="1576671724401">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="637" y="261" width="789" height="596" key="find.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1576671724401" />
    <state x="624" y="240" key="run.anything.popup" timestamp="1577194516924">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="624" y="240" key="run.anything.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1577194516924" />
    <state x="585" y="231" width="747" height="678" key="search.everywhere.popup" timestamp="1577190773258">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="585" y="231" width="747" height="678" key="search.everywhere.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1577190773258" />
  </component>
</project>