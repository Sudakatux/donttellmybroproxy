["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/hyphenate-style-name/index.cjs.js"],"~:js","shadow$provide.module$node_modules$hyphenate_style_name$index_cjs=function(global,require,module,exports){function toHyphenLower(match){return\"-\"+match.toLowerCase()}var uppercasePattern=/[A-Z]/g,msPattern=/^ms-/,cache={};module.exports=function(name){if(cache.hasOwnProperty(name))return cache[name];var hName=name.replace(uppercasePattern,toHyphenLower);return cache[name]=msPattern.test(hName)?\"-\"+hName:hName}}","~:source","shadow$provide[\"module$node_modules$hyphenate_style_name$index_cjs\"] = function(global,require,module,exports) {\n'use strict';\n\n/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nmodule.exports = hyphenateStyleName;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1570448038676,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$hyphenate_style_name$index_cjs.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAQ/GC,QAASA,cAAa,CAACC,KAAD,CAAQ,CAC5B,MAAO,GAAP,CAAaA,KAAAC,YAAA,EADe,CAJ9B,IAAIC,iBAAmB,QAAvB,CACIC,UAAY,MADhB,CAEIC,MAAQ,EAeZP,OAAAC,QAAA,CATAO,QAA2B,CAACC,IAAD,CAAO,CAChC,GAAIF,KAAAG,eAAA,CAAqBD,IAArB,CAAJ,CACE,MAAOF,MAAA,CAAME,IAAN,CAGT,KAAIE,MAAQF,IAAAG,QAAA,CAAaP,gBAAb,CAA+BH,aAA/B,CACZ,OAAQK,MAAA,CAAME,IAAN,CAAR,CAAsBH,SAAAO,KAAA,CAAeF,KAAf,CAAA,CAAwB,GAAxB,CAA8BA,KAA9B,CAAsCA,KAN5B,CAZ6E;\",\n\"sources\":[\"node_modules/hyphenate-style-name/index.cjs.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$hyphenate_style_name$index_cjs\\\"] = function(global,require,module,exports) {\\n'use strict';\\n\\n/* eslint-disable no-var, prefer-template */\\nvar uppercasePattern = /[A-Z]/g;\\nvar msPattern = /^ms-/;\\nvar cache = {};\\n\\nfunction toHyphenLower(match) {\\n  return '-' + match.toLowerCase()\\n}\\n\\nfunction hyphenateStyleName(name) {\\n  if (cache.hasOwnProperty(name)) {\\n    return cache[name]\\n  }\\n\\n  var hName = name.replace(uppercasePattern, toHyphenLower);\\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\\n}\\n\\nmodule.exports = hyphenateStyleName;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"toHyphenLower\",\"match\",\"toLowerCase\",\"uppercasePattern\",\"msPattern\",\"cache\",\"hyphenateStyleName\",\"name\",\"hasOwnProperty\",\"hName\",\"replace\",\"test\"]\n}\n"]