["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@material-ui/core/styles/cssUtils.js"],"~:js","shadow$provide.module$node_modules$$material_ui$core$styles$cssUtils=function(global,require,module,exports){global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.alignProperty=function(_ref){var size=_ref.size,grid=_ref.grid;_ref=size-size%grid;grid=_ref+grid;return size-_ref<grid-size?_ref:grid};exports.fontGrid=function(_ref2){return _ref2.pixels/(_ref2.lineHeight*_ref2.htmlFontSize)};exports.responsiveProperty=\nfunction(_ref3){var cssProperty=_ref3.cssProperty,min=_ref3.min,max=_ref3.max,_ref3$unit=_ref3.unit,unit=void 0===_ref3$unit?\"rem\":_ref3$unit;_ref3$unit=_ref3.breakpoints;_ref3$unit=void 0===_ref3$unit?[600,960,1280]:_ref3$unit;_ref3=_ref3.transform;var transform=void 0===_ref3?null:_ref3,output=(0,_defineProperty2.default)({},cssProperty,\"\".concat(min).concat(unit)),factor=(max-min)/_ref3$unit[_ref3$unit.length-1];_ref3$unit.forEach(function(breakpoint){var value=min+factor*breakpoint;null!==transform&&\n(value=transform(value));output[\"@media (min-width:\".concat(breakpoint,\"px)\")]=(0,_defineProperty2.default)({},cssProperty,\"\".concat(Math.round(1E4*value)/1E4).concat(unit))});return output};var _defineProperty2=global(require(\"module$node_modules$$babel$runtime$helpers$defineProperty\"))}","~:source","shadow$provide[\"module$node_modules$$material_ui$core$styles$cssUtils\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.alignProperty = alignProperty;\nexports.fontGrid = fontGrid;\nexports.responsiveProperty = responsiveProperty;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction alignProperty(_ref) {\n  var size = _ref.size,\n      grid = _ref.grid;\n  var sizeBelow = size - size % grid;\n  var sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\n\n\nfunction fontGrid(_ref2) {\n  var lineHeight = _ref2.lineHeight,\n      pixels = _ref2.pixels,\n      htmlFontSize = _ref2.htmlFontSize;\n  return pixels / (lineHeight * htmlFontSize);\n}\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n *\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\n\n\nfunction responsiveProperty(_ref3) {\n  var cssProperty = _ref3.cssProperty,\n      min = _ref3.min,\n      max = _ref3.max,\n      _ref3$unit = _ref3.unit,\n      unit = _ref3$unit === void 0 ? 'rem' : _ref3$unit,\n      _ref3$breakpoints = _ref3.breakpoints,\n      breakpoints = _ref3$breakpoints === void 0 ? [600, 960, 1280] : _ref3$breakpoints,\n      _ref3$transform = _ref3.transform,\n      transform = _ref3$transform === void 0 ? null : _ref3$transform;\n  var output = (0, _defineProperty2.default)({}, cssProperty, \"\".concat(min).concat(unit));\n  var factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(function (breakpoint) {\n    var value = min + factor * breakpoint;\n\n    if (transform !== null) {\n      value = transform(value);\n    }\n\n    output[\"@media (min-width:\".concat(breakpoint, \"px)\")] = (0, _defineProperty2.default)({}, cssProperty, \"\".concat(Math.round(value * 10000) / 10000).concat(unit));\n  });\n  return output;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$defineProperty"]],"~:properties",["^5",["responsiveProperty","__esModule","value","alignProperty","fontGrid"]],"~:compiled-at",1570448038691,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$material_ui$core$styles$cssUtils.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,sDAAA,CAA0E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG9GC,MAAAA,CAAyBH,OAAA,CAAQ,kEAAR,CAE7BI,OAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAGAJ,QAAAK,cAAA,CAMAA,QAAsB,CAACC,IAAD,CAAO,CAAA,IACvBC,KAAOD,IAAAC,KADgB,CAEvBC,KAAOF,IAAAE,KACPC,KAAAA,CAAYF,IAAZE,CAAmBF,IAAnBE,CAA0BD,IAC1BE,KAAAA,CAAYD,IAAZC,CAAwBF,IAC5B,OAAOD,KAAA,CAAOE,IAAP,CAAmBC,IAAnB,CAA+BH,IAA/B,CAAsCE,IAAtC,CAAkDC,IAL9B,CAL7BV,QAAAW,SAAA,CAgBAA,QAAiB,CAACC,KAAD,CAAQ,CAIvB,MAFaA,MAAAC,OAEb,EAHiBD,KAAAE,WAGjB,CADmBF,KAAAG,aACnB,CAJuB,CAfzBf,QAAAgB,mBAAA;AAuDAA,QAA2B,CAACC,KAAD,CAAQ,CAAA,IAC7BC,YAAcD,KAAAC,YADe,CAE7BC,IAAMF,KAAAE,IAFuB,CAG7BC,IAAMH,KAAAG,IAHuB,CAI7BC,WAAaJ,KAAAK,KAJgB,CAK7BA,KAAsB,IAAK,EAApB,GAAAD,UAAA,CAAwB,KAAxB,CAAgCA,UACvCE,WAAAA,CAAoBN,KAAAO,YACpBA,WAAAA,CAAoC,IAAK,EAA3B,GAAAD,UAAA,CAA+B,CAAC,GAAD,CAAM,GAAN,CAAW,IAAX,CAA/B,CAAkDA,UAChEE,MAAAA,CAAkBR,KAAAS,UAPtB,KAQIA,UAAgC,IAAK,EAAzB,GAAAD,KAAA,CAA6B,IAA7B,CAAoCA,KARpD,CASIE,OAAS,CAAC,CAAA,CAAGC,gBAAAC,QAAJ,EAA8B,EAA9B,CAAkCX,WAAlC,CAA+C,EAAAY,OAAA,CAAUX,GAAV,CAAAW,OAAA,CAAsBR,IAAtB,CAA/C,CATb,CAUIS,QAAUX,GAAVW,CAAgBZ,GAAhBY,EAAuBP,UAAA,CAAYA,UAAAQ,OAAZ,CAAiC,CAAjC,CAC3BR,WAAAS,QAAA,CAAoB,QAAS,CAACC,UAAD,CAAa,CACxC,IAAI9B,MAAQe,GAARf,CAAc2B,MAAd3B,CAAuB8B,UAET,KAAlB,GAAIR,SAAJ;CACEtB,KADF,CACUsB,SAAA,CAAUtB,KAAV,CADV,CAIAuB,OAAA,CAAO,oBAAAG,OAAA,CAA4BI,UAA5B,CAAwC,KAAxC,CAAP,CAAA,CAAyD,CAAC,CAAA,CAAGN,gBAAAC,QAAJ,EAA8B,EAA9B,CAAkCX,WAAlC,CAA+C,EAAAY,OAAA,CAAUK,IAAAC,MAAA,CAAmB,GAAnB,CAAWhC,KAAX,CAAV,CAAsC,GAAtC,CAAA0B,OAAA,CAAoDR,IAApD,CAA/C,CAPjB,CAA1C,CASA,OAAOK,OArB0B,CArDnC,KAAIC,iBAAmB3B,MAAA,CAAuBH,OAAA,CAAQ,2DAAR,CAAvB,CAZ2F;\",\n\"sources\":[\"node_modules/@material-ui/core/styles/cssUtils.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$material_ui$core$styles$cssUtils\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.alignProperty = alignProperty;\\nexports.fontGrid = fontGrid;\\nexports.responsiveProperty = responsiveProperty;\\n\\nvar _defineProperty2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/defineProperty\\\"));\\n\\nfunction alignProperty(_ref) {\\n  var size = _ref.size,\\n      grid = _ref.grid;\\n  var sizeBelow = size - size % grid;\\n  var sizeAbove = sizeBelow + grid;\\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\\n} // fontGrid finds a minimal grid (in rem) for the fontSize values so that the\\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\\n// without changing the relative line height\\n\\n\\nfunction fontGrid(_ref2) {\\n  var lineHeight = _ref2.lineHeight,\\n      pixels = _ref2.pixels,\\n      htmlFontSize = _ref2.htmlFontSize;\\n  return pixels / (lineHeight * htmlFontSize);\\n}\\n/**\\n * generate a responsive version of a given CSS property\\n * @example\\n * responsiveProperty({\\n *   cssProperty: 'fontSize',\\n *   min: 15,\\n *   max: 20,\\n *   unit: 'px',\\n *   breakpoints: [300, 600],\\n * })\\n *\\n * // this returns\\n *\\n * {\\n *   fontSize: '15px',\\n *   '@media (min-width:300px)': {\\n *     fontSize: '17.5px',\\n *   },\\n *   '@media (min-width:600px)': {\\n *     fontSize: '20px',\\n *   },\\n * }\\n *\\n * @param {Object} params\\n * @param {string} params.cssProperty - The CSS property to be made responsive\\n * @param {number} params.min - The smallest value of the CSS property\\n * @param {number} params.max - The largest value of the CSS property\\n * @param {string} [params.unit] - The unit to be used for the CSS property\\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\\n * @returns {Object} responsive styles for {params.cssProperty}\\n */\\n\\n\\nfunction responsiveProperty(_ref3) {\\n  var cssProperty = _ref3.cssProperty,\\n      min = _ref3.min,\\n      max = _ref3.max,\\n      _ref3$unit = _ref3.unit,\\n      unit = _ref3$unit === void 0 ? 'rem' : _ref3$unit,\\n      _ref3$breakpoints = _ref3.breakpoints,\\n      breakpoints = _ref3$breakpoints === void 0 ? [600, 960, 1280] : _ref3$breakpoints,\\n      _ref3$transform = _ref3.transform,\\n      transform = _ref3$transform === void 0 ? null : _ref3$transform;\\n  var output = (0, _defineProperty2.default)({}, cssProperty, \\\"\\\".concat(min).concat(unit));\\n  var factor = (max - min) / breakpoints[breakpoints.length - 1];\\n  breakpoints.forEach(function (breakpoint) {\\n    var value = min + factor * breakpoint;\\n\\n    if (transform !== null) {\\n      value = transform(value);\\n    }\\n\\n    output[\\\"@media (min-width:\\\".concat(breakpoint, \\\"px)\\\")] = (0, _defineProperty2.default)({}, cssProperty, \\\"\\\".concat(Math.round(value * 10000) / 10000).concat(unit));\\n  });\\n  return output;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"alignProperty\",\"_ref\",\"size\",\"grid\",\"sizeBelow\",\"sizeAbove\",\"fontGrid\",\"_ref2\",\"pixels\",\"lineHeight\",\"htmlFontSize\",\"responsiveProperty\",\"_ref3\",\"cssProperty\",\"min\",\"max\",\"_ref3$unit\",\"unit\",\"_ref3$breakpoints\",\"breakpoints\",\"_ref3$transform\",\"transform\",\"output\",\"_defineProperty2\",\"default\",\"concat\",\"factor\",\"length\",\"forEach\",\"breakpoint\",\"Math\",\"round\"]\n}\n"]