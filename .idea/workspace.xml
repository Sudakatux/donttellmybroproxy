<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c5b2bf98-e160-4987-8f50-31746baa0626" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clj/donttellmybroproxy/core.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clj/donttellmybroproxy/core.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/clj/donttellmybroproxy/proxy.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clj/donttellmybroproxy/proxy.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cljc/donttellmybroproxy/validations.cljc" beforeDir="false" afterPath="$PROJECT_DIR$/src/cljc/donttellmybroproxy/validations.cljc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cljs/donttellmybroproxy/app.cljs" beforeDir="false" afterPath="$PROJECT_DIR$/src/cljs/donttellmybroproxy/app.cljs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cljs/donttellmybroproxy/current_proxy.cljs" beforeDir="false" afterPath="$PROJECT_DIR$/src/cljs/donttellmybroproxy/current_proxy.cljs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/cljs/donttellmybroproxy/forms.cljs" beforeDir="false" afterPath="$PROJECT_DIR$/src/cljs/donttellmybroproxy/forms.cljs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FxmlFile" />
        <option value="CLJC Namespace" />
        <option value="ClojureScript Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1ReHiMVCx8yV54N3oiBHg7WxuG9" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="cursive.last.file.extension./home/jimmy/DevelopEnvironments/donttellmybroproxy/src/cljc" value="cljc" />
    <property name="cursive.last.file.extension./home/jimmy/DevelopEnvironments/donttellmybroproxy/src/cljs" value="cljs" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../options" />
    <property name="project.structure.last.edited" value="SDKs" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/resources/public" />
      <recent name="$PROJECT_DIR$/resources" />
    </key>
  </component>
  <component name="ReplState" timestamp="1575464396698">{:repl-history {:ide [], :local [{:command &quot;(proxy/update-response-headers! :yahoo (merge (get-in (proxy/list-proxies) [(keyword \&quot;yahoo\&quot;) :args :response :headers]) {\&quot;Bareer3\&quot; \&quot;12344\&quot;}) )&quot;, :offset 143, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/existing-headers :yahoo :response) &quot;, :offset 41, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in {} [:a :b :v])&quot;, :offset 22, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(conj [:a] :b)&quot;, :offset 14, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(clear-proxies)&quot;, :offset 15, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer\&quot; \&quot;12345\&quot;})&quot;, :offset 57, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer2\&quot; \&quot;123455\&quot;})&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer3\&quot; \&quot;123455\&quot;})&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer4\&quot; \&quot;123455\&quot;})&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer\&quot; \&quot;123455\&quot;})&quot;, :offset 58, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/existing-headers :yahoo :request)&quot;, :offset 40, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer123\&quot; \&quot;123455\&quot;})&quot;, :offset 61, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(merge {\&quot;some\&quot; \&quot;1234\&quot;} {\&quot;pepe\&quot; \&quot;ddfsdf\&quot;})&quot;, :offset 41, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bare111123\&quot; \&quot;123455\&quot;})&quot;, :offset 62, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;()&quot;, :offset 1} {:command &quot;(proxy/clear-proxies)&quot;, :offset 21, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bare23\&quot; \&quot;123455\&quot;})&quot;, :offset 58, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(def list [\&quot;yahoo.com?a=2\&quot; \&quot;yahoo.com?b=5\&quot;])&quot;, :offset 44, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(def liata [\&quot;yahoo.com?a=2\&quot; \&quot;yahoo.com?b=5\&quot;])&quot;, :offset 45, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter (re-pattern \&quot;/^yahoo.com?a=2$/\&quot;) liata)&quot;, :offset 47, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;/^yahoo.com?a=2$/\&quot;) %)  liata)&quot;, :offset 61, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;^yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 58, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;/^yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;\\^yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 57, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;\\\\d\&quot;) %)  liata)&quot;, :offset 47, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;\\\\d+\&quot;) %)  liata)&quot;, :offset 48, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;\\\\d+\&quot;) %)  liata)&quot;, :offset 51, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;\\*\&quot;) %)  liata)&quot;, :offset 49, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;*\&quot;) %)  liata)&quot;, :offset 48, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 60, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;^yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 61, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;.*\&quot;) %)  liata)&quot;, :offset 49, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;.*a=2\&quot;) %)  liata)&quot;, :offset 52, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(def matchers-test [\&quot;.*a=2\&quot; \&quot;.*b=5\&quot;])&quot;, :offset 37, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern %) \&quot;yahoo.com?a=2\&quot;) matchers-test)&quot;, :offset 67, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(keys test-interceptors) &quot;, :offset 24, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(match-interceptor)&quot;, :offset 19, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptor \&quot;yahoo.com?a=2\&quot; test-interceptors)&quot;, :offset 53, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(match-interceptor \&quot;yahoo.com?a=2\&quot; test-interceptors)&quot;, :offset 53, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors \&quot;yahoo.com?a=2\&quot; test-interceptors)&quot;, :offset 54, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;list-proxies&quot;, :offset 12, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [:yahoo :args :response :body]  (.getBytes \&quot;some string\&quot;))&quot;, :offset 93, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [:yahoo :args :response :body] \&quot;Hollo\&quot;)&quot;, :offset 74, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [:yahoo :args :response :body] (ByteArrayInputStream. (.getBytes \&quot;some string\&quot;)))&quot;, :offset 116, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(def test-interceptors {\&quot;.*a=2\&quot; \&quot;This is a content\&quot;\n                        \&quot;.*b=5\&quot; \&quot;This is another content\&quot;})&quot;, :offset 111, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-response-interceptors! :yahoo test-interceptors)&quot;, :offset 56, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-response-interceptors! :yahoo )&quot;, :offset 39} {:command &quot;(get-in (list-proxies) [:yahoo :args :interceptors :response \&quot;.*a=2\&quot;])&quot;, :offset 70, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot;}\n        :test (merge {:test \&quot;josjos\&quot;})\n        :non (merge {:test \&quot;fuck\&quot;})\n        )&quot;, :offset 122, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot;}\n        (:test)  (merge {:test \&quot;josjos\&quot;})\n        (:non) (merge {:test \&quot;fuck\&quot;})\n        )&quot;, :offset 127, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot;}\n        (get :test)  (merge {:test \&quot;josjos\&quot;})\n        (get :non) (merge {:test \&quot;fuck\&quot;})\n        )&quot;, :offset 135, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot;}\n        (contains? :test)  (merge {:test \&quot;josjos\&quot;})\n        (contains? :non) (merge {:test \&quot;fuck\&quot;})\n        )&quot;, :offset 147, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt;&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot;}\n        (contains? :test)  (merge {:test \&quot;josjos\&quot;})\n        (contains? :non) (merge {:test \&quot;fuck\&quot;})\n        )&quot;, :offset 148, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt;&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot;}\n        (get :test)  (merge {:test \&quot;josjos\&quot;})\n        (get :non) (merge {:test \&quot;fuck\&quot;})\n        )&quot;, :offset 136, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot;}\n        #(contains? :test)  (merge {:test \&quot;josjos\&quot;})\n        #(contains? :non) (merge {:test \&quot;fuck\&quot;})\n        )&quot;, :offset 149, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt;&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot;}\n        #(contains? :test)  (merge {:test \&quot;josjos\&quot;})\n        #(contains? :non) (merge {:test \&quot;fuck\&quot;})\n        )&quot;, :offset 150, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt;&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot; }\n        #(contains? :test)  (merge {:test \&quot;josjos\&quot;})\n        #(contains? :non) (merge {:test \&quot;fuck\&quot;})\n        #(contains? :other) (merge {:other \&quot;papapa\&quot;})\n        )&quot;, :offset 205, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot; }\n        #(contains? :test)  (merge {:test \&quot;josjos\&quot;})\n        #(contains? :non) (merge {:test \&quot;fuck\&quot;})\n        #(contains? :other) (merge {:other \&quot;papapa\&quot;})\n        )&quot;, :offset 204, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt;&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot; }\n        #(contains? % :test)  (merge {:test \&quot;josjos\&quot;})\n        #(contains? % :non) (merge {:test \&quot;fuck\&quot;})\n        #(contains? % :other) (merge {:other \&quot;papapa\&quot;})\n        )&quot;, :offset 211, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(cond-&gt; {:test \&quot;lala\&quot; :other \&quot;josos\&quot; }\n        #(contains? % :test)  (merge {:test \&quot;josjos\&quot;})\n        #(contains? % :non) (merge {:test \&quot;fuck\&quot;})\n        #(contains? % :other) (merge {:other \&quot;papapa\&quot;})\n        )&quot;, :offset 210, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(contains? {:test \&quot;lala\&quot; :other \&quot;sdasdasd\&quot;} :test)&quot;, :offset 50, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(main-)&quot;, :offset 7, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(update-response-interceptors! :google {\&quot;.*a=2\&quot; {:headers {\&quot;Bareer\&quot; \&quot;123456\&quot;}}})&quot;, :offset 80, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors {} \&quot;google.com?a=2\&quot; (existing-interceptors :google :response))&quot;, :offset 82, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(existing-interceptors :google :response)&quot;, :offset 41, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(match-interceptor \&quot;google.com?a=2\&quot; (existing-interceptors :google :response))&quot;, :offset 78, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(get (existing-interceptors :google :response) \&quot;.*a=2\&quot;)&quot;, :offset 55, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors {:some \&quot;sdasd\&quot;} \&quot;google.com?a=2\&quot; (existing-interceptors :google :response))&quot;, :offset 95, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-response-interceptors! :yahoo {\&quot;.*a=2\&quot; {:body \&quot;some content\&quot;}})&quot;, :offset 71, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors {:some \&quot;sdasd\&quot;} \&quot;yahoo.com?a=2\&quot; (existing-interceptors :google :response))&quot;, :offset 94, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-response-interceptors! :yahoo {\&quot;.*a=2\&quot; {:headers {\&quot;BAreer\&quot; \&quot;123144\&quot;}}})&quot;, :offset 79, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(select-keys)&quot;, :offset 13} {:command &quot;(select-keys (get (existing-interceptors :yahoo :response) \&quot;.*a=2\&quot;) :headers)&quot;, :offset 77, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(select-keys (get-in (existing-interceptors :yahoo :response) [\&quot;.*a=2\&quot;] ) :headers)&quot;, :offset 83, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(select-keys (get-in (existing-interceptors :yahoo :response) [\&quot;.*a=2\&quot; :headers] ))&quot;, :offset 83, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(get-in (existing-interceptors :yahoo :response) [\&quot;.*a=2\&quot; :headers] )&quot;, :offset 69, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;{:headers (get-in (existing-interceptors :yahoo :response) [\&quot;.*a=2\&quot; :headers])}&quot;, :offset 79, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors {:some \&quot;sdasd\&quot;} \&quot;yahoo.com?a=2\&quot; (existing-interceptors :yahoo :response))&quot;, :offset 93, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors {:some \&quot;sdasd\&quot; :headers { }} \&quot;yahoo.com?a=2\&quot; (existing-interceptors :yahoo :response))&quot;, :offset 47} {:command &quot;(apply-interceptors {:some \&quot;sdasd\&quot; :headers { }\n                     } \&quot;yahoo.com?a=2\&quot; (existing-interceptors :yahoo :response))&quot;, :offset 128, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors {:some \&quot;sdasd\&quot; :headers {\&quot;Content-Type\&quot; \&quot;json\&quot;}\n                     } \&quot;yahoo.com?a=2\&quot; (existing-interceptors :yahoo :response))&quot;, :offset 148, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(clojure.pprint/pprint (apply-interceptors {:some \&quot;sdasd\&quot; :headers {\&quot;Content-Type\&quot; \&quot;json\&quot;}\n                                            } \&quot;yahoo.com?a=2\&quot; (existing-interceptors :yahoo :response))) &quot;, :offset 195, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors {:some \&quot;sdasd\&quot; :headers {\&quot;Content-Type\&quot; \&quot;json\&quot;}\n                                            } \&quot;yahoo.com?a=2\&quot; (existing-interceptors :yahoo :response)) &quot;, :offset 171, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(:headers (apply-interceptors {:some \&quot;sdasd\&quot; :headers {\&quot;Content-Type\&quot; \&quot;json\&quot;}\n                               } \&quot;yahoo.com?a=2\&quot; (existing-interceptors :yahoo :response)))  &quot;, :offset 169, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(def registered-proxies (atom {:yahoo {:route \&quot;/yahoo\&quot;,\n                                       :url \&quot;http://www.yahoo.com\&quot;,\n                                       :args {:request {}, :response {}, :interceptors {:response {\&quot;.*a=2\&quot; {:headers {\&quot;BAreer\&quot; \&quot;123144\&quot;}}}}}}}))&quot;, :offset 268, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors {:some \&quot;sdasd\&quot; :headers {\&quot;Content-Type\&quot; \&quot;json\&quot;}\n                               } \&quot;yahoo.com?a=2\&quot; (existing-interceptors :yahoo :response))  &quot;, :offset 160, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(-main)&quot;, :offset 7, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in (proxy/list-proxies) [:yahoo :args :interceptors :response])&quot;, :offset 49} {:command &quot;(proxy/existing-interceptors :yahoo :response \&quot;.*\&quot;)&quot;, :offset 51, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/list-proxies)&quot;, :offset 20, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(existing-interceptors :yahoo \&quot;.*\&quot; :response)&quot;, :offset 45, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(existing-interceptors :yahoo :response \&quot;.*\&quot;)&quot;, :offset 45, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(merge {:body \&quot;sososos\&quot;} {:headers {\&quot;Some-Key\&quot; \&quot;123123123\&quot;}})&quot;, :offset 61, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-response-interceptors! :yahoo {:headers {\&quot;Some-Key\&quot; \&quot;123123123\&quot;}} \&quot;.*\&quot;)&quot;, :offset 79, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(extract-existing-interceptors {:yahoo {:route \&quot;/yahoo\&quot;,\n                                        :url \&quot;http://www.yahoo.com\&quot;,\n                                        :args {:request {}, :response {}, :interceptors {\&quot;.*\&quot; {:response {:headers {\&quot;Some-Key\&quot; \&quot;123123123\&quot;}}}}}}} :yahoo :response \&quot;.*\&quot;)&quot;, :offset 294, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(merge-with into {:headers {\&quot;Some-key\&quot; \&quot;123456\&quot;}} {:headers {\&quot;Bareesr\&quot; \&quot;213342352352345\&quot;}})&quot;, :offset 91, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(merge-with into {:headers {\&quot;Some-key\&quot; \&quot;123456\&quot;, \&quot;Bareesr\&quot; \&quot;213342352352345\&quot;}} {:body \&quot;some body\&quot;})&quot;, :offset 99, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(create-new-parameters {:yahoo {:route \&quot;/yahoo\&quot;,\n                                :url \&quot;http://www.yahoo.com\&quot;,\n                                :args {:request {}, :response {}, :interceptors {\&quot;.*\&quot; {:response {:headers {\&quot;Some-Key\&quot; \&quot;123123123\&quot;}}}}}}} {:body \&quot;asdasdasd\&quot;})&quot;, :offset 268, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(list-proxies)&quot;, :offset 14, :ns &quot;donttellmybroproxy.proxy&quot;}], :remote []}}</component>
  <component name="RunManager">
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="REPL for donttellmybroproxy" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="donttellmybroproxy" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="NREPL" />
      <setting name="configType" value="SPECIFY" />
      <setting name="fixLineNumbers" value="false" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="TEST_OBJECT" value="class" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="TestNG">
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for donttellmybroproxy" />
      </list>
    </recent_temporary>
  </component>
  <component name="ServiceViewManager">
    <option name="viewStates">
      <list>
        <serviceView>
          <treeState>
            <expand />
            <select />
          </treeState>
        </serviceView>
      </list>
    </option>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c5b2bf98-e160-4987-8f50-31746baa0626" name="Default Changelist" comment="" />
      <created>1570020768287</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1570020768287</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="WindowStateProjectService">
    <state x="639" y="352" key="com.intellij.ide.util.TipDialog" timestamp="1575278143610">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="639" y="352" key="com.intellij.ide.util.TipDialog/0.0.1920.1050@0.0.1920.1050" timestamp="1575278143610" />
    <state x="637" y="261" width="789" height="596" key="find.popup" timestamp="1575040647545">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="637" y="261" width="789" height="596" key="find.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1575040647545" />
    <state x="624" y="240" key="run.anything.popup" timestamp="1575452894290">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="624" y="240" key="run.anything.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1575452894290" />
    <state x="585" y="231" width="747" height="678" key="search.everywhere.popup" timestamp="1575289668826">
      <screen x="0" y="0" width="1920" height="1050" />
    </state>
    <state x="585" y="231" width="747" height="678" key="search.everywhere.popup/0.0.1920.1050@0.0.1920.1050" timestamp="1575289668826" />
  </component>
</project>