<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c5b2bf98-e160-4987-8f50-31746baa0626" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/src/clj/donttellmybroproxy/proxy.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/clj/donttellmybroproxy/proxy.clj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FxmlFile" />
        <option value="CLJC Namespace" />
        <option value="ClojureScript Namespace" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1ReHiMVCx8yV54N3oiBHg7WxuG9" />
  <component name="PropertiesComponent">
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="cursive.last.file.extension./home/jimmy/DevelopEnvironments/donttellmybroproxy/src/cljc" value="cljc" />
    <property name="cursive.last.file.extension./home/jimmy/DevelopEnvironments/donttellmybroproxy/src/cljs" value="cljs" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../options" />
    <property name="project.structure.last.edited" value="SDKs" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/resources/public" />
      <recent name="$PROJECT_DIR$/resources" />
    </key>
  </component>
  <component name="ReplState" timestamp="1574811778817">{:repl-history {:ide [], :local [{:command &quot;(.isStarted (:instance @proxy-server)) &quot;, :offset 38, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(vals (:yahoo (proxy/list-proxies)) ) &quot;, :offset 37, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(vals (vals \n        (proxy/list-proxies)) ) &quot;, :offset 44, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;\n (vals \n        (proxy/list-proxies)) &quot;, :offset 39, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;\n (vals (vals (proxy/list-proxies)))  &quot;, :offset 36, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;\n (map val (vals (proxy/list-proxies)))  &quot;, :offset 41, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;\n (map val (first (vals (proxy/list-proxies))) )  &quot;, :offset 48, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;\n (map vals (vals (proxy/list-proxies)))   &quot;, :offset 40, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;\n (vals (proxy/list-proxies))   &quot;, :offset 29, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(start)&quot;, :offset 7, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot; (proxy/params-to-args) &quot;, :offset 23, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(vals (proxy/list-proxies)) &quot;, :offset 28, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(into [] (proxy/list-proxies)) &quot;, :offset 31, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(server) &quot;, :offset 8, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(vec (proxy/list-proxies)) &quot;, :offset 26, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(map :yahoo (vec (proxy/list-proxies)))  &quot;, :offset 39, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(map :yahoo (proxy/list-proxies))  &quot;, :offset 33, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/list-proxies)  &quot;, :offset 20, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(keys (proxy/list-proxies))   &quot;, :offset 27, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(server)&quot;, :offset 8, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(swap! registered-proxies assoc-in [key :args] {:headers \&quot;Barreer\&quot; 12345})&quot;, :offset 74, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [key :args] {:headers {\&quot;Barreer\&quot; \&quot;12345\&quot;} })&quot;, :offset 79, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [:yahoo :args] {:headers {\&quot;Referer\&quot; \&quot;hotmail.com\&quot;} })&quot;, :offset 88, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [:yahoo :args] {:headers {\&quot;Barreer\&quot; \&quot;12345\&quot;} })&quot;, :offset 82, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-request-headers! :informe {\&quot;Content-Type\&quot;} \&quot;json\&quot;)&quot;, :offset 58, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [key :args :request] {:other \&quot;dfsdf\&quot;})&quot;, :offset 73, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-request-headers! :informe {\&quot;Content-Type\&quot; \&quot;json\&quot;} )&quot;, :offset 59, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [:informe :args :request] {:other \&quot;dfsdf\&quot;})&quot;, :offset 78, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;@registered-proxies&quot;, :offset 19, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-response-headers :informe {\&quot;Some-Cool-Header\&quot; \&quot;Value\&quot;})&quot;, :offset 63, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-response-headers! :informe {\&quot;Some-Cool-Header\&quot; \&quot;Value\&quot;})&quot;, :offset 64, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;    (-main)&quot;, :offset 11, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(merge {:a 1 :b 2} {})&quot;, :offset 22, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(def lala {:request {}})&quot;, :offset 24, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(:request lala)&quot;, :offset 15, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(in-ns 'donttellmybroproxy.proxy)&quot;, :offset 33, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(update-response-headers! :yahoo {\&quot;Some-Cool-Header\&quot; \&quot;Value\&quot;})&quot;, :offset 62, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/server 3001)&quot;, :offset 19, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-response-headers! :yahoo {\&quot;Some-Cool-Header\&quot; \&quot;Value\&quot;})&quot;, :offset 68, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-response-headers! :yahoo {\&quot;Bareer\&quot; \&quot;1234\&quot;})&quot;, :offset 57, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in (proxy/list-proxies) [(keyword id) :args :request])&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in (proxy/list-proxies) [(keyword \&quot;yahoo\&quot;) :args :request])&quot;, :offset 64, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in (proxy/list-proxies) [(keyword \&quot;yahoo\&quot;) :args :response])&quot;, :offset 65, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(map (fn [el] (let [first el]))) (get-in (proxy/list-proxies) [(keyword \&quot;yahoo\&quot;) :args :response :headers])&quot;, :offset 28, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(defn to-header-key-value [])\n(get-in (proxy/list-proxies) [(keyword \&quot;yahoo\&quot;) :args :response :headers])&quot;, :offset 29} {:command &quot;(proxy/update-response-headers! :yahoo {\&quot;Bareer2\&quot; \&quot;12344\&quot;})&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-response-headers! :yahoo (merge (get-in (proxy/list-proxies) [(keyword \&quot;yahoo\&quot;) :args :response :headers]) {\&quot;Bareer2\&quot; \&quot;12344\&quot;}) )&quot;, :offset 143, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/existing-headers :yahoo :request) &quot;, :offset 40, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in (proxy/list-proxies) [(keyword \&quot;yahoo\&quot;) :args :response :headers])&quot;, :offset 74, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-response-headers! :yahoo (merge (get-in (proxy/list-proxies) [(keyword \&quot;yahoo\&quot;) :args :response :headers]) {\&quot;Bareer3\&quot; \&quot;12344\&quot;}) )&quot;, :offset 143, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/existing-headers :yahoo :response) &quot;, :offset 41, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(get-in {} [:a :b :v])&quot;, :offset 22, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(conj [:a] :b)&quot;, :offset 14, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(clear-proxies)&quot;, :offset 15, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer\&quot; \&quot;12345\&quot;})&quot;, :offset 57, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer2\&quot; \&quot;123455\&quot;})&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer3\&quot; \&quot;123455\&quot;})&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer4\&quot; \&quot;123455\&quot;})&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer\&quot; \&quot;123455\&quot;})&quot;, :offset 58, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/existing-headers :yahoo :request)&quot;, :offset 40, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bareer123\&quot; \&quot;123455\&quot;})&quot;, :offset 61, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(merge {\&quot;some\&quot; \&quot;1234\&quot;} {\&quot;pepe\&quot; \&quot;ddfsdf\&quot;})&quot;, :offset 41, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bare111123\&quot; \&quot;123455\&quot;})&quot;, :offset 62, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;()&quot;, :offset 1} {:command &quot;(proxy/list-proxies)&quot;, :offset 20, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/clear-proxies)&quot;, :offset 21, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(proxy/update-request-headers! :yahoo {\&quot;Bare23\&quot; \&quot;123455\&quot;})&quot;, :offset 58, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(main-)&quot;, :offset 7, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(def list [\&quot;yahoo.com?a=2\&quot; \&quot;yahoo.com?b=5\&quot;])&quot;, :offset 44, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(def liata [\&quot;yahoo.com?a=2\&quot; \&quot;yahoo.com?b=5\&quot;])&quot;, :offset 45, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter (re-pattern \&quot;/^yahoo.com?a=2$/\&quot;) liata)&quot;, :offset 47, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;/^yahoo.com?a=2$/\&quot;) %)  liata)&quot;, :offset 61, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;^yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 58, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;/^yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;\\^yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 59, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 57, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;\\\\d\&quot;) %)  liata)&quot;, :offset 47, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-find (re-pattern \&quot;\\\\d+\&quot;) %)  liata)&quot;, :offset 48, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;\\\\d+\&quot;) %)  liata)&quot;, :offset 51, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;\\*\&quot;) %)  liata)&quot;, :offset 49, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;*\&quot;) %)  liata)&quot;, :offset 48, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 60, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;^yahoo.com?a=2\&quot;) %)  liata)&quot;, :offset 61, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;.*\&quot;) %)  liata)&quot;, :offset 49, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern \&quot;.*a=2\&quot;) %)  liata)&quot;, :offset 52, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(def matchers-test [\&quot;.*a=2\&quot; \&quot;.*b=5\&quot;])&quot;, :offset 37, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(filter #(re-matches (re-pattern %) \&quot;yahoo.com?a=2\&quot;) matchers-test)&quot;, :offset 67, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(keys test-interceptors) &quot;, :offset 24, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(match-interceptor)&quot;, :offset 19, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptor \&quot;yahoo.com?a=2\&quot; test-interceptors)&quot;, :offset 53, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(match-interceptor \&quot;yahoo.com?a=2\&quot; test-interceptors)&quot;, :offset 53, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(apply-interceptors \&quot;yahoo.com?a=2\&quot; test-interceptors)&quot;, :offset 54, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;list-proxies&quot;, :offset 12, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [:yahoo :args :response :body]  (.getBytes \&quot;some string\&quot;))&quot;, :offset 93, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [:yahoo :args :response :body] \&quot;Hollo\&quot;)&quot;, :offset 74, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(swap! registered-proxies assoc-in [:yahoo :args :response :body] (ByteArrayInputStream. (.getBytes \&quot;some string\&quot;)))&quot;, :offset 116, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(list-proxies)&quot;, :offset 14, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(-main)&quot;, :offset 7, :ns &quot;donttellmybroproxy.core&quot;} {:command &quot;(def test-interceptors {\&quot;.*a=2\&quot; \&quot;This is a content\&quot;\n                        \&quot;.*b=5\&quot; \&quot;This is another content\&quot;})&quot;, :offset 111, :ns &quot;donttellmybroproxy.proxy&quot;} {:command &quot;(update-response-interceptors! :yahoo test-interceptors)&quot;, :offset 56, :ns &quot;donttellmybroproxy.proxy&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="REPL for donttellmybroproxy" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false" temporary="true">
      <module name="donttellmybroproxy" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="TEST_OBJECT" value="class" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="TestNG">
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <properties />
      <listeners />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Clojure REPL.REPL for donttellmybroproxy" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c5b2bf98-e160-4987-8f50-31746baa0626" name="Default Changelist" comment="" />
      <created>1570020768287</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1570020768287</updated>
    </task>
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>